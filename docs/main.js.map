{"version":3,"sources":["webpack://colamone_js/./src/ai.ts","webpack://colamone_js/./src/gamestate.ts","webpack://colamone_js/./src/view.ts","webpack://colamone_js/./src/boardgame.ts"],"names":["Aijs","wkMap","Int8Array","nearwin","sum1","sum2","isNoneNode","live1","live2","i","num","NUMBERS","flag1","flag2","panel_num","hasCanMovePanelX","number","x","y","PIECES","target_x","target_y","target_number","canMove","idx","push","turn_player","nodeList","getCanMovePanelX","length","nodeMap","evalparam","ev","isDraw","end","isEndX","line","cell_p","p","map","depth","a","b","besthand","best_score","evalMap","getNodeMap","hand","map0","sc","deepThinkAllAB","undefined","DEFAULT_EVALPARAM","GameState","this","goaled","blueScore","redScore","winner","message","demo","thisHand","thisMap","mouse_x","mouse_y","hover_piece","demo_inc","autoLog","isTouch","View","CellSize","Ratio","Img_bk_loaded","ctx","cache_on","COLOR_LINE","COLOR_PANEL_1","COLOR_PANEL_2","COLOR_PANEL_3","COLOR_PANEL_4","COLOR_PANEL_5","COLOR_PANEL_6","COLOR_SELECT","COLOR_SELECT2","COLOR_RED","COLOR_BLUE","COLOR_RED2","COLOR_BLUE2","COLOR_WHITE","CANV_SIZE","window","devicePixelRatio","Img_bk","Image","src","canv_board","document","createElement","canv_board2","canv_focus","canv_pieces","canv_shadow","canv_hover_piece","canv_overlay","canv_bk","canv_cover","canv_score","canv_cache","querySelector","getContext","width","height","canvas","style","gameState","initflg","cache_flg","clearRect","drawImage","drawBoard","drawBoard2","drawShadow","drawPieceAll","ctx_canv","drawHoverPiece","drawFocus","drawScore","drawOverlay","drawCover","ctx_bk","ctx_cover","globalAlpha","fillStyle","fillRect","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","beginPath","fillRoundRect","fontsize","Math","round","font","textBaseline","textAlign","fillText","ctx_score","blue","red","String","lineWidth","strokeStyle","moveTo","lineTo","closePath","stroke","ctx_focus","grad","createRadialGradient","addColorStop","target","canm","floor","arc","PI","ctx_board","createLinearGradient","strokeRect","ctx_board2","fill","ctx_hover","drawPiece","wkCtx","goal","wkColor","save","clip","drawBk","restore","abs","x_dot","y_dot","w","h","r","bezierCurveTo","ctx_pieces","ctx_shadow","x0","y0","x1","y1","shadow_start_x","shadow_start_y","shadow_end_x","shadow_end_y","center","px1","py1","px2","py2","px3","py3","px4","py4","ctx_overlay","bg","view","thinktime","intervalID","intervalID_log","map_list","LIMIT_1000DAY","startMap","logPointer","logArray","logArray2","storage","ev_mouseMove","e","getMousePosition","flush","ev_touchMove","preventDefault","stopPropagation","ev_mouseClick","reloadnew","copyMap","clearInterval","indexOf","isGoaled","setTimeout","updateMessage","ai","parseInt","value","ev_radioChange","setItem","getItem","innerHTML","parent","localStorage","navigator","cookieEnabled","hasItem","sKey","RegExp","escape","replace","test","cookie","unescape","sValue","_a","_b","zoom","innerHeight","innerWidth","classList","remove","add","init","addEventListener","passive","move_start","move_prev","move_next","move_end","jumpkento","tweetlog","toggle","element","documentElement","bottom","scrollHeight","clientHeight","scroll","shuffleBoard","paramObj","getParam","getMapByParam","log","decodeLog","lv","focus","onload","onerror","setTweet","isBot","setInterval","playDemo","playLog","random","calcScore","viewport","screen","setAttribute","userAgent","MSStream","w2","orientation","rate","level","endTime","startTime","Date","count","getNodeCount","plus","thinkAI","getTime","afterHand","turn","arr","red_num","blue_num","tmp","clientX","touches","event","rect","getBoundingClientRect","left","clientY","top","toFixed","endgame","JSON","stringify","GoalTop","GoalBottom","is1000day","map_json","obj","location","search","paramstr","substring","split","entry","key","decodeURIComponent","initString","logstr","wkInitMap","wklogArray","arrow","logArr","arw","match","from","to","x_vec","y_vec","url","href","lang","onLine","encodeLog","open","d","s","id","js","fjs","getElementsByTagName","getElementById","async","parentNode","insertBefore","ua","toLowerCase","Run"],"mappings":"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","file":"main.js","sourcesContent":["/* @license Copyright (c) @kurehajime / source code: https://github.com/kurehajime/colamone_js */\r\n'use strict';\r\nexport class Aijs {\r\n    /**\r\n     * Mapをコピーして返す。\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {Object.<number, number>}\r\n     */\r\n    static copyMap(wkMap) {\r\n        return new Int8Array(wkMap);\r\n    }\r\n    /**\r\n     * 終了判定(実質的勝利含む)\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @param  {boolean}  nearwin\r\n     * @return {number} 0:引き分け,1:先手勝利,-1:後手勝利\r\n     */\r\n    static isEndX(wkMap, nearwin) {\r\n        let sum1 = 0;\r\n        let sum2 = 0;\r\n        // ループだと遅いので展開\r\n        if (wkMap[0] > 0) {\r\n            sum1 += wkMap[0];\r\n        }\r\n        if (wkMap[10] > 0) {\r\n            sum1 += wkMap[10];\r\n        }\r\n        if (wkMap[20] > 0) {\r\n            sum1 += wkMap[20];\r\n        }\r\n        if (wkMap[30] > 0) {\r\n            sum1 += wkMap[30];\r\n        }\r\n        if (wkMap[40] > 0) {\r\n            sum1 += wkMap[40];\r\n        }\r\n        if (wkMap[50] > 0) {\r\n            sum1 += wkMap[50];\r\n        }\r\n        if (wkMap[5] * -1 > 0) {\r\n            sum2 += wkMap[5];\r\n        }\r\n        if (wkMap[15] * -1 > 0) {\r\n            sum2 += wkMap[15];\r\n        }\r\n        if (wkMap[25] * -1 > 0) {\r\n            sum2 += wkMap[25];\r\n        }\r\n        if (wkMap[35] * -1 > 0) {\r\n            sum2 += wkMap[35];\r\n        }\r\n        if (wkMap[45] * -1 > 0) {\r\n            sum2 += wkMap[45];\r\n        }\r\n        if (wkMap[55] * -1 > 0) {\r\n            sum2 += wkMap[55];\r\n        }\r\n        if (sum1 >= 8) {\r\n            return 1;\r\n        }\r\n        else if (sum2 <= -8) {\r\n            return -1;\r\n        }\r\n        // 手詰まりは判定\r\n        if (Aijs.isNoneNode(wkMap)) {\r\n            if (sum1 > (-1 * sum2)) {\r\n                return 1;\r\n            }\r\n            else if (sum1 < (-1 * sum2)) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        // 実質的判定勝利\r\n        if (nearwin === false && (sum1 !== 0 || sum2 !== 0)) {\r\n            let live1 = 0;\r\n            let live2 = 0;\r\n            for (let i = 0; i <= 35; i++) {\r\n                let num = Aijs.NUMBERS[i] | 0;\r\n                if (wkMap[num] > 0) {\r\n                    live1 += wkMap[num];\r\n                }\r\n                else if (wkMap[num] < 0) {\r\n                    live2 += wkMap[num];\r\n                }\r\n            }\r\n            if (sum1 > (-1 * (live2 + sum2))) {\r\n                return 1;\r\n            }\r\n            else if (-1 * sum2 > (live1 + sum1)) {\r\n                return -1;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * 引き分け判定。最後の一個を取るかどうかの判断\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {boolean}\r\n     */\r\n    static isDraw(wkMap) {\r\n        let sum1 = 0;\r\n        let sum2 = 0;\r\n        // ループだと遅いので展開\r\n        if (wkMap[0] > 0) {\r\n            sum1 += wkMap[0];\r\n        }\r\n        if (wkMap[10] > 0) {\r\n            sum1 += wkMap[10];\r\n        }\r\n        if (wkMap[20] > 0) {\r\n            sum1 += wkMap[20];\r\n        }\r\n        if (wkMap[30] > 0) {\r\n            sum1 += wkMap[30];\r\n        }\r\n        if (wkMap[40] > 0) {\r\n            sum1 += wkMap[40];\r\n        }\r\n        if (wkMap[50] > 0) {\r\n            sum1 += wkMap[50];\r\n        }\r\n        if (wkMap[5] * -1 > 0) {\r\n            sum2 -= wkMap[5];\r\n        }\r\n        if (wkMap[15] * -1 > 0) {\r\n            sum2 -= wkMap[15];\r\n        }\r\n        if (wkMap[25] * -1 > 0) {\r\n            sum2 -= wkMap[25];\r\n        }\r\n        if (wkMap[35] * -1 > 0) {\r\n            sum2 -= wkMap[35];\r\n        }\r\n        if (wkMap[45] * -1 > 0) {\r\n            sum2 -= wkMap[45];\r\n        }\r\n        if (wkMap[55] * -1 > 0) {\r\n            sum2 -= wkMap[55];\r\n        }\r\n        if (sum1 === sum2) {\r\n            if (!Aijs.isNoneNode(wkMap)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 手詰まり判定\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {boolean}\r\n     */\r\n    static isNoneNode(wkMap) {\r\n        let flag1 = false;\r\n        let flag2 = false;\r\n        for (let i = 0; i <= 35; i++) {\r\n            let panel_num = Aijs.NUMBERS[i] | 0;\r\n            if (wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Aijs.hasCanMovePanelX(panel_num, wkMap);\r\n            if (canMove === true) {\r\n                if (wkMap[panel_num] > 0) {\r\n                    flag1 = true;\r\n                }\r\n                else if (wkMap[panel_num] < 0) {\r\n                    flag2 = true;\r\n                }\r\n            }\r\n            if (flag1 && flag2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * 動かせるマスを返す。Return:[NN,NN,NN...]\r\n     * @param  {number}  panel_num\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {boolean}\r\n     */\r\n    static hasCanMovePanelX(panel_num, wkMap) {\r\n        let number = wkMap[panel_num] | 0;\r\n        let x = ~~(panel_num / 10); // [~~]=Math.floor \r\n        let y = ~~(panel_num % 10);\r\n        // アガリのコマは動かしたらダメ。何も無いマスも動かしようがない。\r\n        if ((number > 0 && y === 0) || (number < 0 && y === 5) || number === 0) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < 9; i++) {\r\n            if (Aijs.PIECES[number + 8][i] === 0) {\r\n                continue;\r\n            }\r\n            let target_x = x + ~~(i % 3) - 1;\r\n            let target_y = y + ~~(i / 3) - 1;\r\n            if (target_y < 0 || target_y > 5 || target_x > 5 || target_x < 0) {\r\n                continue;\r\n            }\r\n            let idx = target_x * 10 + target_y;\r\n            let target_number = wkMap[idx];\r\n            // 自コマとアガリのコマはとったらダメ。\r\n            if ((target_number * number > 0) || (target_number > 0 && target_y === 0) || (target_number < 0 && target_y === 5)) {\r\n                continue;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 動かせるマスを返す。Return:[NN,NN,NN...]\r\n     * @param  {number}  panel_num\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {Array.<number, number>}\r\n     */\r\n    static getCanMovePanelX(panel_num, wkMap) {\r\n        let number = wkMap[panel_num] | 0;\r\n        let x = ~~(panel_num / 10); // [~~]=Math.floor \r\n        let y = ~~(panel_num % 10);\r\n        let canMove = [];\r\n        // アガリのコマは動かしたらダメ。何も無いマスも動かしようがない。\r\n        if ((number > 0 && y === 0) || (number < 0 && y === 5) || number === 0) {\r\n            return canMove;\r\n        }\r\n        for (let i = 0; i < 9; i++) {\r\n            if (Aijs.PIECES[number + 8][i] === 0) {\r\n                continue;\r\n            }\r\n            let target_x = x + ~~(i % 3) - 1;\r\n            let target_y = y + ~~(i / 3) - 1;\r\n            if (target_y < 0 || target_y > 5 || target_x > 5 || target_x < 0) {\r\n                continue;\r\n            }\r\n            let idx = target_x * 10 + target_y;\r\n            let target_number = wkMap[idx] | 0;\r\n            // 自コマとアガリのコマはとったらダメ。\r\n            if ((target_number * number > 0) || (target_number > 0 && target_y === 0) || (target_number < 0 && target_y === 5)) {\r\n                continue;\r\n            }\r\n            canMove.push(idx);\r\n        }\r\n        return canMove;\r\n    }\r\n    /**\r\n     * 起こりうる次の一手を返す。Return:[[q,map0],[qmap1],[q,map2]...] //q=[prev,next]\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @param  {number}  turn_player\r\n     * @return {Array.<number,Array.<Array.<number, number>, Object.<number, number>>>}\r\n     */\r\n    static getNodeMap(wkMap, turn_player) {\r\n        let nodeList = [];\r\n        for (let i = 0; i <= 35; i++) {\r\n            let panel_num = Aijs.NUMBERS[i] | 0;\r\n            if (wkMap[panel_num] * turn_player <= 0 || wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Aijs.getCanMovePanelX(panel_num, wkMap);\r\n            for (let num = 0; num < canMove.length; num++) {\r\n                let nodeMap = new Int8Array(wkMap);\r\n                nodeMap[canMove[num]] = nodeMap[panel_num];\r\n                nodeMap[panel_num] = 0;\r\n                nodeList.push([[panel_num, canMove[num]], nodeMap]);\r\n            }\r\n        }\r\n        return nodeList;\r\n    }\r\n    /**\r\n     * 盤面を評価して-10000〜+10000で採点数する。\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @param  {boolean}  nearwin\r\n     * @param  {Object.<number, Array.<number>>}  evalparam\r\n     * @return {number}\r\n     */\r\n    static evalMap(wkMap, nearwin, evalparam) {\r\n        let ev = 0;\r\n        // 引き分け判定\r\n        if (Aijs.isDraw(wkMap)) {\r\n            return 0;\r\n        }\r\n        // 終局判定\r\n        let end = Aijs.isEndX(wkMap, nearwin);\r\n        if (end === 1) {\r\n            return +9999999;\r\n        }\r\n        else if (end === -1) {\r\n            return -9999999;\r\n        }\r\n        // 評価\r\n        for (let i = 0; i <= 35; i++) {\r\n            let panel_num = Aijs.NUMBERS[i] | 0;\r\n            let cell_p = 0;\r\n            let p = wkMap[panel_num];\r\n            let line;\r\n            // コマの評価値を加算\r\n            if (p > 0) {\r\n                line = 5 - (panel_num % 10);\r\n                cell_p += evalparam[p][line]; // ポジションボーナス\r\n            }\r\n            else if (p < 0) {\r\n                line = (panel_num % 10);\r\n                cell_p += evalparam[-1 * p][line] * -1;\r\n            }\r\n            // 評価値に加算。\r\n            ev += cell_p;\r\n        }\r\n        return (ev | 0);\r\n    }\r\n    /**\r\n     * よく考える\r\n     */\r\n    static deepThinkAllAB(map, turn_player, depth, a, b, nearwin, evalparam) {\r\n        let best_score = turn_player * 9999999 * -1;\r\n        let besthand;\r\n        if (depth === 0) {\r\n            best_score = Aijs.evalMap(map, nearwin, evalparam);\r\n            return [besthand, best_score];\r\n        }\r\n        if (a === void 0 || b === void 0) {\r\n            a = 9999999 * turn_player * -1;\r\n            b = 9999999 * turn_player;\r\n        }\r\n        let nodeList = Aijs.getNodeMap(map, turn_player);\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            let hand = nodeList[i][0];\r\n            let map0 = nodeList[i][1];\r\n            let sc = 0;\r\n            // 必勝            \r\n            let end = Aijs.isEndX(map0, nearwin);\r\n            if (end === turn_player) {\r\n                return [hand, 999999 * turn_player];\r\n            }\r\n            // 必敗\r\n            if (end === turn_player * -1) {\r\n                if (besthand === void 0) {\r\n                    best_score = 999999 * turn_player * -1;\r\n                    besthand = hand;\r\n                }\r\n                continue;\r\n            }\r\n            if (Aijs.isNoneNode(map0)) {\r\n                sc = 0;\r\n            }\r\n            else {\r\n                sc = Aijs.deepThinkAllAB(map0, turn_player * -1, depth - 1, b, a, nearwin, evalparam)[1];\r\n            }\r\n            if (besthand === void 0) {\r\n                best_score = sc;\r\n                besthand = hand;\r\n            }\r\n            if (turn_player === 1 && sc > best_score) {\r\n                best_score = sc;\r\n                besthand = hand;\r\n            }\r\n            else if (turn_player === -1 && sc < best_score) {\r\n                best_score = sc;\r\n                besthand = hand;\r\n            }\r\n            if (turn_player === 1 && a < best_score || turn_player === -1 && a > best_score) {\r\n                a = best_score;\r\n            }\r\n            if (turn_player === 1 && b <= best_score || turn_player === -1 && b >= best_score) {\r\n                break;\r\n            }\r\n        }\r\n        return [besthand, best_score];\r\n    }\r\n    /**\r\n     * 考える\r\n     */\r\n    static thinkAI(map, turn_player, depth, a, b, evalparam) {\r\n        let nearwin = false;\r\n        let hand = [undefined, 0];\r\n        let wkMap = new Int8Array(map);\r\n        if (!evalparam) {\r\n            evalparam = Aijs.DEFAULT_EVALPARAM;\r\n        }\r\n        if (Aijs.isEndX(wkMap, false) !== 0) {\r\n            nearwin = true;\r\n        }\r\n        hand = Aijs.deepThinkAllAB(wkMap, turn_player, depth, a, b, nearwin, evalparam);\r\n        if (hand[1] * turn_player === -999999) {\r\n            hand = Aijs.deepThinkAllAB(wkMap, turn_player, 1, a, b, nearwin, evalparam);\r\n        }\r\n        return hand;\r\n    }\r\n}\r\n/**\r\n * 駒の進める方向\r\n * @const\r\n * @type {Array.<Array.<number>>}\r\n * index+8:コマの数字\r\n */\r\nAijs.PIECES = [\r\n    [0, 0, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    [1, 0, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    [0, 0, 0,\r\n        0, 0, 0,\r\n        0, 0, 0],\r\n    [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 0, 1],\r\n    [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 0, 0]\r\n];\r\n/**\r\n * 盤の番号\r\n * @const\r\n * @type {Array.<number>}\r\n */\r\nAijs.NUMBERS = [0, 1, 2, 3, 4, 5,\r\n    10, 11, 12, 13, 14, 15,\r\n    20, 21, 22, 23, 24, 25,\r\n    30, 31, 32, 33, 34, 35,\r\n    40, 41, 42, 43, 44, 45,\r\n    50, 51, 52, 53, 54, 55];\r\n/**\r\n * 初期評価関数\r\n * @const\r\n * @type {Object.<number, Array.<number>>}\r\n */\r\nAijs.DEFAULT_EVALPARAM = [\r\n    [],\r\n    [1800, 1850, 1900, 1950, 2100, 2800],\r\n    [1800, 1860, 1920, 2100, 2400, 3800],\r\n    [1450, 1520, 1590, 1900, 2350, 4450],\r\n    [1450, 1530, 1610, 2050, 2650, 5450],\r\n    [1350, 1440, 1530, 2100, 2850, 6350],\r\n    [1350, 1450, 1550, 2250, 3150, 7350],\r\n    [1250, 1360, 1470, 2300, 3350, 8250],\r\n    [1250, 1370, 1490, 2450, 4350, 11250] //8\r\n];\r\n","export class GameState {\r\n    constructor() {\r\n        this.goaled = false;\r\n        this.turn_player = 0;\r\n        this.blueScore = 0;\r\n        this.redScore = 0;\r\n        this.winner = null;\r\n        this.message = '';\r\n        this.demo = true;\r\n        this.thisHand = undefined;\r\n        /*  let thisMap = {\r\n            0: -1, 10: -2, 20: -3, 30: -4, 40: -5, 50: -6,\r\n            1: 0, 11: -8, 21: 0, 31: 0, 41: -7, 51: 0,\r\n            2: 0, 12: 0, 22: 0, 32: 0, 42: 0, 52: 0,\r\n            3: 0, 13: 0, 23: 0, 33: 0, 43: 0, 53: 0,\r\n            4: 0, 14: 7, 24: 0, 34: 0, 44: 8, 54: 0,\r\n            5: 6, 15: 5, 25: 4, 35: 3, 45: 2, 55: 1\r\n          };*/\r\n        this.thisMap = new Int8Array([\r\n            -1, 0, 0, 0, 0, 6, 0, 0, 0, 0, -2, -8,\r\n            0, 0, 7, 5, 0, 0, 0, 0, -3, 0, 0, 0,\r\n            0, 4, 0, 0, 0, 0, -4, 0, 0, 0, 0,\r\n            3, 0, 0, 0, 0, -5, -7, 0, 0, 8, 2,\r\n            0, 0, 0, 0, -6, 0, 0, 0, 0, 1\r\n        ]);\r\n        this.mouse_x = 0;\r\n        this.mouse_y = 0;\r\n        this.hover_piece = null;\r\n        this.demo_inc = 0;\r\n        this.autoLog = false;\r\n        this.isTouch = true;\r\n    }\r\n}\r\n","import { Aijs } from \"./ai\";\r\nexport class View {\r\n    constructor() {\r\n        this.CellSize = 0;\r\n        this.Ratio = 1;\r\n        this.Img_bk_loaded = false;\r\n        this.ctx = null;\r\n        this.cache_on = false;\r\n        this.COLOR_LINE = '#333333';\r\n        this.COLOR_PANEL_1 = '#660033';\r\n        this.COLOR_PANEL_2 = '#004466';\r\n        this.COLOR_PANEL_3 = '#FFFFFF';\r\n        this.COLOR_PANEL_4 = '#111111';\r\n        this.COLOR_PANEL_5 = '#444444';\r\n        this.COLOR_PANEL_6 = '#888888';\r\n        this.COLOR_SELECT = '#7fed7f';\r\n        this.COLOR_SELECT2 = '#148d14';\r\n        this.COLOR_RED = '#E60073';\r\n        this.COLOR_BLUE = '#0099E6';\r\n        this.COLOR_RED2 = '#E60073';\r\n        this.COLOR_BLUE2 = '#0099E6';\r\n        this.COLOR_WHITE = '#FFFFFF';\r\n        this.CANV_SIZE = 0;\r\n        this.PIECES = {\r\n            '1': [1, 1, 1,\r\n                1, 0, 1,\r\n                1, 1, 1],\r\n            '2': [1, 1, 1,\r\n                1, 0, 1,\r\n                1, 0, 1],\r\n            '3': [1, 1, 1,\r\n                0, 0, 0,\r\n                1, 1, 1],\r\n            '4': [1, 1, 1,\r\n                0, 0, 0,\r\n                1, 0, 1],\r\n            '5': [1, 0, 1,\r\n                0, 0, 0,\r\n                1, 0, 1],\r\n            '6': [1, 0, 1,\r\n                0, 0, 0,\r\n                0, 1, 0],\r\n            '7': [0, 1, 0,\r\n                0, 0, 0,\r\n                0, 1, 0],\r\n            '8': [0, 1, 0,\r\n                0, 0, 0,\r\n                0, 0, 0],\r\n            '-1': [1, 1, 1,\r\n                1, 0, 1,\r\n                1, 1, 1],\r\n            '-2': [1, 0, 1,\r\n                1, 0, 1,\r\n                1, 1, 1],\r\n            '-3': [1, 1, 1,\r\n                0, 0, 0,\r\n                1, 1, 1],\r\n            '-4': [1, 0, 1,\r\n                0, 0, 0,\r\n                1, 1, 1],\r\n            '-5': [1, 0, 1,\r\n                0, 0, 0,\r\n                1, 0, 1],\r\n            '-6': [0, 1, 0,\r\n                0, 0, 0,\r\n                1, 0, 1],\r\n            '-7': [0, 1, 0,\r\n                0, 0, 0,\r\n                0, 1, 0],\r\n            '-8': [0, 0, 0,\r\n                0, 0, 0,\r\n                0, 1, 0]\r\n        };\r\n        if (window.devicePixelRatio !== undefined && window.devicePixelRatio != 1) {\r\n            this.Ratio = window.devicePixelRatio;\r\n        }\r\n        this.CANV_SIZE = 500 * this.Ratio;\r\n        this.Img_bk = new Image();\r\n        this.Img_bk.src = 'bk.gif';\r\n        this.canv_board = document.createElement('canvas');\r\n        this.canv_board2 = document.createElement('canvas');\r\n        this.canv_focus = document.createElement('canvas');\r\n        this.canv_pieces = document.createElement('canvas');\r\n        this.canv_shadow = document.createElement('canvas');\r\n        this.canv_hover_piece = document.createElement('canvas');\r\n        this.canv_overlay = document.createElement('canvas');\r\n        this.canv_bk = document.createElement('canvas');\r\n        this.canv_cover = document.createElement('canvas');\r\n        this.canv_score = document.createElement('canvas');\r\n        this.canv_cache = document.createElement('canvas');\r\n    }\r\n    init() {\r\n        this.ctx = document.querySelector('#canv').getContext('2d');\r\n        this.canv_board.width = this.CANV_SIZE;\r\n        this.canv_board.height = this.CANV_SIZE;\r\n        this.canv_board2.width = this.CANV_SIZE;\r\n        this.canv_board2.height = this.CANV_SIZE;\r\n        this.canv_focus.width = this.CANV_SIZE;\r\n        this.canv_focus.height = this.CANV_SIZE;\r\n        this.canv_pieces.width = this.CANV_SIZE;\r\n        this.canv_pieces.height = this.CANV_SIZE;\r\n        this.canv_shadow.width = this.CANV_SIZE;\r\n        this.canv_shadow.height = this.CANV_SIZE;\r\n        this.canv_hover_piece.width = this.CANV_SIZE;\r\n        this.canv_hover_piece.height = this.CANV_SIZE;\r\n        this.canv_overlay.width = this.CANV_SIZE;\r\n        this.canv_overlay.height = this.CANV_SIZE;\r\n        this.canv_bk.width = this.CANV_SIZE;\r\n        this.canv_bk.height = this.CANV_SIZE;\r\n        this.canv_cover.width = this.CANV_SIZE;\r\n        this.canv_cover.height = this.CANV_SIZE;\r\n        this.canv_score.width = this.CANV_SIZE;\r\n        this.canv_score.height = this.CANV_SIZE;\r\n        this.canv_cache.width = this.CANV_SIZE;\r\n        this.canv_cache.height = this.CANV_SIZE;\r\n        this.CellSize = this.CANV_SIZE / 6;\r\n        //retina対応\r\n        this.ctx.canvas.style.width = this.CANV_SIZE / this.Ratio + \"px\";\r\n        this.ctx.canvas.style.height = this.CANV_SIZE / this.Ratio + \"px\";\r\n        this.ctx.canvas.width = this.CANV_SIZE;\r\n        this.ctx.canvas.height = this.CANV_SIZE;\r\n    }\r\n    /**\r\n     * 画面描画。\r\n     */\r\n    flush(gameState, initflg, cache_flg) {\r\n        let wkMap = new Int8Array(gameState.thisMap);\r\n        this.ctx.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if (cache_flg === false) {\r\n            this.cache_on = false;\r\n        }\r\n        // キャッシュに保存\r\n        if (cache_flg === false || this.cache_on === false) {\r\n            // 盤面を描画\r\n            this.ctx.drawImage(this.drawBoard(initflg), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // テカリを描画\r\n            this.ctx.drawImage(this.drawBoard2(initflg), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // 選択したコマを除外\r\n            if (gameState.hover_piece !== null) {\r\n                wkMap[gameState.hover_piece] = 0;\r\n            }\r\n            // 残像を表示\r\n            this.ctx.drawImage(this.drawShadow(wkMap, gameState.thisHand), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // コマを表示\r\n            this.ctx.drawImage(this.drawPieceAll(wkMap), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // キャッシュに保存\r\n            let ctx_canv = this.canv_cache.getContext('2d');\r\n            ctx_canv.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            ctx_canv.drawImage(this.ctx.canvas, 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // キャッシュ有効化\r\n            this.cache_on = true;\r\n        }\r\n        else {\r\n            // キャッシュから描画\r\n            this.ctx.drawImage(this.canv_cache, 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n        // 選択したコマを表示\r\n        this.ctx.drawImage(this.drawHoverPiece(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if ((gameState.mouse_x !== 0 || gameState.mouse_y !== 0) && gameState.demo === false) {\r\n            // フォーカスを描画\r\n            this.ctx.drawImage(this.drawFocus(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n        //スコアを表示\r\n        if (gameState.goaled || gameState.winner !== null) {\r\n            if (gameState.demo === false && gameState.autoLog == false) {\r\n                this.ctx.drawImage(this.drawScore(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            }\r\n        }\r\n        // メッセージを描画\r\n        this.ctx.drawImage(this.drawOverlay(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        // カバーを描画\r\n        if (gameState.demo === true) {\r\n            this.ctx.drawImage(this.drawCover(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n    }\r\n    /**\r\n     * 背景描画\r\n     */\r\n    drawBk() {\r\n        let ctx_bk = this.canv_bk.getContext('2d');\r\n        if (this.Img_bk_loaded) {\r\n            ctx_bk.drawImage(this.Img_bk, 0, 0, this.CANV_SIZE / this.Ratio, this.CANV_SIZE / this.Ratio, 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n        return this.canv_bk;\r\n    }\r\n    /**\r\n     * カバー描画\r\n     */\r\n    drawCover(gameState) {\r\n        // 背景\r\n        let ctx_cover = this.canv_cover.getContext('2d');\r\n        ctx_cover.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_cover.globalAlpha = 0.50;\r\n        ctx_cover.fillStyle = '#000000';\r\n        ctx_cover.fillRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        // 枠\r\n        let x = this.CellSize * 2;\r\n        let y = this.CellSize * 3.5;\r\n        ctx_cover.shadowBlur = 20;\r\n        ctx_cover.shadowColor = 'rgba(0, 0, 0, 0.3)';\r\n        ctx_cover.shadowOffsetX = 5;\r\n        ctx_cover.shadowOffsetY = 5;\r\n        ctx_cover.globalAlpha = 0.8;\r\n        ctx_cover.fillStyle = this.COLOR_WHITE;\r\n        ctx_cover.beginPath();\r\n        this.fillRoundRect(ctx_cover, x, y, this.CellSize * 2, this.CellSize * 1, this.CellSize / 7);\r\n        ctx_cover.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        ctx_cover.shadowBlur = 0;\r\n        ctx_cover.shadowOffsetX = 0;\r\n        ctx_cover.shadowOffsetY = 0;\r\n        // 文字\r\n        let fontsize = Math.round(this.CellSize * 0.5);\r\n        let message = 'Play';\r\n        message += (gameState.demo_inc % 10 == 0) ? \" \" : \"\";\r\n        ctx_cover.shadowBlur = 0;\r\n        ctx_cover.shadowOffsetX = 0;\r\n        ctx_cover.shadowOffsetY = 0;\r\n        ctx_cover.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        ctx_cover.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        ctx_cover.globalAlpha = 1;\r\n        ctx_cover.fillStyle = this.COLOR_LINE;\r\n        ctx_cover.textBaseline = 'middle';\r\n        ctx_cover.textAlign = 'center';\r\n        ctx_cover.beginPath();\r\n        ctx_cover.fillText(message, this.CellSize * 3, this.CellSize * 4);\r\n        // 文字２\r\n        message = 'colamone';\r\n        fontsize = Math.round(this.CellSize * 1);\r\n        ctx_cover.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        ctx_cover.fillStyle = this.COLOR_WHITE;\r\n        ctx_cover.shadowBlur = 0;\r\n        ctx_cover.beginPath();\r\n        ctx_cover.fillText(message, this.CellSize * 3, this.CellSize * 2);\r\n        return this.canv_cover;\r\n    }\r\n    /**\r\n     * スコア描画\r\n     */\r\n    drawScore(gameState) {\r\n        // 背景\r\n        let ctx_score = this.canv_score.getContext('2d');\r\n        let message = \"\";\r\n        let fontsize = Math.round(this.CellSize * 1.5);\r\n        let blue = this.COLOR_BLUE2;\r\n        let red = this.COLOR_RED2;\r\n        ctx_score.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_score.globalAlpha = 0.4;\r\n        ctx_score.textBaseline = 'middle';\r\n        ctx_score.textAlign = 'center';\r\n        ctx_score.shadowBlur = 10;\r\n        ctx_score.shadowColor = 'rgba(0, 0, 0, 0.5)';\r\n        ctx_score.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        // 文字\r\n        ctx_score.globalAlpha = 0.3;\r\n        ctx_score.shadowBlur = 2;\r\n        ctx_score.shadowColor = 'rgba(255, 255, 255, 1)';\r\n        ctx_score.fillStyle = red;\r\n        message = String(gameState.redScore);\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.CellSize * 1, this.CellSize * 3.8);\r\n        // 文字\r\n        message = \"8\";\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.CellSize * 2, this.CellSize * 5.3);\r\n        //線\r\n        ctx_score.lineWidth = this.CellSize * 0.2;\r\n        ctx_score.strokeStyle = red;\r\n        ctx_score.beginPath();\r\n        ctx_score.moveTo(this.CellSize * 0.4, this.CellSize * 5.55);\r\n        ctx_score.lineTo(this.CellSize * 2.6, this.CellSize * 3.55);\r\n        ctx_score.closePath();\r\n        ctx_score.stroke();\r\n        // 文字\r\n        message = String(gameState.blueScore);\r\n        ctx_score.fillStyle = blue;\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.CellSize * 4, this.CellSize * 0.7);\r\n        // 文字\r\n        message = \"8\";\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.CellSize * 5, this.CellSize * 2.3);\r\n        // 文字\r\n        ctx_score.lineWidth = this.CellSize * 0.2;\r\n        ctx_score.strokeStyle = blue;\r\n        ctx_score.beginPath();\r\n        ctx_score.moveTo(this.CellSize * 3.4, this.CellSize * 2.55);\r\n        ctx_score.lineTo(this.CellSize * 5.6, this.CellSize * 0.55);\r\n        ctx_score.closePath();\r\n        ctx_score.stroke();\r\n        return this.canv_score;\r\n    }\r\n    /**\r\n     * フォーカスを描画\r\n     */\r\n    drawFocus(gameState) {\r\n        // 選択マスを強調\r\n        let x = gameState.mouse_x - (gameState.mouse_x % this.CellSize);\r\n        let y = gameState.mouse_y - (gameState.mouse_y % this.CellSize);\r\n        let ctx_focus = this.canv_focus.getContext('2d');\r\n        let grad = ctx_focus.createRadialGradient(x, y, 0, x, y, this.CellSize);\r\n        grad.addColorStop(0.3, this.COLOR_SELECT);\r\n        grad.addColorStop(1, this.COLOR_SELECT2);\r\n        ctx_focus.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_focus.globalAlpha = 0.35;\r\n        ctx_focus.fillStyle = grad;\r\n        ctx_focus.lineWidth = 1;\r\n        ctx_focus.beginPath();\r\n        ctx_focus.fillRect(x, y, this.CellSize, this.CellSize);\r\n        if (gameState.isTouch === true && gameState.hover_piece === null) {\r\n            return this.canv_focus;\r\n        }\r\n        // 移動可能マスを強調\r\n        let target = (x / this.CellSize) * 10 + (y / this.CellSize);\r\n        if (gameState.thisMap[target] * gameState.turn_player > 0) {\r\n            let canm = Aijs.getCanMovePanelX(target, gameState.thisMap);\r\n            for (let i = 0; i <= canm.length - 1; i++) {\r\n                x = Math.floor(canm[i] / 10);\r\n                y = Math.floor(canm[i] % 10);\r\n                ctx_focus.globalAlpha = 0.6;\r\n                ctx_focus.strokeStyle = this.COLOR_SELECT;\r\n                ctx_focus.lineWidth = this.CellSize / 20;\r\n                ctx_focus.beginPath();\r\n                ctx_focus.arc(x * this.CellSize + (this.CellSize / 2), y * this.CellSize + (this.CellSize / 2), (this.CellSize / 2) - (this.CellSize / 10), 0, Math.PI * 2, false);\r\n                ctx_focus.stroke();\r\n            }\r\n        }\r\n        return this.canv_focus;\r\n    }\r\n    /**\r\n     * 盤面を描画してCANVASを返す。\r\n     */\r\n    drawBoard(initflg) {\r\n        if (initflg === false) {\r\n            return this.canv_board;\r\n        }\r\n        let ctx_board = this.canv_board.getContext('2d');\r\n        ctx_board.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        let grad = ctx_board.createLinearGradient(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        grad.addColorStop(0, this.COLOR_PANEL_6);\r\n        grad.addColorStop(0.3, this.COLOR_PANEL_5);\r\n        grad.addColorStop(1, this.COLOR_PANEL_4);\r\n        for (let x = 0; x < 6; x++) {\r\n            for (let y = 0; y < 6; y++) {\r\n                // パネル描画\r\n                ctx_board.strokeStyle = this.COLOR_LINE;\r\n                if (y === 0) {\r\n                    ctx_board.fillStyle = this.COLOR_PANEL_1;\r\n                }\r\n                else if (y == 5) {\r\n                    ctx_board.fillStyle = this.COLOR_PANEL_2;\r\n                }\r\n                else if ((x + y) % 2 === 0) {\r\n                    ctx_board.fillStyle = this.COLOR_PANEL_3;\r\n                }\r\n                else {\r\n                    ctx_board.fillStyle = this.COLOR_PANEL_4;\r\n                    ctx_board.fillStyle = grad;\r\n                }\r\n                ctx_board.beginPath();\r\n                ctx_board.fillRect(x * this.CellSize, y * this.CellSize, this.CellSize, this.CellSize);\r\n                ctx_board.strokeRect(x * this.CellSize, y * this.CellSize, this.CellSize, this.CellSize);\r\n            }\r\n        }\r\n        return this.canv_board;\r\n    }\r\n    /**\r\n     * 盤面をテカテカにする。\r\n     */\r\n    drawBoard2(initflg) {\r\n        if (initflg === false) {\r\n            return this.canv_board2;\r\n        }\r\n        let ctx_board2 = this.canv_board2.getContext('2d');\r\n        ctx_board2.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_board2.globalAlpha = 0.07;\r\n        ctx_board2.fillStyle = this.COLOR_WHITE;\r\n        ctx_board2.beginPath();\r\n        ctx_board2.arc(this.CellSize * 1, -3 * this.CellSize, 7 * this.CellSize, 0, Math.PI * 2, false);\r\n        ctx_board2.fill();\r\n        return this.canv_board2;\r\n    }\r\n    /**\r\n     * 浮遊しているコマを描画する。\r\n     */\r\n    drawHoverPiece(gameState) {\r\n        let ctx_hover = this.canv_hover_piece.getContext('2d');\r\n        ctx_hover.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        let x = gameState.mouse_x - (this.CellSize / 2);\r\n        let y = gameState.mouse_y - (this.CellSize / 2);\r\n        if (gameState.hover_piece !== null) {\r\n            this.drawPiece(ctx_hover, x, y, gameState.thisMap[gameState.hover_piece], false);\r\n        }\r\n        return this.canv_hover_piece;\r\n    }\r\n    /**\r\n     * コマを描画する。\r\n     */\r\n    drawPiece(wkCtx, x, y, number, goal) {\r\n        let wkColor;\r\n        // 外枠を描画\r\n        if (number === 0) {\r\n            return wkCtx;\r\n        }\r\n        else if (number > 0) {\r\n            wkColor = this.COLOR_BLUE;\r\n        }\r\n        else {\r\n            wkColor = this.COLOR_RED;\r\n        }\r\n        let grad = this.ctx.createLinearGradient(x, y, x + this.CellSize, y + this.CellSize);\r\n        grad.addColorStop(0, 'rgb(255, 255, 255)');\r\n        grad.addColorStop(0.4, wkColor);\r\n        grad.addColorStop(1, wkColor);\r\n        wkCtx.shadowBlur = 10;\r\n        wkCtx.shadowColor = 'rgba(0, 0, 0, 1)';\r\n        wkCtx.shadowOffsetX = 2;\r\n        wkCtx.shadowOffsetY = 2;\r\n        wkCtx.fillStyle = grad;\r\n        wkCtx.beginPath();\r\n        this.fillRoundRect(wkCtx, x + this.CellSize / 10, y + this.CellSize / 10, this.CellSize - 1 * this.CellSize / 5, this.CellSize - 1 * this.CellSize / 5, this.CellSize / 7);\r\n        wkCtx.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        wkCtx.shadowBlur = 0;\r\n        wkCtx.shadowOffsetX = 0;\r\n        wkCtx.shadowOffsetY = 0;\r\n        // 曇りエフェクト\r\n        if (this.Img_bk_loaded) {\r\n            wkCtx.globalAlpha = 0.35;\r\n            wkCtx.save();\r\n            wkCtx.clip();\r\n            wkCtx.drawImage(this.drawBk(), x + this.CellSize / 10, y + this.CellSize / 10, this.CellSize - 1 * this.CellSize / 5, this.CellSize - 1 * this.CellSize / 5);\r\n            wkCtx.restore();\r\n            wkCtx.globalAlpha = 1;\r\n        }\r\n        // 文字を描画。\r\n        wkCtx.fillStyle = this.COLOR_WHITE;\r\n        let fontsize = Math.round(this.CellSize * 0.18);\r\n        wkCtx.textBaseline = 'middle';\r\n        wkCtx.textAlign = 'center';\r\n        wkCtx.font = fontsize + \"pt 'Play',Arial\";\r\n        wkCtx.beginPath();\r\n        // 数字を印字\r\n        wkCtx.fillText(String(Math.abs(number)), x + (this.CellSize / 2), y + (this.CellSize / 2));\r\n        // 点を描画\r\n        for (let i = 0; i <= this.PIECES[number].length - 1; i++) {\r\n            if (this.PIECES[number][i] === 0) {\r\n                continue;\r\n            }\r\n            let x_dot = x + this.CellSize / 4.16 + (Math.floor(this.CellSize - 1 * this.CellSize / 5) / 3) * Math.floor(i % 3.0);\r\n            let y_dot = y + this.CellSize / 4.16 + (Math.floor(this.CellSize - 1 * this.CellSize / 5) / 3) * Math.floor(i / 3.0);\r\n            wkCtx.fillStyle = this.COLOR_WHITE;\r\n            wkCtx.beginPath();\r\n            wkCtx.arc(x_dot, y_dot, this.CellSize * 0.06, 0, Math.PI * 2, false);\r\n            wkCtx.fill();\r\n        }\r\n        if (goal) { // 得点を印字\r\n            wkCtx.shadowBlur = 10;\r\n            wkCtx.shadowColor = 'rgba(0, 0, 0, 1)';\r\n            wkCtx.globalAlpha = 1;\r\n            wkCtx.fillStyle = this.COLOR_WHITE;\r\n            fontsize = Math.round(this.CellSize * 0.5);\r\n            wkCtx.textBaseline = 'middle';\r\n            wkCtx.textAlign = 'center';\r\n            wkCtx.font = 'bolder ' + fontsize + 'pt Play,Arial ';\r\n            wkCtx.beginPath();\r\n            wkCtx.fillText(String(Math.abs(number)), x + (this.CellSize / 2), y + (this.CellSize / 2));\r\n            wkCtx.globalAlpha = 1;\r\n            wkCtx.shadowColor = 'rgba(0, 0, 0, 0)';\r\n            wkCtx.shadowBlur = 0;\r\n        }\r\n        return wkCtx;\r\n    }\r\n    // 角丸\r\n    fillRoundRect(ctx, x, y, w, h, r) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + r, y);\r\n        ctx.lineTo(x + w - r, y);\r\n        ctx.bezierCurveTo(x + w, y + 0, x + w, y + 0, x + w, y + r);\r\n        ctx.lineTo(x + w, y + h - r);\r\n        ctx.bezierCurveTo(x + w, y + h, x + w, y + h, x + w - r, y + h);\r\n        ctx.lineTo(x + r, y + h);\r\n        ctx.bezierCurveTo(x + 0, y + h, x + 0, y + h, x + 0, y + h - r);\r\n        ctx.lineTo(x, y + r);\r\n        ctx.bezierCurveTo(x + 0, y + 0, x + 0, y + 0, x + r, y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    /**\r\n     * コマをすべて描画\r\n     */\r\n    drawPieceAll(wkMap) {\r\n        let ctx_pieces = this.canv_pieces.getContext('2d');\r\n        ctx_pieces.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        for (let x = 0; x < 6; x++) {\r\n            for (let y = 0; y < 6; y++) {\r\n                if (wkMap[x * 10 + y] !== 0) {\r\n                    let goal = false;\r\n                    if (wkMap[x * 10 + y] > 0 && y === 0) {\r\n                        goal = true;\r\n                    }\r\n                    else if (wkMap[x * 10 + y] < 0 && y == 5) {\r\n                        goal = true;\r\n                    }\r\n                    ctx_pieces = this.drawPiece(ctx_pieces, x * this.CellSize, y * this.CellSize, wkMap[x * 10 + y], goal);\r\n                }\r\n            }\r\n        }\r\n        return this.canv_pieces;\r\n    }\r\n    /**\r\n     * 残像を描画する。\r\n     */\r\n    drawShadow(wkMap, hand) {\r\n        let ctx_shadow = this.canv_shadow.getContext('2d');\r\n        ctx_shadow.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if (hand === undefined) {\r\n            return this.canv_shadow;\r\n        }\r\n        let x0 = (hand[0] / 10 | 0);\r\n        let y0 = hand[0] % 10;\r\n        let x1 = (hand[1] / 10 | 0);\r\n        let y1 = hand[1] % 10;\r\n        let h = this.CellSize - 1 * this.CellSize / 5;\r\n        let w = this.CellSize - 1 * this.CellSize / 5;\r\n        let x = x1 * this.CellSize + this.CellSize / 10;\r\n        let y = y1 * this.CellSize + this.CellSize / 10;\r\n        let shadow_start_x = x + w / 2;\r\n        let shadow_start_y = y + h / 2;\r\n        let shadow_end_x = shadow_start_x;\r\n        let shadow_end_y = shadow_start_y;\r\n        let number = wkMap[hand[1]];\r\n        let wkColor = '';\r\n        let center = 0;\r\n        let grad;\r\n        if (hand.length != 2) {\r\n            return this.canv_shadow;\r\n        }\r\n        if (number > 0) {\r\n            wkColor = this.COLOR_BLUE; // \"#EAEFFD\";   \r\n        }\r\n        else {\r\n            wkColor = this.COLOR_RED; // \"#FDEAFA\";           \r\n        }\r\n        if (x0 == x1 || y0 == y1) { // 直角移動\r\n            if ((x0 + y0) % 2 === 0 && y0 !== 0 && y0 != 5) {\r\n                center = 0.5;\r\n            }\r\n            else {\r\n                center = 0.3;\r\n            }\r\n            if (x0 < x1) {\r\n                x = x - w + 10;\r\n                shadow_end_x = shadow_end_x - w;\r\n            }\r\n            if (x0 > x1) {\r\n                x = x + w - 10;\r\n                shadow_end_x = shadow_end_x + w;\r\n            }\r\n            if (y0 < y1) {\r\n                y = y - h + 10;\r\n                shadow_end_y = shadow_end_y - h;\r\n            }\r\n            if (y0 > y1) {\r\n                y = y + h - 10;\r\n                shadow_end_y = shadow_end_y + h;\r\n            }\r\n            grad = ctx_shadow.createLinearGradient(shadow_start_x, shadow_start_y, shadow_end_x, shadow_end_y);\r\n            grad.addColorStop(0, wkColor);\r\n            grad.addColorStop(center, wkColor);\r\n            grad.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n            ctx_shadow.fillStyle = grad;\r\n            ctx_shadow.fillRect(x, y, h, w);\r\n        }\r\n        else { // 斜め移動\r\n            if ((x0 + y0) % 2 === 0 && y0 !== 0 && y0 != 5) {\r\n                center = 0.3;\r\n            }\r\n            else {\r\n                center = 0.5;\r\n            }\r\n            let [px1, py1, px2, py2, px3, py3, px4, py4] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n            if (x0 < x1 && y0 < y1) {\r\n                px1 = x;\r\n                py1 = y - h;\r\n                px2 = x + w;\r\n                py2 = y;\r\n                px3 = x;\r\n                py3 = y + h;\r\n                px4 = x - w;\r\n                py4 = y;\r\n                shadow_end_x = shadow_end_x - w;\r\n                shadow_end_y = shadow_end_y - h;\r\n                shadow_start_x = shadow_start_x + w * 2;\r\n                shadow_start_y = shadow_start_y + h * 2;\r\n            }\r\n            if (x0 > x1 && y0 > y1) {\r\n                px1 = x + w;\r\n                py1 = y;\r\n                px2 = x + w + w;\r\n                py2 = y + h;\r\n                px3 = x + w;\r\n                py3 = y + h + h;\r\n                px4 = x;\r\n                py4 = y + h;\r\n                shadow_end_x = shadow_end_x + w;\r\n                shadow_end_y = shadow_end_y + h;\r\n                shadow_start_x = shadow_start_x - w * 2;\r\n                shadow_start_y = shadow_start_y - h * 2;\r\n            }\r\n            if (x0 < x1 && y0 > y1) {\r\n                px1 = x;\r\n                py1 = y;\r\n                px2 = x + w;\r\n                py2 = y + h;\r\n                px3 = x;\r\n                py3 = y + h + h;\r\n                px4 = x - w;\r\n                py4 = y + h;\r\n                shadow_end_x = shadow_end_x - w;\r\n                shadow_end_y = shadow_end_y + h;\r\n                shadow_start_x = shadow_start_x + w * 2;\r\n                shadow_start_y = shadow_start_y - h * 2;\r\n            }\r\n            if (x0 > x1 && y0 < y1) {\r\n                px1 = x + w;\r\n                py1 = y - h;\r\n                px2 = x + w + w;\r\n                py2 = y;\r\n                px3 = x + w;\r\n                py3 = y + h;\r\n                px4 = x;\r\n                py4 = y;\r\n                shadow_end_x = shadow_end_x + w;\r\n                shadow_end_y = shadow_end_y - h;\r\n                shadow_start_x = shadow_start_x - w * 2;\r\n                shadow_start_y = shadow_start_y + h * 2;\r\n            }\r\n            ctx_shadow.beginPath();\r\n            ctx_shadow.moveTo(px1, py1);\r\n            ctx_shadow.lineTo(px2, py2);\r\n            ctx_shadow.lineTo(px3, py3);\r\n            ctx_shadow.lineTo(px4, py4);\r\n            ctx_shadow.lineTo(px1, py1);\r\n            ctx_shadow.closePath();\r\n            grad = ctx_shadow.createLinearGradient(shadow_start_x, shadow_start_y, shadow_end_x, shadow_end_y);\r\n            grad.addColorStop(0, wkColor);\r\n            grad.addColorStop(center, wkColor);\r\n            grad.addColorStop(0.97, 'rgba(255, 255, 255, 0)');\r\n            ctx_shadow.fillStyle = grad;\r\n            ctx_shadow.fill();\r\n        }\r\n        return this.canv_shadow;\r\n    }\r\n    /**\r\n     * メッセージを描画\r\n     */\r\n    drawOverlay(gameState) {\r\n        let ctx_overlay = this.canv_overlay.getContext('2d');\r\n        let x = this.CellSize * 1.3;\r\n        let y = this.CellSize * 2.5;\r\n        ctx_overlay.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if (gameState.message === '') {\r\n            return this.canv_overlay;\r\n        }\r\n        ctx_overlay.shadowBlur = 10;\r\n        ctx_overlay.shadowColor = 'rgba(100, 100, 100, 0.5)';\r\n        ctx_overlay.shadowOffsetX = 5;\r\n        ctx_overlay.shadowOffsetY = 5;\r\n        ctx_overlay.globalAlpha = 0.9;\r\n        ctx_overlay.fillStyle = this.COLOR_WHITE;\r\n        this.fillRoundRect(ctx_overlay, x, y, this.CellSize * 3.4, this.CellSize * 1, this.CellSize / 7);\r\n        let fontsize = Math.round(this.CellSize * 0.36);\r\n        ctx_overlay.shadowBlur = 0;\r\n        ctx_overlay.shadowOffsetX = 0;\r\n        ctx_overlay.shadowOffsetY = 0;\r\n        ctx_overlay.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        ctx_overlay.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        ctx_overlay.globalAlpha = 1;\r\n        ctx_overlay.fillStyle = this.COLOR_LINE;\r\n        ctx_overlay.textBaseline = 'middle';\r\n        ctx_overlay.textAlign = 'center';\r\n        ctx_overlay.beginPath();\r\n        ctx_overlay.fillText(gameState.message, this.CellSize * 3, this.CellSize * 3);\r\n        return this.canv_overlay;\r\n    }\r\n}\r\n","/* @license Copyright (c) @kurehajime / source code: https://github.com/kurehajime/colamone_js */\r\nimport { Aijs } from \"./ai\";\r\nimport { GameState } from \"./gamestate\";\r\nimport { View } from \"./view\";\r\nexport class BoardGamejs {\r\n    constructor() {\r\n        this.gameState = new GameState();\r\n        this.view = new View();\r\n        this.thinktime = 0.0;\r\n        this.intervalID = null;\r\n        this.intervalID_log = null;\r\n        this.map_list = {};\r\n        this.LIMIT_1000DAY = 3;\r\n        this.startMap = new Int8Array();\r\n        this.logPointer = 0;\r\n        this.logArray = [];\r\n        this.logArray2 = [];\r\n        this.storage = null;\r\n        /**\r\n         * マウス移動時処理\r\n         */\r\n        this.ev_mouseMove = (e) => {\r\n            this.getMousePosition(e);\r\n            this.view.flush(this.gameState, false, true);\r\n        };\r\n        /**\r\n         * タッチ移動時処理\r\n         */\r\n        this.ev_touchMove = (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        };\r\n        /**\r\n         * マウスクリック時処理\r\n         */\r\n        this.ev_mouseClick = (e) => {\r\n            this.getMousePosition(e);\r\n            let target = Math.floor(this.gameState.mouse_x / this.view.CellSize) * 10 + Math.floor(this.gameState.mouse_y / this.view.CellSize);\r\n            if (this.gameState.winner !== null || this.logArray.length !== 0) {\r\n                this.reloadnew();\r\n                return true;\r\n            }\r\n            if (this.gameState.demo === true) {\r\n                this.gameState.demo = false;\r\n                this.gameState.thisHand = undefined;\r\n                this.gameState.thisMap = Aijs.copyMap(this.startMap);\r\n                this.logArray2 = [];\r\n                this.view.flush(this.gameState, false, false);\r\n                this.gameState.winner = null;\r\n                this.gameState.goaled = false;\r\n                this.gameState.turn_player = 1;\r\n                window.clearInterval(this.intervalID);\r\n                this.view.flush(this.gameState, false, false);\r\n                return true;\r\n            }\r\n            if (this.gameState.hover_piece === null) {\r\n                if (this.gameState.thisMap[target] * this.gameState.turn_player > 0) {\r\n                    this.gameState.hover_piece = target;\r\n                }\r\n            }\r\n            else {\r\n                if (target == this.gameState.hover_piece) {\r\n                    this.gameState.hover_piece = null;\r\n                    this.view.flush(this.gameState, false, false);\r\n                    return true;\r\n                }\r\n                let canm = Aijs.getCanMovePanelX(this.gameState.hover_piece, this.gameState.thisMap);\r\n                if (canm.indexOf(target) >= 0) {\r\n                    this.view.flush(this.gameState, false, true);\r\n                    if (this.isGoaled(this.gameState.thisMap, target, this.gameState.turn_player)) {\r\n                        this.gameState.goaled = true;\r\n                        this.view.flush(this.gameState, false, true);\r\n                        setTimeout(() => {\r\n                            this.gameState.goaled = false;\r\n                            this.view.flush(this.gameState, false, false);\r\n                        }, 2000);\r\n                    }\r\n                    this.gameState.thisMap[target] = this.gameState.thisMap[this.gameState.hover_piece];\r\n                    this.gameState.thisMap[this.gameState.hover_piece] = 0;\r\n                    this.gameState.turn_player = this.gameState.turn_player * -1;\r\n                    this.logArray2.push([this.gameState.hover_piece, target]);\r\n                    this.gameState.thisHand = [this.gameState.hover_piece, target];\r\n                    this.gameState.hover_piece = null;\r\n                    // AIが考える。\r\n                    this.gameState.message = 'thinking...';\r\n                    window.setTimeout(() => {\r\n                        this.view.flush(this.gameState, false, false);\r\n                    }, 50);\r\n                    this.updateMessage();\r\n                    if (this.gameState.winner === null) {\r\n                        window.setTimeout(() => {\r\n                            this.ai(parseInt(document.querySelector('#level').value));\r\n                            this.gameState.message = '';\r\n                            this.updateMessage();\r\n                            this.view.flush(this.gameState, false, false);\r\n                        }, 250);\r\n                    }\r\n                }\r\n            }\r\n            this.view.flush(this.gameState, false, false);\r\n            return true;\r\n        };\r\n        /**\r\n         * ラジオボタン変更時処理\r\n         */\r\n        this.ev_radioChange = () => {\r\n            let num = document.querySelector('#level').value;\r\n            this.storage.setItem('level_save', num);\r\n            if (this.storage.getItem('level_' + num) > 0) {\r\n                document.querySelector('#wins').innerHTML = this.storage.getItem('level_' + num) + ' win!';\r\n            }\r\n            else {\r\n                document.querySelector('#wins').innerHTML = '';\r\n            }\r\n            this.gameState.thisMap = Aijs.copyMap(this.startMap);\r\n            this.gameState.thisHand = undefined;\r\n            this.map_list = {};\r\n            this.logArray2 = [];\r\n            this.view.flush(this.gameState, false, false);\r\n        };\r\n        try {\r\n            if (window == parent && ('localStorage' in window) && window.localStorage !== null) {\r\n                this.storage = localStorage;\r\n                this.storage.setItem('test', 0); // Safariのプライベートモードは、できないのにできるって言うからかまをかけてみる。\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.storage = null;\r\n        }\r\n        if (this.storage === null) {\r\n            // localStorageが使えない場合\r\n            this.storage = {}; // ダミー\r\n            this.storage.getItem = function () { return undefined; };\r\n            this.storage.setItem = function () { return undefined; };\r\n            if (navigator.cookieEnabled) {\r\n                this.storage.hasItem = function (sKey) {\r\n                    return (new RegExp('(?:^|;\\\\s*)' + escape(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=')).test(document.cookie);\r\n                };\r\n                this.storage.getItem = function (sKey) {\r\n                    if (!sKey || !(new RegExp('(?:^|;\\\\s*)' + escape(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=')).test(document.cookie)) {\r\n                        return null;\r\n                    }\r\n                    return unescape(document.cookie.replace(new RegExp('(?:^|.*;\\\\s*)' + escape(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*'), '$1'));\r\n                };\r\n                this.storage.setItem = function (sKey, sValue) {\r\n                    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) {\r\n                        return;\r\n                    }\r\n                    document.cookie = escape(sKey) + '=' + escape(sValue);\r\n                };\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * ゲーム開始\r\n     */\r\n    Run() {\r\n        var _a, _b;\r\n        this.zoom(); // 小さい端末でズーム\r\n        if (window.innerHeight < window.innerWidth) {\r\n            (_a = document.querySelector('.manual')) === null || _a === void 0 ? void 0 : _a.classList.remove(\"hide\");\r\n        }\r\n        else {\r\n            (_b = document.querySelector('.manual')) === null || _b === void 0 ? void 0 : _b.classList.add(\"hide\");\r\n        }\r\n        this.gameState.turn_player = 1;\r\n        this.gameState.demo = true;\r\n        this.view.init();\r\n        if ('ontouchstart' in window) {\r\n            this.gameState.isTouch = true;\r\n        }\r\n        else {\r\n            this.gameState.isTouch = false;\r\n        }\r\n        // イベントを設定\r\n        if (this.gameState.isTouch) {\r\n            document.querySelector('#canv').addEventListener('touchstart', this.ev_mouseClick);\r\n            document.querySelector('#canv').addEventListener('touchmove', this.ev_touchMove, { passive: false });\r\n        }\r\n        else {\r\n            document.querySelector('#canv').addEventListener('mousemove', this.ev_mouseMove);\r\n            document.querySelector('#canv').addEventListener('mouseup', this.ev_mouseClick);\r\n        }\r\n        document.querySelector('#level').addEventListener('change', this.ev_radioChange);\r\n        document.querySelector('#prevprev').addEventListener('click', () => { this.move_start(); });\r\n        document.querySelector('#prev').addEventListener('click', () => { this.move_prev(); });\r\n        document.querySelector('#next').addEventListener('click', () => { this.move_next(); });\r\n        document.querySelector('#nextnext').addEventListener('click', () => { this.move_end(); });\r\n        document.querySelector('#replay').addEventListener('click', () => { this.jumpkento(); });\r\n        document.querySelector('#tweetlog').addEventListener('click', () => { this.tweetlog(); });\r\n        document.querySelector('#newgame').addEventListener('click', () => { this.reloadnew(); });\r\n        document.querySelector('#collapsible').addEventListener('click', () => {\r\n            document.querySelector('.manual').classList.toggle(\"hide\");\r\n            if (window.innerHeight > window.innerWidth) {\r\n                var element = document.documentElement;\r\n                var bottom = element.scrollHeight - element.clientHeight;\r\n                window.scroll(0, bottom);\r\n            }\r\n        });\r\n        window.addEventListener('orientationchange', this.zoom);\r\n        this.shuffleBoard();\r\n        // 連勝記録初期化\r\n        if (!this.storage.getItem('level_1')) {\r\n            this.storage.setItem('level_1', 0);\r\n        }\r\n        if (!this.storage.getItem('level_2')) {\r\n            this.storage.setItem('level_2', 0);\r\n        }\r\n        if (!this.storage.getItem('level_3')) {\r\n            this.storage.setItem('level_3', 0);\r\n        }\r\n        if (!this.storage.getItem('level_4')) {\r\n            this.storage.setItem('level_4', 0);\r\n        }\r\n        if (!this.storage.getItem('level_5')) {\r\n            this.storage.setItem('level_5', 0);\r\n        }\r\n        // レベル記憶\r\n        if (this.storage.getItem('level_save') !== undefined && this.storage.getItem('level_save') !== 'undefined' && this.storage.getItem('level_save') !== null) {\r\n            document.querySelector('#level').value = String(parseInt(this.storage.getItem('level_save')));\r\n        }\r\n        else {\r\n            this.storage.setItem('level_save', 1);\r\n            document.querySelector('#level').value = String(1);\r\n        }\r\n        //document.querySelector('#canv').classList.add(\"hue-rotate1\");\r\n        // パラメータを取得\r\n        let paramObj = this.getParam();\r\n        // 盤面を初期化\r\n        if (paramObj.init) {\r\n            this.startMap = this.getMapByParam(paramObj.init);\r\n            this.gameState.thisMap = Aijs.copyMap(this.startMap);\r\n        }\r\n        else {\r\n            this.startMap = Aijs.copyMap(this.gameState.thisMap);\r\n        }\r\n        // ログをデコード\r\n        if (paramObj.log) {\r\n            this.logArray = this.decodeLog(paramObj.log, this.startMap);\r\n        }\r\n        // レベル取得\r\n        if (paramObj.lv) {\r\n            document.querySelector('#level').value = String(parseInt(paramObj.lv));\r\n        }\r\n        if (this.logArray.length !== 0) {\r\n            document.querySelector('#log').classList.remove(\"hide\");\r\n            document.querySelector('#prevprev').classList.remove(\"hide\");\r\n            document.querySelector('#prev').classList.remove(\"hide\");\r\n            document.querySelector('#next').classList.remove(\"hide\");\r\n            document.querySelector('#nextnext').classList.remove(\"hide\");\r\n            document.querySelector('#span_replay').classList.add(\"hide\");\r\n            document.querySelector('#span_tweetlog').classList.add(\"hide\");\r\n            document.querySelector('#next').focus();\r\n        }\r\n        else {\r\n            document.querySelector('#log').classList.add(\"hide\");\r\n            document.querySelector('#prevprev').classList.add(\"hide\");\r\n            document.querySelector('#prev').classList.add(\"hide\");\r\n            document.querySelector('#next').classList.add(\"hide\");\r\n            document.querySelector('#nextnext').classList.add(\"hide\");\r\n            document.querySelector('#span_replay').classList.add(\"hide\");\r\n            document.querySelector('#span_tweetlog').classList.add(\"hide\");\r\n        }\r\n        // 画像読み込み成功時\r\n        this.view.Img_bk.onload = () => {\r\n            this.view.Img_bk_loaded = true;\r\n            this.view.flush(this.gameState, true, false);\r\n        };\r\n        // 画像読み込み失敗時\r\n        this.view.Img_bk.onerror = () => {\r\n            this.view.flush(this.gameState, true, false);\r\n        };\r\n        // もう既に読み込み終わってた時\r\n        if (this.view.Img_bk.width !== 0) {\r\n            this.view.Img_bk_loaded = true;\r\n            this.view.flush(this.gameState, true, false);\r\n        }\r\n        // 2.5秒後に強制描画※Googleの検索結果から飛ぶとなぜか描画が走らない事があるので。\r\n        setTimeout(() => {\r\n            if (this.view.Img_bk.width !== 0) {\r\n                this.view.Img_bk_loaded = true;\r\n            }\r\n            this.view.flush(this.gameState, true, false);\r\n        }, 2500);\r\n        this.updateMessage();\r\n        this.setTweet(); // ツイートボタンを生成\r\n        if (this.logArray.length === 0) {\r\n            if (this.isBot() == false) {\r\n                window.setTimeout(() => {\r\n                    if (this.gameState.demo == true) {\r\n                        this.intervalID = window.setInterval(() => { this.playDemo(); }, 400);\r\n                        this.playDemo();\r\n                    }\r\n                }, 500);\r\n            }\r\n        }\r\n        else {\r\n            this.gameState.demo = false;\r\n            this.gameState.autoLog = true;\r\n            this.intervalID_log = window.setInterval(() => { this.playLog(); }, 1000);\r\n        }\r\n        this.gameState.goaled = false;\r\n        this.view.flush(this.gameState, true, false);\r\n    }\r\n    /**\r\n     * Demoを再生\r\n     */\r\n    playDemo() {\r\n        if (this.intervalID !== null) {\r\n            if (Math.random() > 0.3) {\r\n                this.ai(2);\r\n            }\r\n            else {\r\n                this.ai(1);\r\n            }\r\n        }\r\n        this.gameState.demo_inc++;\r\n        this.calcScore();\r\n        this.view.flush(this.gameState, false, false);\r\n        if (this.gameState.winner === 1 || this.gameState.winner === -1 || this.gameState.winner === 0) {\r\n            this.gameState.goaled = true;\r\n            this.gameState.winner = null;\r\n            this.view.flush(this.gameState, false, false);\r\n            this.shuffleBoard();\r\n        }\r\n        if (this.gameState.demo_inc > 42) {\r\n            window.clearInterval(this.intervalID);\r\n        }\r\n    }\r\n    /**\r\n     * Logを再生\r\n     */\r\n    playLog() {\r\n        if (this.intervalID_log !== null && this.gameState.autoLog == true) {\r\n            this.move_next();\r\n        }\r\n        else {\r\n            clearInterval(this.intervalID_log);\r\n        }\r\n    }\r\n    /**\r\n     * 小さい画面ではViewportを固定化\r\n     */\r\n    zoom() {\r\n        let viewport = document.querySelector('meta[name=viewport]');\r\n        if (screen.width < 500 && screen.height < 500) {\r\n            if (screen.width < screen.height) {\r\n                viewport.setAttribute('content', 'width=500,user-scalable=no');\r\n            }\r\n            else {\r\n                viewport.setAttribute('content', 'height=500,user-scalable=no');\r\n            }\r\n        }\r\n        else if (screen.width < 500) {\r\n            viewport.setAttribute('content', 'width=500,user-scalable=no');\r\n        }\r\n        else if (screen.height < 500) {\r\n            viewport.setAttribute('content', 'height=500,user-scalable=no');\r\n        }\r\n        // iOS9のViewportはなぜか機能してくれない。\r\n        if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) {\r\n            let w = screen.width;\r\n            let w2 = 520;\r\n            if (Math.abs(window.orientation) !== 0) {\r\n                w = screen.height;\r\n                w2 = 900;\r\n            }\r\n            let rate = Math.round((w / w2) * 1000) / 1000.0;\r\n            if (rate == Math.round(rate)) { // iOS 9のViewportは整数指定すると機能しない\r\n                rate += 0.0001;\r\n            }\r\n            viewport.setAttribute('content', 'initial-scale=' + rate + ', minimum-scale=' + rate + ', maximum-scale=' + rate + ', user-scalable=no');\r\n        }\r\n    }\r\n    /**\r\n     * AIに考えてもらう。\r\n     */\r\n    ai(level) {\r\n        let hand;\r\n        let startTime = new Date();\r\n        let endTime;\r\n        // 終盤になったら長考してみる。\r\n        let count = this.getNodeCount(this.gameState.thisMap) / 2;\r\n        let plus = 0;\r\n        switch (level) {\r\n            case 1:\r\n                if (count <= 7) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 2:\r\n                if (count <= 8) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 3:\r\n                if (count <= 10) {\r\n                    plus++;\r\n                }\r\n                if (count <= 6) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 4:\r\n                if (count <= 11) {\r\n                    plus++;\r\n                }\r\n                if (count <= 7) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 5:\r\n                if (count > 16) {\r\n                    plus--;\r\n                }\r\n                if (count <= 12) {\r\n                    plus++;\r\n                }\r\n                if (count <= 8) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 6:\r\n                if (count > 16) {\r\n                    plus--;\r\n                }\r\n                if (count <= 12) {\r\n                    plus++;\r\n                }\r\n                if (count <= 8) {\r\n                    plus++;\r\n                }\r\n                break;\r\n        }\r\n        hand = Aijs.thinkAI(this.gameState.thisMap, this.gameState.turn_player, level + plus + 1, undefined, undefined, undefined)[0];\r\n        this.gameState.thisHand = hand;\r\n        if (hand) {\r\n            if (this.isGoaled(this.gameState.thisMap, hand[1], this.gameState.turn_player)) {\r\n                this.gameState.goaled = true;\r\n                this.view.flush(this.gameState, false, true);\r\n                setTimeout(() => {\r\n                    this.gameState.goaled = false;\r\n                    this.view.flush(this.gameState, false, false);\r\n                }, 2000);\r\n            }\r\n            this.gameState.thisMap[hand[1]] = this.gameState.thisMap[hand[0]];\r\n            this.gameState.thisMap[hand[0]] = 0;\r\n            this.logArray2.push([hand[0], hand[1]]);\r\n            // //フォーカス座標を移す。\r\n            // mouse_x = Math.floor(hand[1] / 10)*cellSize+1\r\n            // mouse_y = Math.floor(hand[1] % 10)*cellSize+1\r\n        }\r\n        this.gameState.turn_player = this.gameState.turn_player * -1;\r\n        endTime = new Date();\r\n        this.thinktime = (endTime.getTime() - startTime.getTime()) / 1000;\r\n    }\r\n    /**\r\n     * ゴールしたか\r\n     */\r\n    isGoaled(map, afterHand, turn) {\r\n        if (turn > 0) {\r\n            if (afterHand % 10 === 0) {\r\n                return true;\r\n            }\r\n        }\r\n        else if (turn < 0) {\r\n            if (afterHand % 10 === 5) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 盤面をシャッフル。\r\n     */\r\n    shuffleBoard() {\r\n        // クリア\r\n        for (let num in this.gameState.thisMap) {\r\n            this.gameState.thisMap[num] = 0;\r\n        }\r\n        let arr = [1, 2, 3, 4, 5, 6, 7, 8];\r\n        let red_num = [0, 10, 20, 30, 40, 50, 11, 41];\r\n        let blue_num = [55, 45, 35, 25, 15, 5, 44, 14];\r\n        for (let i = arr.length - 1; i >= 0; i--) {\r\n            let r = Math.floor(Math.random() * (i + 1));\r\n            let tmp = arr[i];\r\n            arr[i] = arr[r];\r\n            arr[r] = tmp;\r\n        }\r\n        for (let num in blue_num) {\r\n            this.gameState.thisMap[blue_num[num]] = arr[num];\r\n        }\r\n        for (let num in red_num) {\r\n            this.gameState.thisMap[red_num[num]] = -1 * arr[num];\r\n        }\r\n    }\r\n    /**\r\n     * マウス位置取得\r\n     */\r\n    getMousePosition(e) {\r\n        var _a;\r\n        if (e == null) {\r\n            return;\r\n        }\r\n        if (!e.clientX) { // SmartPhone\r\n            if (e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            else if (e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            else {\r\n                e = (_a = event) === null || _a === void 0 ? void 0 : _a.touches[0];\r\n            }\r\n        }\r\n        let rect = e.target.getBoundingClientRect();\r\n        this.gameState.mouse_x = e.clientX - rect.left;\r\n        this.gameState.mouse_y = e.clientY - rect.top;\r\n        this.gameState.mouse_x = this.gameState.mouse_x * this.view.Ratio;\r\n        this.gameState.mouse_y = this.gameState.mouse_y * this.view.Ratio;\r\n    }\r\n    /**\r\n     * メッセージを更新\r\n     */\r\n    updateMessage() {\r\n        this.calcScore();\r\n        let Block = '';\r\n        document.querySelector('#blue').innerHTML = 'Blue: ' + this.gameState.blueScore + '/8';\r\n        document.querySelector('#red').innerHTML = ' Red: ' + this.gameState.redScore + '/8';\r\n        document.querySelector('#time').innerHTML = '(' + (this.thinktime.toFixed(3)) + 'sec)';\r\n        if (this.logArray.length === 0) {\r\n            if (this.gameState.winner == 1) {\r\n                this.gameState.message = 'You win!';\r\n                this.storage.setItem('level_' + document.querySelector('#level').value, parseInt(this.storage.getItem('level_' + document.querySelector('#level').value)) + 1);\r\n                this.endgame();\r\n            }\r\n            else if (this.gameState.winner == -1) {\r\n                this.gameState.message = 'You lose...';\r\n                this.storage.setItem('level_' + document.querySelector('#level').value, 0);\r\n                this.endgame();\r\n            }\r\n            else if (this.gameState.winner === 0) {\r\n                if (this.map_list[JSON.stringify(this.gameState.thisMap)] >= this.LIMIT_1000DAY) {\r\n                    this.gameState.message = '3fold repetition';\r\n                }\r\n                else {\r\n                    this.gameState.message = '-- Draw --';\r\n                }\r\n                this.endgame();\r\n            }\r\n        }\r\n        if (this.storage.getItem('level_' + document.querySelector('#level').value) > 0) {\r\n            document.querySelector('#wins').innerHTML = this.storage.getItem('level_' + document.querySelector('#level').value) + ' win!';\r\n        }\r\n        else {\r\n            document.querySelector('#wins').innerHTML = '';\r\n        }\r\n    }\r\n    /**\r\n     * ゲーム終了\r\n     */\r\n    endgame() {\r\n        if (this.logArray.length === 0) {\r\n            document.querySelector('#span_replay').classList.remove(\"hide\");\r\n            document.querySelector('#span_tweetlog').classList.remove(\"hide\");\r\n        }\r\n    }\r\n    /**\r\n     * 得点計算。\r\n     */\r\n    calcScore() {\r\n        let sum1 = 0;\r\n        let sum2 = 0;\r\n        let GoalTop = [0, 10, 20, 30, 40, 50];\r\n        let GoalBottom = [5, 15, 25, 35, 45, 55];\r\n        // 点数勝利        \r\n        for (let i in GoalTop) {\r\n            if (this.gameState.thisMap[GoalTop[i]] * 1 > 0) {\r\n                sum1 += this.gameState.thisMap[GoalTop[i]];\r\n            }\r\n        }\r\n        for (let i in GoalBottom) {\r\n            if (this.gameState.thisMap[GoalBottom[i]] * -1 > 0) {\r\n                sum2 += this.gameState.thisMap[GoalBottom[i]];\r\n            }\r\n        }\r\n        if (sum1 >= 8) {\r\n            this.gameState.winner = 1;\r\n        }\r\n        else if (sum2 <= -8) {\r\n            this.gameState.winner = -1;\r\n        }\r\n        // 手詰まりは判定\r\n        if (this.isNoneNode(this.gameState.thisMap)) {\r\n            if (Math.abs(sum1) > Math.abs(sum2)) {\r\n                this.gameState.winner = 1;\r\n            }\r\n            else if (Math.abs(sum1) < Math.abs(sum2)) { // 引き分けは後攻勝利\r\n                this.gameState.winner = -1;\r\n            }\r\n            else if (Math.abs(sum1) == Math.abs(sum2)) {\r\n                this.gameState.winner = 0;\r\n            }\r\n        }\r\n        else {\r\n            if (this.is1000day(this.gameState.thisMap) === true) {\r\n                this.gameState.winner = 0;\r\n            }\r\n        }\r\n        this.gameState.blueScore = Math.abs(sum1);\r\n        this.gameState.redScore = Math.abs(sum2);\r\n    }\r\n    /**\r\n     * 手詰まり判定。\r\n     */\r\n    isNoneNode(wkMap) {\r\n        let flag1 = false;\r\n        let flag2 = false;\r\n        for (let panel_num in wkMap) {\r\n            if (wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Aijs.getCanMovePanelX(parseInt(panel_num), wkMap);\r\n            if (canMove.length !== 0) {\r\n                if (wkMap[panel_num] > 0) {\r\n                    flag1 = true;\r\n                }\r\n                else if (wkMap[panel_num] < 0) {\r\n                    flag2 = true;\r\n                }\r\n            }\r\n            if (flag1 && flag2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * 千日手\r\n     */\r\n    is1000day(wkMap) {\r\n        let map_json = JSON.stringify(wkMap);\r\n        if (this.map_list[map_json] === undefined) {\r\n            this.map_list[map_json] = 1;\r\n            return false;\r\n        }\r\n        else {\r\n            this.map_list[map_json] += 1;\r\n        }\r\n        if (this.map_list[map_json] >= this.LIMIT_1000DAY) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 手の数を取得\r\n     */\r\n    getNodeCount(wkMap) {\r\n        let count = 0;\r\n        for (let panel_num in wkMap) {\r\n            if (wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Aijs.getCanMovePanelX(parseInt(panel_num), wkMap);\r\n            count += canMove.length;\r\n        }\r\n        return count;\r\n    }\r\n    /**\r\n     * パラメータ取得\r\n     */\r\n    getParam() {\r\n        let obj = {};\r\n        if (1 < document.location.search.length) {\r\n            let paramstr = document.location.search.substring(1).split('&');\r\n            for (let i = 0; i < paramstr.length; i++) {\r\n                let entry = paramstr[i].split('=');\r\n                let key = decodeURIComponent(entry[0]);\r\n                let value = decodeURIComponent(entry[1]);\r\n                obj[key] = decodeURIComponent(value);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    /**\r\n     * パタメータから初期配置を取得\r\n     */\r\n    getMapByParam(initString) {\r\n        let wkMap;\r\n        if (initString) {\r\n            wkMap = Aijs.copyMap(this.gameState.thisMap);\r\n            // クリア\r\n            for (let num in wkMap) {\r\n                wkMap[num] = 0;\r\n            }\r\n            let arr = initString.split(',');\r\n            if (arr.length < 8) {\r\n                arr = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\r\n            }\r\n            let red_num = [0, 10, 20, 30, 40, 50, 11, 41];\r\n            let blue_num = [55, 45, 35, 25, 15, 5, 44, 14];\r\n            for (let num in blue_num) {\r\n                wkMap[blue_num[num]] = parseInt(arr[num]);\r\n            }\r\n            for (let num in red_num) {\r\n                wkMap[red_num[num]] = -1 * parseInt(arr[num]);\r\n            }\r\n        }\r\n        return wkMap;\r\n    }\r\n    /**\r\n     * ログをデコード。\r\n     */\r\n    decodeLog(logstr, wkInitMap) {\r\n        let wklogArray = [];\r\n        let wkMap = Aijs.copyMap(wkInitMap);\r\n        let arrow = {\r\n            'q': 0, 'w': 1, 'e': 2,\r\n            'a': 3, 's': 4, 'd': 5,\r\n            'z': 6, 'x': 7, 'c': 8\r\n        };\r\n        logstr = logstr.replace(/q/g, 'q,').replace(/w/g, 'w,').replace(/e/g, 'e,');\r\n        logstr = logstr.replace(/a/g, 'a,').replace(/s/g, 's,').replace(/d/g, 'd,');\r\n        logstr = logstr.replace(/z/g, 'z,').replace(/x/g, 'x,').replace(/c/g, 'c,');\r\n        let logArr = logstr.split(',');\r\n        wklogArray.push(wkMap);\r\n        for (let i = 0; i < logArr.length; i++) {\r\n            if (logArr[i] === '') {\r\n                continue;\r\n            }\r\n            let arw = arrow[logArr[i].match(/[qweasdzxc]/)[0]];\r\n            let from = parseInt(logArr[i].match(/\\d*/)[0]);\r\n            let to = (Math.floor(from / 10) + Math.floor(arw % 3) - 1) * 10 +\r\n                (Math.floor(from % 10) + Math.floor(arw / 3) - 1);\r\n            wkMap = Aijs.copyMap(wkMap);\r\n            wkMap[to] = wkMap[from];\r\n            wkMap[from] = 0;\r\n            wklogArray.push(wkMap);\r\n        }\r\n        return wklogArray;\r\n    }\r\n    /**\r\n     * ログをエンコード\r\n     */\r\n    encodeLog(wklogArray) {\r\n        let logstr = '';\r\n        let arrow = ['q', 'w', 'e',\r\n            'a', 's', 'd',\r\n            'z', 'x', 'c'];\r\n        for (let i in wklogArray) {\r\n            let from = wklogArray[i][0];\r\n            let to = wklogArray[i][1];\r\n            let x_vec = ((Math.floor(to / 10)) - Math.floor(from / 10));\r\n            let y_vec = ((Math.floor(to % 10)) - Math.floor(from % 10));\r\n            let arw = '';\r\n            if (x_vec === -1 && y_vec === -1) {\r\n                arw = 'q';\r\n            }\r\n            if (x_vec === 0 && y_vec === -1) {\r\n                arw = 'w';\r\n            }\r\n            if (x_vec === 1 && y_vec === -1) {\r\n                arw = 'e';\r\n            }\r\n            if (x_vec === -1 && y_vec === 0) {\r\n                arw = 'a';\r\n            }\r\n            if (x_vec === 0 && y_vec === 0) {\r\n                arw = 's';\r\n            }\r\n            if (x_vec === 1 && y_vec === 0) {\r\n                arw = 'd';\r\n            }\r\n            if (x_vec === -1 && y_vec === 1) {\r\n                arw = 'z';\r\n            }\r\n            if (x_vec === 0 && y_vec === 1) {\r\n                arw = 'x';\r\n            }\r\n            if (x_vec === 1 && y_vec === 1) {\r\n                arw = 'c';\r\n            }\r\n            logstr += from + arw;\r\n        }\r\n        return logstr;\r\n    }\r\n    /**\r\n     * ログを全部巻き戻す\r\n     */\r\n    move_start() {\r\n        this.logPointer = 0;\r\n        this.gameState.autoLog = false;\r\n        this.gameState.thisMap = Aijs.copyMap(this.logArray[this.logPointer]);\r\n        this.gameState.winner = null;\r\n        this.gameState.goaled = false;\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * ログを戻す\r\n     */\r\n    move_prev() {\r\n        if (this.logPointer <= 0) {\r\n            return;\r\n        }\r\n        this.gameState.autoLog = false;\r\n        this.logPointer -= 1;\r\n        this.gameState.thisMap = Aijs.copyMap(this.logArray[this.logPointer]);\r\n        this.gameState.winner = null;\r\n        this.gameState.goaled = false;\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * ログを進める\r\n     */\r\n    move_next() {\r\n        if (this.logPointer + 1 > this.logArray.length - 1) {\r\n            return;\r\n        }\r\n        this.logPointer += 1;\r\n        this.gameState.thisMap = Aijs.copyMap(this.logArray[this.logPointer]);\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * ログを最後まで進める。\r\n     */\r\n    move_end() {\r\n        this.logPointer = this.logArray.length - 1;\r\n        this.gameState.autoLog = false;\r\n        this.gameState.thisMap = Aijs.copyMap(this.logArray[this.logPointer]);\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * リセット\r\n     */\r\n    reloadnew() {\r\n        let url = document.location.href.split('?')[0];\r\n        //demo中ならdemoを終了\r\n        if (this.gameState.demo === true) {\r\n            this.ev_mouseClick(null);\r\n            return;\r\n        }\r\n        // パラメータを取得\r\n        let paramObj = this.getParam();\r\n        if (paramObj.lang) {\r\n            url += '?lang=' + paramObj.lang;\r\n        }\r\n        if (navigator.onLine) {\r\n            location.href = url;\r\n        }\r\n        else {\r\n            this.gameState.thisMap = Aijs.copyMap(this.startMap);\r\n            this.shuffleBoard();\r\n            this.logArray2 = [];\r\n            this.gameState.message = '';\r\n            this.gameState.winner = null;\r\n            this.gameState.turn_player = 1;\r\n            this.view.flush(this.gameState, false, false);\r\n        }\r\n    }\r\n    /**\r\n     * 検討画面に飛ぶ\r\n     */\r\n    jumpkento() {\r\n        let url = document.location.href.split('?')[0];\r\n        let init = '?init=' + this.startMap[55] + ',' +\r\n            this.startMap[45] + ',' +\r\n            this.startMap[35] + ',' +\r\n            this.startMap[25] + ',' +\r\n            this.startMap[15] + ',' +\r\n            this.startMap[5] + ',' +\r\n            this.startMap[44] + ',' +\r\n            this.startMap[14];\r\n        let log = '&log=' + this.encodeLog(this.logArray2);\r\n        log += '&lv=' + document.querySelector('#level').value;\r\n        location.href = url + init + log;\r\n    }\r\n    /**\r\n     * ログをツイートする。\r\n     */\r\n    tweetlog() {\r\n        let url = document.location.href.split('?')[0];\r\n        let init = '?init=' + this.startMap[55] + ',' +\r\n            this.startMap[45] + ',' +\r\n            this.startMap[35] + ',' +\r\n            this.startMap[25] + ',' +\r\n            this.startMap[15] + ',' +\r\n            this.startMap[5] + ',' +\r\n            this.startMap[44] + ',' +\r\n            this.startMap[14];\r\n        let log = '%26log=' + this.encodeLog(this.logArray2);\r\n        log += '%26lv=' + document.querySelector('#level').value;\r\n        window.open('https://twitter.com/intent/tweet?text=' + url + init + log + '%20%23colamone');\r\n    }\r\n    /**\r\n     * ツイートボタンを読み込む。\r\n     */\r\n    setTweet() {\r\n        /*jshint -W030 */\r\n        (function f(d, s, id) {\r\n            let js, fjs = d.getElementsByTagName(s)[0];\r\n            if (!d.getElementById(id)) {\r\n                js = d.createElement(s);\r\n                js.id = id;\r\n                js.async = true;\r\n                js.src = 'https://platform.twitter.com/widgets.js';\r\n                fjs.parentNode.insertBefore(js, fjs);\r\n            }\r\n        })(document, 'script', 'twitter-wjs');\r\n    }\r\n    /**\r\n     * botかどうか判定\r\n     */\r\n    isBot() {\r\n        let ua = window.navigator.userAgent.toLowerCase();\r\n        if (ua.indexOf('bot') != -1 ||\r\n            ua.indexOf('lighthouse') != -1 ||\r\n            ua.indexOf('headless') != -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nconst bg = new BoardGamejs();\r\n/**\r\n * init\r\n */\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    bg.Run();\r\n});\r\n"],"sourceRoot":""}