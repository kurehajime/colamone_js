{"version":3,"file":"main.js","mappings":"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","sources":["webpack://colamone_js/./src/logic/rule.ts","webpack://colamone_js/./src/logic/eval.ts","webpack://colamone_js/./src/logic/ai.ts","webpack://colamone_js/./src/logic/gamestate.ts","webpack://colamone_js/./src/canvas/params.ts","webpack://colamone_js/./src/canvas/utils.ts","webpack://colamone_js/./src/canvas/viewState.ts","webpack://colamone_js/./src/canvas/view.ts","webpack://colamone_js/./src/logic/boardgame.ts"],"sourcesContent":["/* @license Copyright (c) @kurehajime / source code: https://github.com/kurehajime/colamone_js */\r\n'use strict';\r\nexport class Rule {\r\n    /**\r\n     * Mapをコピーして返す。\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {Object.<number, number>}\r\n     */\r\n    static copyMap(wkMap) {\r\n        return new Int8Array(wkMap);\r\n    }\r\n    /**\r\n     * 終了判定(実質的勝利含む)\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @param  {boolean}  nearwin\r\n     * @return {number} 0:引き分け,1:先手勝利,-1:後手勝利\r\n     */\r\n    static isEndX(wkMap, nearwin) {\r\n        let sum1 = 0;\r\n        let sum2 = 0;\r\n        // ループだと遅いので展開\r\n        if (wkMap[0] > 0) {\r\n            sum1 += wkMap[0];\r\n        }\r\n        if (wkMap[10] > 0) {\r\n            sum1 += wkMap[10];\r\n        }\r\n        if (wkMap[20] > 0) {\r\n            sum1 += wkMap[20];\r\n        }\r\n        if (wkMap[30] > 0) {\r\n            sum1 += wkMap[30];\r\n        }\r\n        if (wkMap[40] > 0) {\r\n            sum1 += wkMap[40];\r\n        }\r\n        if (wkMap[50] > 0) {\r\n            sum1 += wkMap[50];\r\n        }\r\n        if (wkMap[5] * -1 > 0) {\r\n            sum2 += wkMap[5];\r\n        }\r\n        if (wkMap[15] * -1 > 0) {\r\n            sum2 += wkMap[15];\r\n        }\r\n        if (wkMap[25] * -1 > 0) {\r\n            sum2 += wkMap[25];\r\n        }\r\n        if (wkMap[35] * -1 > 0) {\r\n            sum2 += wkMap[35];\r\n        }\r\n        if (wkMap[45] * -1 > 0) {\r\n            sum2 += wkMap[45];\r\n        }\r\n        if (wkMap[55] * -1 > 0) {\r\n            sum2 += wkMap[55];\r\n        }\r\n        if (sum1 >= 8) {\r\n            return 1;\r\n        }\r\n        else if (sum2 <= -8) {\r\n            return -1;\r\n        }\r\n        // 手詰まりは判定\r\n        if (Rule.isNoneNode(wkMap)) {\r\n            if (sum1 > (-1 * sum2)) {\r\n                return 1;\r\n            }\r\n            else if (sum1 < (-1 * sum2)) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        // 実質的判定勝利\r\n        if (nearwin === false && (sum1 !== 0 || sum2 !== 0)) {\r\n            let live1 = 0;\r\n            let live2 = 0;\r\n            for (let i = 0; i <= 35; i++) {\r\n                let num = Rule.NUMBERS[i] | 0;\r\n                if (wkMap[num] > 0) {\r\n                    live1 += wkMap[num];\r\n                }\r\n                else if (wkMap[num] < 0) {\r\n                    live2 += wkMap[num];\r\n                }\r\n            }\r\n            if (sum1 > (-1 * (live2 + sum2))) {\r\n                return 1;\r\n            }\r\n            else if (-1 * sum2 > (live1 + sum1)) {\r\n                return -1;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * 引き分け判定。最後の一個を取るかどうかの判断\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {boolean}\r\n     */\r\n    static isDraw(wkMap) {\r\n        let sum1 = 0;\r\n        let sum2 = 0;\r\n        // ループだと遅いので展開\r\n        if (wkMap[0] > 0) {\r\n            sum1 += wkMap[0];\r\n        }\r\n        if (wkMap[10] > 0) {\r\n            sum1 += wkMap[10];\r\n        }\r\n        if (wkMap[20] > 0) {\r\n            sum1 += wkMap[20];\r\n        }\r\n        if (wkMap[30] > 0) {\r\n            sum1 += wkMap[30];\r\n        }\r\n        if (wkMap[40] > 0) {\r\n            sum1 += wkMap[40];\r\n        }\r\n        if (wkMap[50] > 0) {\r\n            sum1 += wkMap[50];\r\n        }\r\n        if (wkMap[5] * -1 > 0) {\r\n            sum2 -= wkMap[5];\r\n        }\r\n        if (wkMap[15] * -1 > 0) {\r\n            sum2 -= wkMap[15];\r\n        }\r\n        if (wkMap[25] * -1 > 0) {\r\n            sum2 -= wkMap[25];\r\n        }\r\n        if (wkMap[35] * -1 > 0) {\r\n            sum2 -= wkMap[35];\r\n        }\r\n        if (wkMap[45] * -1 > 0) {\r\n            sum2 -= wkMap[45];\r\n        }\r\n        if (wkMap[55] * -1 > 0) {\r\n            sum2 -= wkMap[55];\r\n        }\r\n        if (sum1 === sum2) {\r\n            if (!Rule.isNoneNode(wkMap)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 手詰まり判定\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {boolean}\r\n     */\r\n    static isNoneNode(wkMap) {\r\n        let flag1 = false;\r\n        let flag2 = false;\r\n        for (let i = 0; i <= 35; i++) {\r\n            let panel_num = Rule.NUMBERS[i] | 0;\r\n            if (wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Rule.hasCanMovePanelX(panel_num, wkMap);\r\n            if (canMove === true) {\r\n                if (wkMap[panel_num] > 0) {\r\n                    flag1 = true;\r\n                }\r\n                else if (wkMap[panel_num] < 0) {\r\n                    flag2 = true;\r\n                }\r\n            }\r\n            if (flag1 && flag2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * 動かせるマスを返す。Return:[NN,NN,NN...]\r\n     * @param  {number}  panel_num\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {boolean}\r\n     */\r\n    static hasCanMovePanelX(panel_num, wkMap) {\r\n        let number = wkMap[panel_num] | 0;\r\n        let x = ~~(panel_num / 10); // [~~]=Math.floor \r\n        let y = ~~(panel_num % 10);\r\n        // アガリのコマは動かしたらダメ。何も無いマスも動かしようがない。\r\n        if ((number > 0 && y === 0) || (number < 0 && y === 5) || number === 0) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < 9; i++) {\r\n            if (Rule.PIECES[number + 8][i] === 0) {\r\n                continue;\r\n            }\r\n            let target_x = x + ~~(i % 3) - 1;\r\n            let target_y = y + ~~(i / 3) - 1;\r\n            if (target_y < 0 || target_y > 5 || target_x > 5 || target_x < 0) {\r\n                continue;\r\n            }\r\n            let idx = target_x * 10 + target_y;\r\n            let target_number = wkMap[idx];\r\n            // 自コマとアガリのコマはとったらダメ。\r\n            if ((target_number * number > 0) || (target_number > 0 && target_y === 0) || (target_number < 0 && target_y === 5)) {\r\n                continue;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 動かせるマスを返す。Return:[NN,NN,NN...]\r\n     * @param  {number}  panel_num\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {Array.<number, number>}\r\n     */\r\n    static getCanMovePanelX(panel_num, wkMap) {\r\n        let number = wkMap[panel_num] | 0;\r\n        let x = ~~(panel_num / 10); // [~~]=Math.floor \r\n        let y = ~~(panel_num % 10);\r\n        let canMove = [];\r\n        // アガリのコマは動かしたらダメ。何も無いマスも動かしようがない。\r\n        if ((number > 0 && y === 0) || (number < 0 && y === 5) || number === 0) {\r\n            return canMove;\r\n        }\r\n        for (let i = 0; i < 9; i++) {\r\n            if (Rule.PIECES[number + 8][i] === 0) {\r\n                continue;\r\n            }\r\n            let target_x = x + ~~(i % 3) - 1;\r\n            let target_y = y + ~~(i / 3) - 1;\r\n            if (target_y < 0 || target_y > 5 || target_x > 5 || target_x < 0) {\r\n                continue;\r\n            }\r\n            let idx = target_x * 10 + target_y;\r\n            let target_number = wkMap[idx] | 0;\r\n            // 自コマとアガリのコマはとったらダメ。\r\n            if ((target_number * number > 0) || (target_number > 0 && target_y === 0) || (target_number < 0 && target_y === 5)) {\r\n                continue;\r\n            }\r\n            canMove.push(idx);\r\n        }\r\n        return canMove;\r\n    }\r\n    /**\r\n     * 起こりうる次の一手を返す。Return:[[q,map0],[qmap1],[q,map2]...] //q=[prev,next]\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @param  {number}  turn_player\r\n     * @return {Array.<number,Array.<Array.<number, number>, Object.<number, number>>>}\r\n     */\r\n    static getNodeMap(wkMap, turn_player) {\r\n        let nodeList = [];\r\n        for (let i = 0; i <= 35; i++) {\r\n            let panel_num = Rule.NUMBERS[i] | 0;\r\n            if (wkMap[panel_num] * turn_player <= 0 || wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Rule.getCanMovePanelX(panel_num, wkMap);\r\n            for (let num = 0; num < canMove.length; num++) {\r\n                let nodeMap = new Int8Array(wkMap);\r\n                nodeMap[canMove[num]] = nodeMap[panel_num];\r\n                nodeMap[panel_num] = 0;\r\n                nodeList.push([[panel_num, canMove[num]], nodeMap]);\r\n            }\r\n        }\r\n        return nodeList;\r\n    }\r\n}\r\n/**\r\n* 駒の進める方向\r\n* @const\r\n* @type {Array.<Array.<number>>}\r\n* index+8:コマの数字\r\n*/\r\nRule.PIECES = [\r\n    [0, 0, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    [1, 0, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    [0, 0, 0,\r\n        0, 0, 0,\r\n        0, 0, 0],\r\n    [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 0, 1],\r\n    [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 0, 0]\r\n];\r\n/**\r\n * 盤の番号\r\n * @const\r\n * @type {Array.<number>}\r\n */\r\nRule.NUMBERS = [0, 1, 2, 3, 4, 5,\r\n    10, 11, 12, 13, 14, 15,\r\n    20, 21, 22, 23, 24, 25,\r\n    30, 31, 32, 33, 34, 35,\r\n    40, 41, 42, 43, 44, 45,\r\n    50, 51, 52, 53, 54, 55];\r\n","/* @license Copyright (c) @kurehajime / source code: https://github.com/kurehajime/colamone_js */\r\n'use strict';\r\nimport { Rule } from \"./rule\";\r\nexport class Eval {\r\n    /**\r\n     * 盤面を評価して-10000〜+10000で採点数する。\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @param  {boolean}  nearwin\r\n     * @param  {Object.<number, Array.<number>>}  evalparam\r\n     * @return {number}\r\n     */\r\n    static evalMap(wkMap, nearwin, evalparam) {\r\n        let ev = 0;\r\n        // 引き分け判定\r\n        if (Rule.isDraw(wkMap)) {\r\n            return 0;\r\n        }\r\n        // 終局判定\r\n        let end = Rule.isEndX(wkMap, nearwin);\r\n        if (end === 1) {\r\n            return +9999999;\r\n        }\r\n        else if (end === -1) {\r\n            return -9999999;\r\n        }\r\n        // 評価\r\n        for (let i = 0; i <= 35; i++) {\r\n            let panel_num = Rule.NUMBERS[i] | 0;\r\n            let cell_p = 0;\r\n            let p = wkMap[panel_num];\r\n            let line;\r\n            // コマの評価値を加算\r\n            if (p > 0) {\r\n                line = 5 - (panel_num % 10);\r\n                cell_p += evalparam[p][line]; // ポジションボーナス\r\n            }\r\n            else if (p < 0) {\r\n                line = (panel_num % 10);\r\n                cell_p += evalparam[-1 * p][line] * -1;\r\n            }\r\n            // 評価値に加算。\r\n            ev += cell_p;\r\n        }\r\n        return (ev | 0);\r\n    }\r\n}\r\n/**\r\n * 初期評価関数\r\n * @const\r\n * @type {Object.<number, Array.<number>>}\r\n */\r\nEval.DEFAULT_EVALPARAM = [\r\n    [],\r\n    [1800, 1850, 1900, 1950, 2100, 2800],\r\n    [1800, 1860, 1920, 2100, 2400, 3800],\r\n    [1450, 1520, 1590, 1900, 2350, 4450],\r\n    [1450, 1530, 1610, 2050, 2650, 5450],\r\n    [1350, 1440, 1530, 2100, 2850, 6350],\r\n    [1350, 1450, 1550, 2250, 3150, 7350],\r\n    [1250, 1360, 1470, 2300, 3350, 8250],\r\n    [1250, 1370, 1490, 2450, 4350, 11250] //8\r\n];\r\n","/* @license Copyright (c) @kurehajime / source code: https://github.com/kurehajime/colamone_js */\r\n'use strict';\r\nimport { Rule } from \"./rule\";\r\nimport { Eval } from \"./eval\";\r\nexport class Aijs {\r\n    /**\r\n     * よく考える\r\n     */\r\n    static deepThinkAllAB(map, turn_player, depth, a, b, nearwin, evalparam) {\r\n        let best_score = turn_player * 9999999 * -1;\r\n        let besthand;\r\n        if (depth === 0) {\r\n            best_score = Eval.evalMap(map, nearwin, evalparam);\r\n            return [besthand, best_score];\r\n        }\r\n        if (a === void 0 || b === void 0) {\r\n            a = 9999999 * turn_player * -1;\r\n            b = 9999999 * turn_player;\r\n        }\r\n        let nodeList = Rule.getNodeMap(map, turn_player);\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            let hand = nodeList[i][0];\r\n            let map0 = nodeList[i][1];\r\n            let sc = 0;\r\n            // 必勝            \r\n            let end = Rule.isEndX(map0, nearwin);\r\n            if (end === turn_player) {\r\n                return [hand, 999999 * turn_player];\r\n            }\r\n            // 必敗\r\n            if (end === turn_player * -1) {\r\n                if (besthand === void 0) {\r\n                    best_score = 999999 * turn_player * -1;\r\n                    besthand = hand;\r\n                }\r\n                continue;\r\n            }\r\n            if (Rule.isNoneNode(map0)) {\r\n                sc = 0;\r\n            }\r\n            else {\r\n                sc = Aijs.deepThinkAllAB(map0, turn_player * -1, depth - 1, b, a, nearwin, evalparam)[1];\r\n            }\r\n            if (besthand === void 0) {\r\n                best_score = sc;\r\n                besthand = hand;\r\n            }\r\n            if (turn_player === 1 && sc > best_score) {\r\n                best_score = sc;\r\n                besthand = hand;\r\n            }\r\n            else if (turn_player === -1 && sc < best_score) {\r\n                best_score = sc;\r\n                besthand = hand;\r\n            }\r\n            if (turn_player === 1 && a < best_score || turn_player === -1 && a > best_score) {\r\n                a = best_score;\r\n            }\r\n            if (turn_player === 1 && b <= best_score || turn_player === -1 && b >= best_score) {\r\n                break;\r\n            }\r\n        }\r\n        return [besthand, best_score];\r\n    }\r\n    /**\r\n     * 考える\r\n     */\r\n    static thinkAI(map, turn_player, depth, a, b, evalparam) {\r\n        let nearwin = false;\r\n        let hand = [undefined, 0];\r\n        let wkMap = new Int8Array(map);\r\n        if (!evalparam) {\r\n            evalparam = Eval.DEFAULT_EVALPARAM;\r\n        }\r\n        if (Rule.isEndX(wkMap, false) !== 0) {\r\n            nearwin = true;\r\n        }\r\n        hand = Aijs.deepThinkAllAB(wkMap, turn_player, depth, a, b, nearwin, evalparam);\r\n        if (hand[1] * turn_player === -999999) {\r\n            hand = Aijs.deepThinkAllAB(wkMap, turn_player, 1, a, b, nearwin, evalparam);\r\n        }\r\n        return hand;\r\n    }\r\n}\r\n","export class GameState {\r\n    constructor() {\r\n        this.goaled = false;\r\n        this.turn_player = 0;\r\n        this.blueScore = 0;\r\n        this.redScore = 0;\r\n        this.winner = null;\r\n        this.message = '';\r\n        this.demo = true;\r\n        this.thisHand = undefined;\r\n        /*  let thisMap = {\r\n            0: -1, 10: -2, 20: -3, 30: -4, 40: -5, 50: -6,\r\n            1: 0, 11: -8, 21: 0, 31: 0, 41: -7, 51: 0,\r\n            2: 0, 12: 0, 22: 0, 32: 0, 42: 0, 52: 0,\r\n            3: 0, 13: 0, 23: 0, 33: 0, 43: 0, 53: 0,\r\n            4: 0, 14: 7, 24: 0, 34: 0, 44: 8, 54: 0,\r\n            5: 6, 15: 5, 25: 4, 35: 3, 45: 2, 55: 1\r\n          };*/\r\n        this.thisMap = new Int8Array([\r\n            -1, 0, 0, 0, 0, 6, 0, 0, 0, 0, -2, -8,\r\n            0, 0, 7, 5, 0, 0, 0, 0, -3, 0, 0, 0,\r\n            0, 4, 0, 0, 0, 0, -4, 0, 0, 0, 0,\r\n            3, 0, 0, 0, 0, -5, -7, 0, 0, 8, 2,\r\n            0, 0, 0, 0, -6, 0, 0, 0, 0, 1\r\n        ]);\r\n        this.mouse_x = 0;\r\n        this.mouse_y = 0;\r\n        this.hover_piece = null;\r\n        this.demo_inc = 0;\r\n        this.autoLog = false;\r\n        this.isTouch = true;\r\n        this.map_list = {};\r\n    }\r\n}\r\n","export const COLOR_LINE = '#333333';\r\nexport const COLOR_PANEL_1 = '#660033';\r\nexport const COLOR_PANEL_2 = '#004466';\r\nexport const COLOR_PANEL_3 = '#FFFFFF';\r\nexport const COLOR_PANEL_4 = '#111111';\r\nexport const COLOR_PANEL_5 = '#444444';\r\nexport const COLOR_PANEL_6 = '#888888';\r\nexport const COLOR_SELECT = '#7fed7f';\r\nexport const COLOR_SELECT2 = '#148d14';\r\nexport const COLOR_RED = '#E60073';\r\nexport const COLOR_BLUE = '#0099E6';\r\nexport const COLOR_RED2 = '#E60073';\r\nexport const COLOR_BLUE2 = '#0099E6';\r\nexport const COLOR_WHITE = '#FFFFFF';\r\nexport const PIECES = {\r\n    '1': [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    '2': [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 0, 1],\r\n    '3': [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    '4': [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    '5': [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    '6': [1, 0, 1,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    '7': [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    '8': [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 0, 0],\r\n    '-1': [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    '-2': [1, 0, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    '-3': [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    '-4': [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    '-5': [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    '-6': [0, 1, 0,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    '-7': [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    '-8': [0, 0, 0,\r\n        0, 0, 0,\r\n        0, 1, 0]\r\n};\r\n","export class Utils {\r\n    // 角丸\r\n    static FillRoundRect(ctx, x, y, w, h, r) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + r, y);\r\n        ctx.lineTo(x + w - r, y);\r\n        ctx.bezierCurveTo(x + w, y + 0, x + w, y + 0, x + w, y + r);\r\n        ctx.lineTo(x + w, y + h - r);\r\n        ctx.bezierCurveTo(x + w, y + h, x + w, y + h, x + w - r, y + h);\r\n        ctx.lineTo(x + r, y + h);\r\n        ctx.bezierCurveTo(x + 0, y + h, x + 0, y + h, x + 0, y + h - r);\r\n        ctx.lineTo(x, y + r);\r\n        ctx.bezierCurveTo(x + 0, y + 0, x + 0, y + 0, x + r, y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}\r\n","export class ViewState {\r\n    constructor() {\r\n        this.CellSize = 0;\r\n        this.Ratio = 1;\r\n        this.Img_bk_loaded = false;\r\n        this.Img_bk = new Image();\r\n    }\r\n}\r\n","import { Rule } from \"../logic/rule\";\r\nimport * as params from \"./params\";\r\nimport { Utils } from \"./utils\";\r\nimport { ViewState } from \"./viewState\";\r\nexport class View {\r\n    constructor() {\r\n        this.ctx = null;\r\n        this.cache_on = false;\r\n        this.CANV_SIZE = 0;\r\n        this.ViewState = new ViewState;\r\n        if (window.devicePixelRatio !== undefined && window.devicePixelRatio != 1) {\r\n            this.ViewState.Ratio = window.devicePixelRatio;\r\n        }\r\n        this.CANV_SIZE = 500 * this.ViewState.Ratio;\r\n        this.ViewState.Img_bk.src = 'bk.gif';\r\n        this.canv_board = document.createElement('canvas');\r\n        this.canv_board2 = document.createElement('canvas');\r\n        this.canv_focus = document.createElement('canvas');\r\n        this.canv_pieces = document.createElement('canvas');\r\n        this.canv_shadow = document.createElement('canvas');\r\n        this.canv_hover_piece = document.createElement('canvas');\r\n        this.canv_overlay = document.createElement('canvas');\r\n        this.canv_bk = document.createElement('canvas');\r\n        this.canv_cover = document.createElement('canvas');\r\n        this.canv_score = document.createElement('canvas');\r\n        this.canv_cache = document.createElement('canvas');\r\n    }\r\n    init() {\r\n        this.ctx = document.querySelector('#canv').getContext('2d');\r\n        this.canv_board.width = this.CANV_SIZE;\r\n        this.canv_board.height = this.CANV_SIZE;\r\n        this.canv_board2.width = this.CANV_SIZE;\r\n        this.canv_board2.height = this.CANV_SIZE;\r\n        this.canv_focus.width = this.CANV_SIZE;\r\n        this.canv_focus.height = this.CANV_SIZE;\r\n        this.canv_pieces.width = this.CANV_SIZE;\r\n        this.canv_pieces.height = this.CANV_SIZE;\r\n        this.canv_shadow.width = this.CANV_SIZE;\r\n        this.canv_shadow.height = this.CANV_SIZE;\r\n        this.canv_hover_piece.width = this.CANV_SIZE;\r\n        this.canv_hover_piece.height = this.CANV_SIZE;\r\n        this.canv_overlay.width = this.CANV_SIZE;\r\n        this.canv_overlay.height = this.CANV_SIZE;\r\n        this.canv_bk.width = this.CANV_SIZE;\r\n        this.canv_bk.height = this.CANV_SIZE;\r\n        this.canv_cover.width = this.CANV_SIZE;\r\n        this.canv_cover.height = this.CANV_SIZE;\r\n        this.canv_score.width = this.CANV_SIZE;\r\n        this.canv_score.height = this.CANV_SIZE;\r\n        this.canv_cache.width = this.CANV_SIZE;\r\n        this.canv_cache.height = this.CANV_SIZE;\r\n        this.ViewState.CellSize = this.CANV_SIZE / 6;\r\n        //retina対応\r\n        this.ctx.canvas.style.width = this.CANV_SIZE / this.ViewState.Ratio + \"px\";\r\n        this.ctx.canvas.style.height = this.CANV_SIZE / this.ViewState.Ratio + \"px\";\r\n        this.ctx.canvas.width = this.CANV_SIZE;\r\n        this.ctx.canvas.height = this.CANV_SIZE;\r\n    }\r\n    /**\r\n     * 画面描画。\r\n     */\r\n    flush(gameState, initflg, cache_flg) {\r\n        let wkMap = new Int8Array(gameState.thisMap);\r\n        this.ctx.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if (cache_flg === false) {\r\n            this.cache_on = false;\r\n        }\r\n        // キャッシュに保存\r\n        if (cache_flg === false || this.cache_on === false) {\r\n            // 盤面を描画\r\n            this.ctx.drawImage(this.drawBoard(initflg), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // テカリを描画\r\n            this.ctx.drawImage(this.drawBoard2(initflg), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // 選択したコマを除外\r\n            if (gameState.hover_piece !== null) {\r\n                wkMap[gameState.hover_piece] = 0;\r\n            }\r\n            // 残像を表示\r\n            this.ctx.drawImage(this.drawShadow(wkMap, gameState.thisHand), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // コマを表示\r\n            this.ctx.drawImage(this.drawPieceAll(wkMap), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // キャッシュに保存\r\n            let ctx_canv = this.canv_cache.getContext('2d');\r\n            ctx_canv.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            ctx_canv.drawImage(this.ctx.canvas, 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // キャッシュ有効化\r\n            this.cache_on = true;\r\n        }\r\n        else {\r\n            // キャッシュから描画\r\n            this.ctx.drawImage(this.canv_cache, 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n        // 選択したコマを表示\r\n        this.ctx.drawImage(this.drawHoverPiece(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if ((gameState.mouse_x !== 0 || gameState.mouse_y !== 0) && gameState.demo === false) {\r\n            // フォーカスを描画\r\n            this.ctx.drawImage(this.drawFocus(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n        //スコアを表示\r\n        if (gameState.goaled || gameState.winner !== null) {\r\n            if (gameState.demo === false && gameState.autoLog == false) {\r\n                this.ctx.drawImage(this.drawScore(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            }\r\n        }\r\n        // メッセージを描画\r\n        this.ctx.drawImage(this.drawOverlay(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        // カバーを描画\r\n        if (gameState.demo === true) {\r\n            this.ctx.drawImage(this.drawCover(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n    }\r\n    /**\r\n     * 背景描画\r\n     */\r\n    drawBk() {\r\n        let ctx_bk = this.canv_bk.getContext('2d');\r\n        if (this.ViewState.Img_bk_loaded) {\r\n            ctx_bk.drawImage(this.ViewState.Img_bk, 0, 0, this.CANV_SIZE / this.ViewState.Ratio, this.CANV_SIZE / this.ViewState.Ratio, 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n        return this.canv_bk;\r\n    }\r\n    /**\r\n     * カバー描画\r\n     */\r\n    drawCover(gameState) {\r\n        // 背景\r\n        let ctx_cover = this.canv_cover.getContext('2d');\r\n        ctx_cover.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_cover.globalAlpha = 0.50;\r\n        ctx_cover.fillStyle = '#000000';\r\n        ctx_cover.fillRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        // 枠\r\n        let x = this.ViewState.CellSize * 2;\r\n        let y = this.ViewState.CellSize * 3.5;\r\n        ctx_cover.shadowBlur = 20;\r\n        ctx_cover.shadowColor = 'rgba(0, 0, 0, 0.3)';\r\n        ctx_cover.shadowOffsetX = 5;\r\n        ctx_cover.shadowOffsetY = 5;\r\n        ctx_cover.globalAlpha = 0.8;\r\n        ctx_cover.fillStyle = params.COLOR_WHITE;\r\n        ctx_cover.beginPath();\r\n        Utils.FillRoundRect(ctx_cover, x, y, this.ViewState.CellSize * 2, this.ViewState.CellSize * 1, this.ViewState.CellSize / 7);\r\n        ctx_cover.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        ctx_cover.shadowBlur = 0;\r\n        ctx_cover.shadowOffsetX = 0;\r\n        ctx_cover.shadowOffsetY = 0;\r\n        // 文字\r\n        let fontsize = Math.round(this.ViewState.CellSize * 0.5);\r\n        let message = 'Play';\r\n        message += (gameState.demo_inc % 10 == 0) ? \" \" : \"\";\r\n        ctx_cover.shadowBlur = 0;\r\n        ctx_cover.shadowOffsetX = 0;\r\n        ctx_cover.shadowOffsetY = 0;\r\n        ctx_cover.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        ctx_cover.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        ctx_cover.globalAlpha = 1;\r\n        ctx_cover.fillStyle = params.COLOR_LINE;\r\n        ctx_cover.textBaseline = 'middle';\r\n        ctx_cover.textAlign = 'center';\r\n        ctx_cover.beginPath();\r\n        ctx_cover.fillText(message, this.ViewState.CellSize * 3, this.ViewState.CellSize * 4);\r\n        // 文字２\r\n        message = 'colamone';\r\n        fontsize = Math.round(this.ViewState.CellSize * 1);\r\n        ctx_cover.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        ctx_cover.fillStyle = params.COLOR_WHITE;\r\n        ctx_cover.shadowBlur = 0;\r\n        ctx_cover.beginPath();\r\n        ctx_cover.fillText(message, this.ViewState.CellSize * 3, this.ViewState.CellSize * 2);\r\n        return this.canv_cover;\r\n    }\r\n    /**\r\n     * スコア描画\r\n     */\r\n    drawScore(gameState) {\r\n        // 背景\r\n        let ctx_score = this.canv_score.getContext('2d');\r\n        let message = \"\";\r\n        let fontsize = Math.round(this.ViewState.CellSize * 1.5);\r\n        let blue = params.COLOR_BLUE2;\r\n        let red = params.COLOR_RED2;\r\n        ctx_score.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_score.globalAlpha = 0.4;\r\n        ctx_score.textBaseline = 'middle';\r\n        ctx_score.textAlign = 'center';\r\n        ctx_score.shadowBlur = 10;\r\n        ctx_score.shadowColor = 'rgba(0, 0, 0, 0.5)';\r\n        ctx_score.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        // 文字\r\n        ctx_score.globalAlpha = 0.3;\r\n        ctx_score.shadowBlur = 2;\r\n        ctx_score.shadowColor = 'rgba(255, 255, 255, 1)';\r\n        ctx_score.fillStyle = red;\r\n        message = String(gameState.redScore);\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.ViewState.CellSize * 1, this.ViewState.CellSize * 3.8);\r\n        // 文字\r\n        message = \"8\";\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.ViewState.CellSize * 2, this.ViewState.CellSize * 5.3);\r\n        //線\r\n        ctx_score.lineWidth = this.ViewState.CellSize * 0.2;\r\n        ctx_score.strokeStyle = red;\r\n        ctx_score.beginPath();\r\n        ctx_score.moveTo(this.ViewState.CellSize * 0.4, this.ViewState.CellSize * 5.55);\r\n        ctx_score.lineTo(this.ViewState.CellSize * 2.6, this.ViewState.CellSize * 3.55);\r\n        ctx_score.closePath();\r\n        ctx_score.stroke();\r\n        // 文字\r\n        message = String(gameState.blueScore);\r\n        ctx_score.fillStyle = blue;\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.ViewState.CellSize * 4, this.ViewState.CellSize * 0.7);\r\n        // 文字\r\n        message = \"8\";\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.ViewState.CellSize * 5, this.ViewState.CellSize * 2.3);\r\n        // 文字\r\n        ctx_score.lineWidth = this.ViewState.CellSize * 0.2;\r\n        ctx_score.strokeStyle = blue;\r\n        ctx_score.beginPath();\r\n        ctx_score.moveTo(this.ViewState.CellSize * 3.4, this.ViewState.CellSize * 2.55);\r\n        ctx_score.lineTo(this.ViewState.CellSize * 5.6, this.ViewState.CellSize * 0.55);\r\n        ctx_score.closePath();\r\n        ctx_score.stroke();\r\n        return this.canv_score;\r\n    }\r\n    /**\r\n     * フォーカスを描画\r\n     */\r\n    drawFocus(gameState) {\r\n        // 選択マスを強調\r\n        let x = gameState.mouse_x - (gameState.mouse_x % this.ViewState.CellSize);\r\n        let y = gameState.mouse_y - (gameState.mouse_y % this.ViewState.CellSize);\r\n        let ctx_focus = this.canv_focus.getContext('2d');\r\n        let grad = ctx_focus.createRadialGradient(x, y, 0, x, y, this.ViewState.CellSize);\r\n        grad.addColorStop(0.3, params.COLOR_SELECT);\r\n        grad.addColorStop(1, params.COLOR_SELECT2);\r\n        ctx_focus.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_focus.globalAlpha = 0.35;\r\n        ctx_focus.fillStyle = grad;\r\n        ctx_focus.lineWidth = 1;\r\n        ctx_focus.beginPath();\r\n        ctx_focus.fillRect(x, y, this.ViewState.CellSize, this.ViewState.CellSize);\r\n        if (gameState.isTouch === true && gameState.hover_piece === null) {\r\n            return this.canv_focus;\r\n        }\r\n        // 移動可能マスを強調\r\n        let target = (x / this.ViewState.CellSize) * 10 + (y / this.ViewState.CellSize);\r\n        if (gameState.thisMap[target] * gameState.turn_player > 0) {\r\n            let canm = Rule.getCanMovePanelX(target, gameState.thisMap);\r\n            for (let i = 0; i <= canm.length - 1; i++) {\r\n                x = Math.floor(canm[i] / 10);\r\n                y = Math.floor(canm[i] % 10);\r\n                ctx_focus.globalAlpha = 0.6;\r\n                ctx_focus.strokeStyle = params.COLOR_SELECT;\r\n                ctx_focus.lineWidth = this.ViewState.CellSize / 20;\r\n                ctx_focus.beginPath();\r\n                ctx_focus.arc(x * this.ViewState.CellSize + (this.ViewState.CellSize / 2), y * this.ViewState.CellSize + (this.ViewState.CellSize / 2), (this.ViewState.CellSize / 2) - (this.ViewState.CellSize / 10), 0, Math.PI * 2, false);\r\n                ctx_focus.stroke();\r\n            }\r\n        }\r\n        return this.canv_focus;\r\n    }\r\n    /**\r\n     * 盤面を描画してCANVASを返す。\r\n     */\r\n    drawBoard(initflg) {\r\n        if (initflg === false) {\r\n            return this.canv_board;\r\n        }\r\n        let ctx_board = this.canv_board.getContext('2d');\r\n        ctx_board.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        let grad = ctx_board.createLinearGradient(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        grad.addColorStop(0, params.COLOR_PANEL_6);\r\n        grad.addColorStop(0.3, params.COLOR_PANEL_5);\r\n        grad.addColorStop(1, params.COLOR_PANEL_4);\r\n        for (let x = 0; x < 6; x++) {\r\n            for (let y = 0; y < 6; y++) {\r\n                // パネル描画\r\n                ctx_board.strokeStyle = params.COLOR_LINE;\r\n                if (y === 0) {\r\n                    ctx_board.fillStyle = params.COLOR_PANEL_1;\r\n                }\r\n                else if (y == 5) {\r\n                    ctx_board.fillStyle = params.COLOR_PANEL_2;\r\n                }\r\n                else if ((x + y) % 2 === 0) {\r\n                    ctx_board.fillStyle = params.COLOR_PANEL_3;\r\n                }\r\n                else {\r\n                    ctx_board.fillStyle = params.COLOR_PANEL_4;\r\n                    ctx_board.fillStyle = grad;\r\n                }\r\n                ctx_board.beginPath();\r\n                ctx_board.fillRect(x * this.ViewState.CellSize, y * this.ViewState.CellSize, this.ViewState.CellSize, this.ViewState.CellSize);\r\n                ctx_board.strokeRect(x * this.ViewState.CellSize, y * this.ViewState.CellSize, this.ViewState.CellSize, this.ViewState.CellSize);\r\n            }\r\n        }\r\n        return this.canv_board;\r\n    }\r\n    /**\r\n     * 盤面をテカテカにする。\r\n     */\r\n    drawBoard2(initflg) {\r\n        if (initflg === false) {\r\n            return this.canv_board2;\r\n        }\r\n        let ctx_board2 = this.canv_board2.getContext('2d');\r\n        ctx_board2.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_board2.globalAlpha = 0.07;\r\n        ctx_board2.fillStyle = params.COLOR_WHITE;\r\n        ctx_board2.beginPath();\r\n        ctx_board2.arc(this.ViewState.CellSize * 1, -3 * this.ViewState.CellSize, 7 * this.ViewState.CellSize, 0, Math.PI * 2, false);\r\n        ctx_board2.fill();\r\n        return this.canv_board2;\r\n    }\r\n    /**\r\n     * 浮遊しているコマを描画する。\r\n     */\r\n    drawHoverPiece(gameState) {\r\n        let ctx_hover = this.canv_hover_piece.getContext('2d');\r\n        ctx_hover.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        let x = gameState.mouse_x - (this.ViewState.CellSize / 2);\r\n        let y = gameState.mouse_y - (this.ViewState.CellSize / 2);\r\n        if (gameState.hover_piece !== null) {\r\n            this.drawPiece(ctx_hover, x, y, gameState.thisMap[gameState.hover_piece], false);\r\n        }\r\n        return this.canv_hover_piece;\r\n    }\r\n    /**\r\n     * コマを描画する。\r\n     */\r\n    drawPiece(wkCtx, x, y, number, goal) {\r\n        let wkColor;\r\n        // 外枠を描画\r\n        if (number === 0) {\r\n            return wkCtx;\r\n        }\r\n        else if (number > 0) {\r\n            wkColor = params.COLOR_BLUE;\r\n        }\r\n        else {\r\n            wkColor = params.COLOR_RED;\r\n        }\r\n        let grad = this.ctx.createLinearGradient(x, y, x + this.ViewState.CellSize, y + this.ViewState.CellSize);\r\n        grad.addColorStop(0, 'rgb(255, 255, 255)');\r\n        grad.addColorStop(0.4, wkColor);\r\n        grad.addColorStop(1, wkColor);\r\n        wkCtx.shadowBlur = 10;\r\n        wkCtx.shadowColor = 'rgba(0, 0, 0, 1)';\r\n        wkCtx.shadowOffsetX = 2;\r\n        wkCtx.shadowOffsetY = 2;\r\n        wkCtx.fillStyle = grad;\r\n        wkCtx.beginPath();\r\n        Utils.FillRoundRect(wkCtx, x + this.ViewState.CellSize / 10, y + this.ViewState.CellSize / 10, this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5, this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5, this.ViewState.CellSize / 7);\r\n        wkCtx.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        wkCtx.shadowBlur = 0;\r\n        wkCtx.shadowOffsetX = 0;\r\n        wkCtx.shadowOffsetY = 0;\r\n        // 曇りエフェクト\r\n        if (this.ViewState.Img_bk_loaded) {\r\n            wkCtx.globalAlpha = 0.35;\r\n            wkCtx.save();\r\n            wkCtx.clip();\r\n            wkCtx.drawImage(this.drawBk(), x + this.ViewState.CellSize / 10, y + this.ViewState.CellSize / 10, this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5, this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5);\r\n            wkCtx.restore();\r\n            wkCtx.globalAlpha = 1;\r\n        }\r\n        // 文字を描画。\r\n        wkCtx.fillStyle = params.COLOR_WHITE;\r\n        let fontsize = Math.round(this.ViewState.CellSize * 0.18);\r\n        wkCtx.textBaseline = 'middle';\r\n        wkCtx.textAlign = 'center';\r\n        wkCtx.font = fontsize + \"pt 'Play',Arial\";\r\n        wkCtx.beginPath();\r\n        // 数字を印字\r\n        wkCtx.fillText(String(Math.abs(number)), x + (this.ViewState.CellSize / 2), y + (this.ViewState.CellSize / 2));\r\n        // 点を描画\r\n        for (let i = 0; i <= params.PIECES[number].length - 1; i++) {\r\n            if (params.PIECES[number][i] === 0) {\r\n                continue;\r\n            }\r\n            let x_dot = x + this.ViewState.CellSize / 4.16 + (Math.floor(this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5) / 3) * Math.floor(i % 3.0);\r\n            let y_dot = y + this.ViewState.CellSize / 4.16 + (Math.floor(this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5) / 3) * Math.floor(i / 3.0);\r\n            wkCtx.fillStyle = params.COLOR_WHITE;\r\n            wkCtx.beginPath();\r\n            wkCtx.arc(x_dot, y_dot, this.ViewState.CellSize * 0.06, 0, Math.PI * 2, false);\r\n            wkCtx.fill();\r\n        }\r\n        if (goal) { // 得点を印字\r\n            wkCtx.shadowBlur = 10;\r\n            wkCtx.shadowColor = 'rgba(0, 0, 0, 1)';\r\n            wkCtx.globalAlpha = 1;\r\n            wkCtx.fillStyle = params.COLOR_WHITE;\r\n            fontsize = Math.round(this.ViewState.CellSize * 0.5);\r\n            wkCtx.textBaseline = 'middle';\r\n            wkCtx.textAlign = 'center';\r\n            wkCtx.font = 'bolder ' + fontsize + 'pt Play,Arial ';\r\n            wkCtx.beginPath();\r\n            wkCtx.fillText(String(Math.abs(number)), x + (this.ViewState.CellSize / 2), y + (this.ViewState.CellSize / 2));\r\n            wkCtx.globalAlpha = 1;\r\n            wkCtx.shadowColor = 'rgba(0, 0, 0, 0)';\r\n            wkCtx.shadowBlur = 0;\r\n        }\r\n        return wkCtx;\r\n    }\r\n    /**\r\n     * コマをすべて描画\r\n     */\r\n    drawPieceAll(wkMap) {\r\n        let ctx_pieces = this.canv_pieces.getContext('2d');\r\n        ctx_pieces.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        for (let x = 0; x < 6; x++) {\r\n            for (let y = 0; y < 6; y++) {\r\n                if (wkMap[x * 10 + y] !== 0) {\r\n                    let goal = false;\r\n                    if (wkMap[x * 10 + y] > 0 && y === 0) {\r\n                        goal = true;\r\n                    }\r\n                    else if (wkMap[x * 10 + y] < 0 && y == 5) {\r\n                        goal = true;\r\n                    }\r\n                    ctx_pieces = this.drawPiece(ctx_pieces, x * this.ViewState.CellSize, y * this.ViewState.CellSize, wkMap[x * 10 + y], goal);\r\n                }\r\n            }\r\n        }\r\n        return this.canv_pieces;\r\n    }\r\n    /**\r\n     * 残像を描画する。\r\n     */\r\n    drawShadow(wkMap, hand) {\r\n        let ctx_shadow = this.canv_shadow.getContext('2d');\r\n        ctx_shadow.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if (hand === undefined) {\r\n            return this.canv_shadow;\r\n        }\r\n        let x0 = (hand[0] / 10 | 0);\r\n        let y0 = hand[0] % 10;\r\n        let x1 = (hand[1] / 10 | 0);\r\n        let y1 = hand[1] % 10;\r\n        let h = this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5;\r\n        let w = this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5;\r\n        let x = x1 * this.ViewState.CellSize + this.ViewState.CellSize / 10;\r\n        let y = y1 * this.ViewState.CellSize + this.ViewState.CellSize / 10;\r\n        let shadow_start_x = x + w / 2;\r\n        let shadow_start_y = y + h / 2;\r\n        let shadow_end_x = shadow_start_x;\r\n        let shadow_end_y = shadow_start_y;\r\n        let number = wkMap[hand[1]];\r\n        let wkColor = '';\r\n        let center = 0;\r\n        let grad;\r\n        if (hand.length != 2) {\r\n            return this.canv_shadow;\r\n        }\r\n        if (number > 0) {\r\n            wkColor = params.COLOR_BLUE; // \"#EAEFFD\";   \r\n        }\r\n        else {\r\n            wkColor = params.COLOR_RED; // \"#FDEAFA\";           \r\n        }\r\n        if (x0 == x1 || y0 == y1) { // 直角移動\r\n            if ((x0 + y0) % 2 === 0 && y0 !== 0 && y0 != 5) {\r\n                center = 0.5;\r\n            }\r\n            else {\r\n                center = 0.3;\r\n            }\r\n            if (x0 < x1) {\r\n                x = x - w + 10;\r\n                shadow_end_x = shadow_end_x - w;\r\n            }\r\n            if (x0 > x1) {\r\n                x = x + w - 10;\r\n                shadow_end_x = shadow_end_x + w;\r\n            }\r\n            if (y0 < y1) {\r\n                y = y - h + 10;\r\n                shadow_end_y = shadow_end_y - h;\r\n            }\r\n            if (y0 > y1) {\r\n                y = y + h - 10;\r\n                shadow_end_y = shadow_end_y + h;\r\n            }\r\n            grad = ctx_shadow.createLinearGradient(shadow_start_x, shadow_start_y, shadow_end_x, shadow_end_y);\r\n            grad.addColorStop(0, wkColor);\r\n            grad.addColorStop(center, wkColor);\r\n            grad.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n            ctx_shadow.fillStyle = grad;\r\n            ctx_shadow.fillRect(x, y, h, w);\r\n        }\r\n        else { // 斜め移動\r\n            if ((x0 + y0) % 2 === 0 && y0 !== 0 && y0 != 5) {\r\n                center = 0.3;\r\n            }\r\n            else {\r\n                center = 0.5;\r\n            }\r\n            let [px1, py1, px2, py2, px3, py3, px4, py4] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n            if (x0 < x1 && y0 < y1) {\r\n                px1 = x;\r\n                py1 = y - h;\r\n                px2 = x + w;\r\n                py2 = y;\r\n                px3 = x;\r\n                py3 = y + h;\r\n                px4 = x - w;\r\n                py4 = y;\r\n                shadow_end_x = shadow_end_x - w;\r\n                shadow_end_y = shadow_end_y - h;\r\n                shadow_start_x = shadow_start_x + w * 2;\r\n                shadow_start_y = shadow_start_y + h * 2;\r\n            }\r\n            if (x0 > x1 && y0 > y1) {\r\n                px1 = x + w;\r\n                py1 = y;\r\n                px2 = x + w + w;\r\n                py2 = y + h;\r\n                px3 = x + w;\r\n                py3 = y + h + h;\r\n                px4 = x;\r\n                py4 = y + h;\r\n                shadow_end_x = shadow_end_x + w;\r\n                shadow_end_y = shadow_end_y + h;\r\n                shadow_start_x = shadow_start_x - w * 2;\r\n                shadow_start_y = shadow_start_y - h * 2;\r\n            }\r\n            if (x0 < x1 && y0 > y1) {\r\n                px1 = x;\r\n                py1 = y;\r\n                px2 = x + w;\r\n                py2 = y + h;\r\n                px3 = x;\r\n                py3 = y + h + h;\r\n                px4 = x - w;\r\n                py4 = y + h;\r\n                shadow_end_x = shadow_end_x - w;\r\n                shadow_end_y = shadow_end_y + h;\r\n                shadow_start_x = shadow_start_x + w * 2;\r\n                shadow_start_y = shadow_start_y - h * 2;\r\n            }\r\n            if (x0 > x1 && y0 < y1) {\r\n                px1 = x + w;\r\n                py1 = y - h;\r\n                px2 = x + w + w;\r\n                py2 = y;\r\n                px3 = x + w;\r\n                py3 = y + h;\r\n                px4 = x;\r\n                py4 = y;\r\n                shadow_end_x = shadow_end_x + w;\r\n                shadow_end_y = shadow_end_y - h;\r\n                shadow_start_x = shadow_start_x - w * 2;\r\n                shadow_start_y = shadow_start_y + h * 2;\r\n            }\r\n            ctx_shadow.beginPath();\r\n            ctx_shadow.moveTo(px1, py1);\r\n            ctx_shadow.lineTo(px2, py2);\r\n            ctx_shadow.lineTo(px3, py3);\r\n            ctx_shadow.lineTo(px4, py4);\r\n            ctx_shadow.lineTo(px1, py1);\r\n            ctx_shadow.closePath();\r\n            grad = ctx_shadow.createLinearGradient(shadow_start_x, shadow_start_y, shadow_end_x, shadow_end_y);\r\n            grad.addColorStop(0, wkColor);\r\n            grad.addColorStop(center, wkColor);\r\n            grad.addColorStop(0.97, 'rgba(255, 255, 255, 0)');\r\n            ctx_shadow.fillStyle = grad;\r\n            ctx_shadow.fill();\r\n        }\r\n        return this.canv_shadow;\r\n    }\r\n    /**\r\n     * メッセージを描画\r\n     */\r\n    drawOverlay(gameState) {\r\n        let ctx_overlay = this.canv_overlay.getContext('2d');\r\n        let x = this.ViewState.CellSize * 1.3;\r\n        let y = this.ViewState.CellSize * 2.5;\r\n        ctx_overlay.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if (gameState.message === '') {\r\n            return this.canv_overlay;\r\n        }\r\n        ctx_overlay.shadowBlur = 10;\r\n        ctx_overlay.shadowColor = 'rgba(100, 100, 100, 0.5)';\r\n        ctx_overlay.shadowOffsetX = 5;\r\n        ctx_overlay.shadowOffsetY = 5;\r\n        ctx_overlay.globalAlpha = 0.9;\r\n        ctx_overlay.fillStyle = params.COLOR_WHITE;\r\n        Utils.FillRoundRect(ctx_overlay, x, y, this.ViewState.CellSize * 3.4, this.ViewState.CellSize * 1, this.ViewState.CellSize / 7);\r\n        let fontsize = Math.round(this.ViewState.CellSize * 0.36);\r\n        ctx_overlay.shadowBlur = 0;\r\n        ctx_overlay.shadowOffsetX = 0;\r\n        ctx_overlay.shadowOffsetY = 0;\r\n        ctx_overlay.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        ctx_overlay.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        ctx_overlay.globalAlpha = 1;\r\n        ctx_overlay.fillStyle = params.COLOR_LINE;\r\n        ctx_overlay.textBaseline = 'middle';\r\n        ctx_overlay.textAlign = 'center';\r\n        ctx_overlay.beginPath();\r\n        ctx_overlay.fillText(gameState.message, this.ViewState.CellSize * 3, this.ViewState.CellSize * 3);\r\n        return this.canv_overlay;\r\n    }\r\n}\r\n","/* @license Copyright (c) @kurehajime / source code: https://github.com/kurehajime/colamone_js */\r\nimport { Rule } from \"./rule\";\r\nimport { Aijs } from \"./ai\";\r\nimport { GameState } from \"./gamestate\";\r\nimport { View } from \"../canvas/view\";\r\nexport class BoardGamejs {\r\n    constructor() {\r\n        this.gameState = new GameState();\r\n        this.view = new View();\r\n        this.thinktime = 0.0;\r\n        this.intervalID = null;\r\n        this.intervalID_log = null;\r\n        this.LIMIT_1000DAY = 3;\r\n        this.startMap = new Int8Array();\r\n        this.logPointer = 0;\r\n        this.logArray = [];\r\n        this.logArray2 = [];\r\n        this.storage = null;\r\n        /**\r\n         * マウス移動時処理\r\n         */\r\n        this.ev_mouseMove = (e) => {\r\n            this.getMousePosition(e);\r\n            this.view.flush(this.gameState, false, true);\r\n        };\r\n        /**\r\n         * タッチ移動時処理\r\n         */\r\n        this.ev_touchMove = (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        };\r\n        /**\r\n         * マウスクリック時処理\r\n         */\r\n        this.ev_mouseClick = (e) => {\r\n            this.getMousePosition(e);\r\n            let target = Math.floor(this.gameState.mouse_x / this.view.ViewState.CellSize) * 10 + Math.floor(this.gameState.mouse_y / this.view.ViewState.CellSize);\r\n            if (this.gameState.winner !== null || this.logArray.length !== 0) {\r\n                this.reloadnew();\r\n                return true;\r\n            }\r\n            if (this.gameState.demo === true) {\r\n                this.gameState.demo = false;\r\n                this.gameState.thisHand = undefined;\r\n                this.gameState.thisMap = Rule.copyMap(this.startMap);\r\n                this.logArray2 = [];\r\n                this.view.flush(this.gameState, false, false);\r\n                this.gameState.winner = null;\r\n                this.gameState.goaled = false;\r\n                this.gameState.turn_player = 1;\r\n                window.clearInterval(this.intervalID);\r\n                this.view.flush(this.gameState, false, false);\r\n                return true;\r\n            }\r\n            if (this.gameState.hover_piece === null) {\r\n                if (this.gameState.thisMap[target] * this.gameState.turn_player > 0) {\r\n                    this.gameState.hover_piece = target;\r\n                }\r\n            }\r\n            else {\r\n                if (target == this.gameState.hover_piece) {\r\n                    this.gameState.hover_piece = null;\r\n                    this.view.flush(this.gameState, false, false);\r\n                    return true;\r\n                }\r\n                let canm = Rule.getCanMovePanelX(this.gameState.hover_piece, this.gameState.thisMap);\r\n                if (canm.indexOf(target) >= 0) {\r\n                    this.view.flush(this.gameState, false, true);\r\n                    if (this.isGoaled(target, this.gameState.turn_player)) {\r\n                        this.gameState.goaled = true;\r\n                        this.view.flush(this.gameState, false, true);\r\n                        setTimeout(() => {\r\n                            this.gameState.goaled = false;\r\n                            this.view.flush(this.gameState, false, false);\r\n                        }, 2000);\r\n                    }\r\n                    this.gameState.thisMap[target] = this.gameState.thisMap[this.gameState.hover_piece];\r\n                    this.gameState.thisMap[this.gameState.hover_piece] = 0;\r\n                    this.gameState.turn_player = this.gameState.turn_player * -1;\r\n                    this.logArray2.push([this.gameState.hover_piece, target]);\r\n                    this.gameState.thisHand = [this.gameState.hover_piece, target];\r\n                    this.gameState.hover_piece = null;\r\n                    // AIが考える。\r\n                    this.gameState.message = 'thinking...';\r\n                    window.setTimeout(() => {\r\n                        this.view.flush(this.gameState, false, false);\r\n                    }, 50);\r\n                    this.updateMessage();\r\n                    if (this.gameState.winner === null) {\r\n                        window.setTimeout(() => {\r\n                            this.ai(parseInt(document.querySelector('#level').value));\r\n                            this.gameState.message = '';\r\n                            this.updateMessage();\r\n                            this.view.flush(this.gameState, false, false);\r\n                        }, 250);\r\n                    }\r\n                }\r\n            }\r\n            this.view.flush(this.gameState, false, false);\r\n            return true;\r\n        };\r\n        /**\r\n         * ラジオボタン変更時処理\r\n         */\r\n        this.ev_radioChange = () => {\r\n            let num = document.querySelector('#level').value;\r\n            this.storage.setItem('level_save', num);\r\n            if (this.storage.getItem('level_' + num) > 0) {\r\n                document.querySelector('#wins').innerHTML = this.storage.getItem('level_' + num) + ' win!';\r\n            }\r\n            else {\r\n                document.querySelector('#wins').innerHTML = '';\r\n            }\r\n            this.gameState.thisMap = Rule.copyMap(this.startMap);\r\n            this.gameState.thisHand = undefined;\r\n            this.gameState.map_list = {};\r\n            this.logArray2 = [];\r\n            this.view.flush(this.gameState, false, false);\r\n        };\r\n        try {\r\n            if (window == parent && ('localStorage' in window) && window.localStorage !== null) {\r\n                this.storage = localStorage;\r\n                this.storage.setItem('test', 0); // Safariのプライベートモードは、できないのにできるって言うからかまをかけてみる。\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.storage = null;\r\n        }\r\n        if (this.storage === null) {\r\n            // localStorageが使えない場合\r\n            this.storage = {}; // ダミー\r\n            this.storage.getItem = function () { return undefined; };\r\n            this.storage.setItem = function () { return undefined; };\r\n            if (navigator.cookieEnabled) {\r\n                this.storage.hasItem = function (sKey) {\r\n                    return (new RegExp('(?:^|;\\\\s*)' + escape(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=')).test(document.cookie);\r\n                };\r\n                this.storage.getItem = function (sKey) {\r\n                    if (!sKey || !(new RegExp('(?:^|;\\\\s*)' + escape(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=')).test(document.cookie)) {\r\n                        return null;\r\n                    }\r\n                    return unescape(document.cookie.replace(new RegExp('(?:^|.*;\\\\s*)' + escape(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*'), '$1'));\r\n                };\r\n                this.storage.setItem = function (sKey, sValue) {\r\n                    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) {\r\n                        return;\r\n                    }\r\n                    document.cookie = escape(sKey) + '=' + escape(sValue);\r\n                };\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * ゲーム開始\r\n     */\r\n    Run() {\r\n        var _a, _b;\r\n        this.zoom(); // 小さい端末でズーム\r\n        if (window.innerHeight < window.innerWidth) {\r\n            (_a = document.querySelector('.manual')) === null || _a === void 0 ? void 0 : _a.classList.remove(\"hide\");\r\n        }\r\n        else {\r\n            (_b = document.querySelector('.manual')) === null || _b === void 0 ? void 0 : _b.classList.add(\"hide\");\r\n        }\r\n        this.gameState.turn_player = 1;\r\n        this.gameState.demo = true;\r\n        this.view.init();\r\n        if ('ontouchstart' in window) {\r\n            this.gameState.isTouch = true;\r\n        }\r\n        else {\r\n            this.gameState.isTouch = false;\r\n        }\r\n        // イベントを設定\r\n        if (this.gameState.isTouch) {\r\n            document.querySelector('#canv').addEventListener('touchstart', this.ev_mouseClick);\r\n            document.querySelector('#canv').addEventListener('touchmove', this.ev_touchMove, { passive: false });\r\n        }\r\n        else {\r\n            document.querySelector('#canv').addEventListener('mousemove', this.ev_mouseMove);\r\n            document.querySelector('#canv').addEventListener('mouseup', this.ev_mouseClick);\r\n        }\r\n        document.querySelector('#level').addEventListener('change', this.ev_radioChange);\r\n        document.querySelector('#prevprev').addEventListener('click', () => { this.move_start(); });\r\n        document.querySelector('#prev').addEventListener('click', () => { this.move_prev(); });\r\n        document.querySelector('#next').addEventListener('click', () => { this.move_next(); });\r\n        document.querySelector('#nextnext').addEventListener('click', () => { this.move_end(); });\r\n        document.querySelector('#replay').addEventListener('click', () => { this.jumpkento(); });\r\n        document.querySelector('#tweetlog').addEventListener('click', () => { this.tweetlog(); });\r\n        document.querySelector('#newgame').addEventListener('click', () => { this.reloadnew(); });\r\n        document.querySelector('#collapsible').addEventListener('click', () => {\r\n            document.querySelector('.manual').classList.toggle(\"hide\");\r\n            if (window.innerHeight > window.innerWidth) {\r\n                var element = document.documentElement;\r\n                var bottom = element.scrollHeight - element.clientHeight;\r\n                window.scroll(0, bottom);\r\n            }\r\n        });\r\n        window.addEventListener('orientationchange', this.zoom);\r\n        this.shuffleBoard();\r\n        // 連勝記録初期化\r\n        if (!this.storage.getItem('level_1')) {\r\n            this.storage.setItem('level_1', 0);\r\n        }\r\n        if (!this.storage.getItem('level_2')) {\r\n            this.storage.setItem('level_2', 0);\r\n        }\r\n        if (!this.storage.getItem('level_3')) {\r\n            this.storage.setItem('level_3', 0);\r\n        }\r\n        if (!this.storage.getItem('level_4')) {\r\n            this.storage.setItem('level_4', 0);\r\n        }\r\n        if (!this.storage.getItem('level_5')) {\r\n            this.storage.setItem('level_5', 0);\r\n        }\r\n        // レベル記憶\r\n        if (this.storage.getItem('level_save') !== undefined && this.storage.getItem('level_save') !== 'undefined' && this.storage.getItem('level_save') !== null) {\r\n            document.querySelector('#level').value = String(parseInt(this.storage.getItem('level_save')));\r\n        }\r\n        else {\r\n            this.storage.setItem('level_save', 1);\r\n            document.querySelector('#level').value = String(1);\r\n        }\r\n        //document.querySelector('#canv').classList.add(\"hue-rotate1\");\r\n        // パラメータを取得\r\n        let paramObj = this.getParam();\r\n        // 盤面を初期化\r\n        if (paramObj.init) {\r\n            this.startMap = this.getMapByParam(paramObj.init);\r\n            this.gameState.thisMap = Rule.copyMap(this.startMap);\r\n        }\r\n        else {\r\n            this.startMap = Rule.copyMap(this.gameState.thisMap);\r\n        }\r\n        // ログをデコード\r\n        if (paramObj.log) {\r\n            this.logArray = this.decodeLog(paramObj.log, this.startMap);\r\n        }\r\n        // レベル取得\r\n        if (paramObj.lv) {\r\n            document.querySelector('#level').value = String(parseInt(paramObj.lv));\r\n        }\r\n        if (this.logArray.length !== 0) {\r\n            document.querySelector('#log').classList.remove(\"hide\");\r\n            document.querySelector('#prevprev').classList.remove(\"hide\");\r\n            document.querySelector('#prev').classList.remove(\"hide\");\r\n            document.querySelector('#next').classList.remove(\"hide\");\r\n            document.querySelector('#nextnext').classList.remove(\"hide\");\r\n            document.querySelector('#span_replay').classList.add(\"hide\");\r\n            document.querySelector('#span_tweetlog').classList.add(\"hide\");\r\n            document.querySelector('#next').focus();\r\n        }\r\n        else {\r\n            document.querySelector('#log').classList.add(\"hide\");\r\n            document.querySelector('#prevprev').classList.add(\"hide\");\r\n            document.querySelector('#prev').classList.add(\"hide\");\r\n            document.querySelector('#next').classList.add(\"hide\");\r\n            document.querySelector('#nextnext').classList.add(\"hide\");\r\n            document.querySelector('#span_replay').classList.add(\"hide\");\r\n            document.querySelector('#span_tweetlog').classList.add(\"hide\");\r\n        }\r\n        // 画像読み込み成功時\r\n        this.view.ViewState.Img_bk.onload = () => {\r\n            this.view.ViewState.Img_bk_loaded = true;\r\n            this.view.flush(this.gameState, true, false);\r\n        };\r\n        // 画像読み込み失敗時\r\n        this.view.ViewState.Img_bk.onerror = () => {\r\n            this.view.flush(this.gameState, true, false);\r\n        };\r\n        // もう既に読み込み終わってた時\r\n        if (this.view.ViewState.Img_bk.width !== 0) {\r\n            this.view.ViewState.Img_bk_loaded = true;\r\n            this.view.flush(this.gameState, true, false);\r\n        }\r\n        // 2.5秒後に強制描画※Googleの検索結果から飛ぶとなぜか描画が走らない事があるので。\r\n        setTimeout(() => {\r\n            if (this.view.ViewState.Img_bk.width !== 0) {\r\n                this.view.ViewState.Img_bk_loaded = true;\r\n            }\r\n            this.view.flush(this.gameState, true, false);\r\n        }, 2500);\r\n        this.updateMessage();\r\n        this.setTweet(); // ツイートボタンを生成\r\n        if (this.logArray.length === 0) {\r\n            if (this.isBot() == false) {\r\n                window.setTimeout(() => {\r\n                    if (this.gameState.demo == true) {\r\n                        this.intervalID = window.setInterval(() => { this.playDemo(); }, 400);\r\n                        this.playDemo();\r\n                    }\r\n                }, 500);\r\n            }\r\n        }\r\n        else {\r\n            this.gameState.demo = false;\r\n            this.gameState.autoLog = true;\r\n            this.intervalID_log = window.setInterval(() => { this.playLog(); }, 1000);\r\n        }\r\n        this.gameState.goaled = false;\r\n        this.view.flush(this.gameState, true, false);\r\n    }\r\n    /**\r\n     * Demoを再生\r\n     */\r\n    playDemo() {\r\n        if (this.intervalID !== null) {\r\n            if (Math.random() > 0.3) {\r\n                this.ai(2);\r\n            }\r\n            else {\r\n                this.ai(1);\r\n            }\r\n        }\r\n        this.gameState.demo_inc++;\r\n        this.calcScore();\r\n        this.view.flush(this.gameState, false, false);\r\n        if (this.gameState.winner === 1 || this.gameState.winner === -1 || this.gameState.winner === 0) {\r\n            this.gameState.goaled = true;\r\n            this.gameState.winner = null;\r\n            this.view.flush(this.gameState, false, false);\r\n            this.shuffleBoard();\r\n        }\r\n        if (this.gameState.demo_inc > 42) {\r\n            window.clearInterval(this.intervalID);\r\n        }\r\n    }\r\n    /**\r\n     * Logを再生\r\n     */\r\n    playLog() {\r\n        if (this.intervalID_log !== null && this.gameState.autoLog == true) {\r\n            this.move_next();\r\n        }\r\n        else {\r\n            clearInterval(this.intervalID_log);\r\n        }\r\n    }\r\n    /**\r\n     * 小さい画面ではViewportを固定化\r\n     */\r\n    zoom() {\r\n        let viewport = document.querySelector('meta[name=viewport]');\r\n        if (screen.width < 500 && screen.height < 500) {\r\n            if (screen.width < screen.height) {\r\n                viewport.setAttribute('content', 'width=500,user-scalable=no');\r\n            }\r\n            else {\r\n                viewport.setAttribute('content', 'height=500,user-scalable=no');\r\n            }\r\n        }\r\n        else if (screen.width < 500) {\r\n            viewport.setAttribute('content', 'width=500,user-scalable=no');\r\n        }\r\n        else if (screen.height < 500) {\r\n            viewport.setAttribute('content', 'height=500,user-scalable=no');\r\n        }\r\n        // iOS9のViewportはなぜか機能してくれない。\r\n        if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {\r\n            let w = screen.width;\r\n            let w2 = 520;\r\n            if (Math.abs(window.orientation) !== 0) {\r\n                w = screen.height;\r\n                w2 = 900;\r\n            }\r\n            let rate = Math.round((w / w2) * 1000) / 1000.0;\r\n            if (rate == Math.round(rate)) { // iOS 9のViewportは整数指定すると機能しない\r\n                rate += 0.0001;\r\n            }\r\n            viewport.setAttribute('content', 'initial-scale=' + rate + ', minimum-scale=' + rate + ', maximum-scale=' + rate + ', user-scalable=no');\r\n        }\r\n    }\r\n    /**\r\n     * AIに考えてもらう。\r\n     */\r\n    ai(level) {\r\n        let hand;\r\n        let startTime = new Date();\r\n        let endTime;\r\n        // 終盤になったら長考してみる。\r\n        let count = this.getNodeCount(this.gameState.thisMap) / 2;\r\n        let plus = 0;\r\n        switch (level) {\r\n            case 1:\r\n                if (count <= 7) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 2:\r\n                if (count <= 8) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 3:\r\n                if (count <= 10) {\r\n                    plus++;\r\n                }\r\n                if (count <= 6) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 4:\r\n                if (count <= 11) {\r\n                    plus++;\r\n                }\r\n                if (count <= 7) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 5:\r\n                if (count > 16) {\r\n                    plus--;\r\n                }\r\n                if (count <= 12) {\r\n                    plus++;\r\n                }\r\n                if (count <= 8) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 6:\r\n                if (count > 16) {\r\n                    plus--;\r\n                }\r\n                if (count <= 12) {\r\n                    plus++;\r\n                }\r\n                if (count <= 8) {\r\n                    plus++;\r\n                }\r\n                break;\r\n        }\r\n        hand = Aijs.thinkAI(this.gameState.thisMap, this.gameState.turn_player, level + plus + 1, undefined, undefined, undefined)[0];\r\n        this.gameState.thisHand = hand;\r\n        if (hand) {\r\n            if (this.isGoaled(hand[1], this.gameState.turn_player)) {\r\n                this.gameState.goaled = true;\r\n                this.view.flush(this.gameState, false, true);\r\n                setTimeout(() => {\r\n                    this.gameState.goaled = false;\r\n                    this.view.flush(this.gameState, false, false);\r\n                }, 2000);\r\n            }\r\n            this.gameState.thisMap[hand[1]] = this.gameState.thisMap[hand[0]];\r\n            this.gameState.thisMap[hand[0]] = 0;\r\n            this.logArray2.push([hand[0], hand[1]]);\r\n            // //フォーカス座標を移す。\r\n            // mouse_x = Math.floor(hand[1] / 10)*cellSize+1\r\n            // mouse_y = Math.floor(hand[1] % 10)*cellSize+1\r\n        }\r\n        this.gameState.turn_player = this.gameState.turn_player * -1;\r\n        endTime = new Date();\r\n        this.thinktime = (endTime.getTime() - startTime.getTime()) / 1000;\r\n    }\r\n    /**\r\n     * ゴールしたか\r\n     */\r\n    isGoaled(afterHand, turn) {\r\n        if (turn > 0) {\r\n            if (afterHand % 10 === 0) {\r\n                return true;\r\n            }\r\n        }\r\n        else if (turn < 0) {\r\n            if (afterHand % 10 === 5) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 盤面をシャッフル。\r\n     */\r\n    shuffleBoard() {\r\n        // クリア\r\n        for (let num in this.gameState.thisMap) {\r\n            this.gameState.thisMap[num] = 0;\r\n        }\r\n        let arr = [1, 2, 3, 4, 5, 6, 7, 8];\r\n        let red_num = [0, 10, 20, 30, 40, 50, 11, 41];\r\n        let blue_num = [55, 45, 35, 25, 15, 5, 44, 14];\r\n        for (let i = arr.length - 1; i >= 0; i--) {\r\n            let r = Math.floor(Math.random() * (i + 1));\r\n            let tmp = arr[i];\r\n            arr[i] = arr[r];\r\n            arr[r] = tmp;\r\n        }\r\n        for (let num in blue_num) {\r\n            this.gameState.thisMap[blue_num[num]] = arr[num];\r\n        }\r\n        for (let num in red_num) {\r\n            this.gameState.thisMap[red_num[num]] = -1 * arr[num];\r\n        }\r\n    }\r\n    /**\r\n     * マウス位置取得\r\n     */\r\n    getMousePosition(e) {\r\n        if (e == null) {\r\n            return;\r\n        }\r\n        if (!e.clientX) { // SmartPhone\r\n            if (e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            else if (e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            else {\r\n                e = event === null || event === void 0 ? void 0 : event.touches[0];\r\n            }\r\n        }\r\n        let rect = e.target.getBoundingClientRect();\r\n        this.gameState.mouse_x = e.clientX - rect.left;\r\n        this.gameState.mouse_y = e.clientY - rect.top;\r\n        this.gameState.mouse_x = this.gameState.mouse_x * this.view.ViewState.Ratio;\r\n        this.gameState.mouse_y = this.gameState.mouse_y * this.view.ViewState.Ratio;\r\n    }\r\n    /**\r\n     * メッセージを更新\r\n     */\r\n    updateMessage() {\r\n        this.calcScore();\r\n        let Block = '';\r\n        document.querySelector('#blue').innerHTML = 'Blue: ' + this.gameState.blueScore + '/8';\r\n        document.querySelector('#red').innerHTML = ' Red: ' + this.gameState.redScore + '/8';\r\n        document.querySelector('#time').innerHTML = '(' + (this.thinktime.toFixed(3)) + 'sec)';\r\n        if (this.logArray.length === 0) {\r\n            if (this.gameState.winner == 1) {\r\n                this.gameState.message = 'You win!';\r\n                this.storage.setItem('level_' + document.querySelector('#level').value, parseInt(this.storage.getItem('level_' + document.querySelector('#level').value)) + 1);\r\n                this.endgame();\r\n            }\r\n            else if (this.gameState.winner == -1) {\r\n                this.gameState.message = 'You lose...';\r\n                this.storage.setItem('level_' + document.querySelector('#level').value, 0);\r\n                this.endgame();\r\n            }\r\n            else if (this.gameState.winner === 0) {\r\n                if (this.gameState.map_list[JSON.stringify(this.gameState.thisMap)] >= this.LIMIT_1000DAY) {\r\n                    this.gameState.message = '3fold repetition';\r\n                }\r\n                else {\r\n                    this.gameState.message = '-- Draw --';\r\n                }\r\n                this.endgame();\r\n            }\r\n        }\r\n        if (this.storage.getItem('level_' + document.querySelector('#level').value) > 0) {\r\n            document.querySelector('#wins').innerHTML = this.storage.getItem('level_' + document.querySelector('#level').value) + ' win!';\r\n        }\r\n        else {\r\n            document.querySelector('#wins').innerHTML = '';\r\n        }\r\n    }\r\n    /**\r\n     * ゲーム終了\r\n     */\r\n    endgame() {\r\n        if (this.logArray.length === 0) {\r\n            document.querySelector('#span_replay').classList.remove(\"hide\");\r\n            document.querySelector('#span_tweetlog').classList.remove(\"hide\");\r\n        }\r\n    }\r\n    /**\r\n     * 得点計算。\r\n     */\r\n    calcScore() {\r\n        let sum1 = 0;\r\n        let sum2 = 0;\r\n        let GoalTop = [0, 10, 20, 30, 40, 50];\r\n        let GoalBottom = [5, 15, 25, 35, 45, 55];\r\n        // 点数勝利        \r\n        for (let i in GoalTop) {\r\n            if (this.gameState.thisMap[GoalTop[i]] * 1 > 0) {\r\n                sum1 += this.gameState.thisMap[GoalTop[i]];\r\n            }\r\n        }\r\n        for (let i in GoalBottom) {\r\n            if (this.gameState.thisMap[GoalBottom[i]] * -1 > 0) {\r\n                sum2 += this.gameState.thisMap[GoalBottom[i]];\r\n            }\r\n        }\r\n        if (sum1 >= 8) {\r\n            this.gameState.winner = 1;\r\n        }\r\n        else if (sum2 <= -8) {\r\n            this.gameState.winner = -1;\r\n        }\r\n        // 手詰まりは判定\r\n        if (this.isNoneNode(this.gameState.thisMap)) {\r\n            if (Math.abs(sum1) > Math.abs(sum2)) {\r\n                this.gameState.winner = 1;\r\n            }\r\n            else if (Math.abs(sum1) < Math.abs(sum2)) { // 引き分けは後攻勝利\r\n                this.gameState.winner = -1;\r\n            }\r\n            else if (Math.abs(sum1) == Math.abs(sum2)) {\r\n                this.gameState.winner = 0;\r\n            }\r\n        }\r\n        else {\r\n            if (this.is1000day(this.gameState.thisMap) === true) {\r\n                this.gameState.winner = 0;\r\n            }\r\n        }\r\n        this.gameState.blueScore = Math.abs(sum1);\r\n        this.gameState.redScore = Math.abs(sum2);\r\n    }\r\n    /**\r\n     * 手詰まり判定。\r\n     */\r\n    isNoneNode(wkMap) {\r\n        let flag1 = false;\r\n        let flag2 = false;\r\n        for (let panel_num in wkMap) {\r\n            if (wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Rule.getCanMovePanelX(parseInt(panel_num), wkMap);\r\n            if (canMove.length !== 0) {\r\n                if (wkMap[panel_num] > 0) {\r\n                    flag1 = true;\r\n                }\r\n                else if (wkMap[panel_num] < 0) {\r\n                    flag2 = true;\r\n                }\r\n            }\r\n            if (flag1 && flag2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * 千日手\r\n     */\r\n    is1000day(wkMap) {\r\n        let map_json = JSON.stringify(wkMap);\r\n        if (this.gameState.map_list[map_json] === undefined) {\r\n            this.gameState.map_list[map_json] = 1;\r\n            return false;\r\n        }\r\n        else {\r\n            this.gameState.map_list[map_json] += 1;\r\n        }\r\n        if (this.gameState.map_list[map_json] >= this.LIMIT_1000DAY) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 手の数を取得\r\n     */\r\n    getNodeCount(wkMap) {\r\n        let count = 0;\r\n        for (let panel_num in wkMap) {\r\n            if (wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Rule.getCanMovePanelX(parseInt(panel_num), wkMap);\r\n            count += canMove.length;\r\n        }\r\n        return count;\r\n    }\r\n    /**\r\n     * パラメータ取得\r\n     */\r\n    getParam() {\r\n        let obj = {};\r\n        if (1 < document.location.search.length) {\r\n            let paramstr = document.location.search.substring(1).split('&');\r\n            for (let i = 0; i < paramstr.length; i++) {\r\n                let entry = paramstr[i].split('=');\r\n                let key = decodeURIComponent(entry[0]);\r\n                let value = decodeURIComponent(entry[1]);\r\n                obj[key] = decodeURIComponent(value);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    /**\r\n     * パタメータから初期配置を取得\r\n     */\r\n    getMapByParam(initString) {\r\n        let wkMap;\r\n        if (initString) {\r\n            wkMap = Rule.copyMap(this.gameState.thisMap);\r\n            // クリア\r\n            for (let num in wkMap) {\r\n                wkMap[num] = 0;\r\n            }\r\n            let arr = initString.split(',');\r\n            if (arr.length < 8) {\r\n                arr = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\r\n            }\r\n            let red_num = [0, 10, 20, 30, 40, 50, 11, 41];\r\n            let blue_num = [55, 45, 35, 25, 15, 5, 44, 14];\r\n            for (let num in blue_num) {\r\n                wkMap[blue_num[num]] = parseInt(arr[num]);\r\n            }\r\n            for (let num in red_num) {\r\n                wkMap[red_num[num]] = -1 * parseInt(arr[num]);\r\n            }\r\n        }\r\n        return wkMap;\r\n    }\r\n    /**\r\n     * ログをデコード。\r\n     */\r\n    decodeLog(logstr, wkInitMap) {\r\n        let wklogArray = [];\r\n        let wkMap = Rule.copyMap(wkInitMap);\r\n        let arrow = {\r\n            'q': 0, 'w': 1, 'e': 2,\r\n            'a': 3, 's': 4, 'd': 5,\r\n            'z': 6, 'x': 7, 'c': 8\r\n        };\r\n        logstr = logstr.replace(/q/g, 'q,').replace(/w/g, 'w,').replace(/e/g, 'e,');\r\n        logstr = logstr.replace(/a/g, 'a,').replace(/s/g, 's,').replace(/d/g, 'd,');\r\n        logstr = logstr.replace(/z/g, 'z,').replace(/x/g, 'x,').replace(/c/g, 'c,');\r\n        let logArr = logstr.split(',');\r\n        wklogArray.push(wkMap);\r\n        for (let i = 0; i < logArr.length; i++) {\r\n            if (logArr[i] === '') {\r\n                continue;\r\n            }\r\n            let arw = arrow[logArr[i].match(/[qweasdzxc]/)[0]];\r\n            let from = parseInt(logArr[i].match(/\\d*/)[0]);\r\n            let to = (Math.floor(from / 10) + Math.floor(arw % 3) - 1) * 10 +\r\n                (Math.floor(from % 10) + Math.floor(arw / 3) - 1);\r\n            wkMap = Rule.copyMap(wkMap);\r\n            wkMap[to] = wkMap[from];\r\n            wkMap[from] = 0;\r\n            wklogArray.push(wkMap);\r\n        }\r\n        return wklogArray;\r\n    }\r\n    /**\r\n     * ログをエンコード\r\n     */\r\n    encodeLog(wklogArray) {\r\n        let logstr = '';\r\n        let arrow = ['q', 'w', 'e',\r\n            'a', 's', 'd',\r\n            'z', 'x', 'c'];\r\n        for (let i in wklogArray) {\r\n            let from = wklogArray[i][0];\r\n            let to = wklogArray[i][1];\r\n            let x_vec = ((Math.floor(to / 10)) - Math.floor(from / 10));\r\n            let y_vec = ((Math.floor(to % 10)) - Math.floor(from % 10));\r\n            let arw = '';\r\n            if (x_vec === -1 && y_vec === -1) {\r\n                arw = 'q';\r\n            }\r\n            if (x_vec === 0 && y_vec === -1) {\r\n                arw = 'w';\r\n            }\r\n            if (x_vec === 1 && y_vec === -1) {\r\n                arw = 'e';\r\n            }\r\n            if (x_vec === -1 && y_vec === 0) {\r\n                arw = 'a';\r\n            }\r\n            if (x_vec === 0 && y_vec === 0) {\r\n                arw = 's';\r\n            }\r\n            if (x_vec === 1 && y_vec === 0) {\r\n                arw = 'd';\r\n            }\r\n            if (x_vec === -1 && y_vec === 1) {\r\n                arw = 'z';\r\n            }\r\n            if (x_vec === 0 && y_vec === 1) {\r\n                arw = 'x';\r\n            }\r\n            if (x_vec === 1 && y_vec === 1) {\r\n                arw = 'c';\r\n            }\r\n            logstr += from + arw;\r\n        }\r\n        return logstr;\r\n    }\r\n    /**\r\n     * ログを全部巻き戻す\r\n     */\r\n    move_start() {\r\n        this.logPointer = 0;\r\n        this.gameState.autoLog = false;\r\n        this.gameState.thisMap = Rule.copyMap(this.logArray[this.logPointer]);\r\n        this.gameState.winner = null;\r\n        this.gameState.goaled = false;\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * ログを戻す\r\n     */\r\n    move_prev() {\r\n        if (this.logPointer <= 0) {\r\n            return;\r\n        }\r\n        this.gameState.autoLog = false;\r\n        this.logPointer -= 1;\r\n        this.gameState.thisMap = Rule.copyMap(this.logArray[this.logPointer]);\r\n        this.gameState.winner = null;\r\n        this.gameState.goaled = false;\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * ログを進める\r\n     */\r\n    move_next() {\r\n        if (this.logPointer + 1 > this.logArray.length - 1) {\r\n            return;\r\n        }\r\n        this.logPointer += 1;\r\n        this.gameState.thisMap = Rule.copyMap(this.logArray[this.logPointer]);\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * ログを最後まで進める。\r\n     */\r\n    move_end() {\r\n        this.logPointer = this.logArray.length - 1;\r\n        this.gameState.autoLog = false;\r\n        this.gameState.thisMap = Rule.copyMap(this.logArray[this.logPointer]);\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * リセット\r\n     */\r\n    reloadnew() {\r\n        let url = document.location.href.split('?')[0];\r\n        //demo中ならdemoを終了\r\n        if (this.gameState.demo === true) {\r\n            this.ev_mouseClick(null);\r\n            return;\r\n        }\r\n        // パラメータを取得\r\n        let paramObj = this.getParam();\r\n        if (paramObj.lang) {\r\n            url += '?lang=' + paramObj.lang;\r\n        }\r\n        if (navigator.onLine) {\r\n            location.href = url;\r\n        }\r\n        else {\r\n            this.gameState.thisMap = Rule.copyMap(this.startMap);\r\n            this.shuffleBoard();\r\n            this.logArray2 = [];\r\n            this.gameState.message = '';\r\n            this.gameState.winner = null;\r\n            this.gameState.turn_player = 1;\r\n            this.view.flush(this.gameState, false, false);\r\n        }\r\n    }\r\n    /**\r\n     * 検討画面に飛ぶ\r\n     */\r\n    jumpkento() {\r\n        let url = document.location.href.split('?')[0];\r\n        let init = '?init=' + this.startMap[55] + ',' +\r\n            this.startMap[45] + ',' +\r\n            this.startMap[35] + ',' +\r\n            this.startMap[25] + ',' +\r\n            this.startMap[15] + ',' +\r\n            this.startMap[5] + ',' +\r\n            this.startMap[44] + ',' +\r\n            this.startMap[14];\r\n        let log = '&log=' + this.encodeLog(this.logArray2);\r\n        log += '&lv=' + document.querySelector('#level').value;\r\n        location.href = url + init + log;\r\n    }\r\n    /**\r\n     * ログをツイートする。\r\n     */\r\n    tweetlog() {\r\n        let url = document.location.href.split('?')[0];\r\n        let init = '?init=' + this.startMap[55] + ',' +\r\n            this.startMap[45] + ',' +\r\n            this.startMap[35] + ',' +\r\n            this.startMap[25] + ',' +\r\n            this.startMap[15] + ',' +\r\n            this.startMap[5] + ',' +\r\n            this.startMap[44] + ',' +\r\n            this.startMap[14];\r\n        let log = '%26log=' + this.encodeLog(this.logArray2);\r\n        log += '%26lv=' + document.querySelector('#level').value;\r\n        window.open('https://twitter.com/intent/tweet?text=' + url + init + log + '%20%23colamone');\r\n    }\r\n    /**\r\n     * ツイートボタンを読み込む。\r\n     */\r\n    setTweet() {\r\n        /*jshint -W030 */\r\n        (function f(d, s, id) {\r\n            let js, fjs = d.getElementsByTagName(s)[0];\r\n            if (!d.getElementById(id)) {\r\n                js = d.createElement(s);\r\n                js.id = id;\r\n                js.async = true;\r\n                js.src = 'https://platform.twitter.com/widgets.js';\r\n                fjs.parentNode.insertBefore(js, fjs);\r\n            }\r\n        })(document, 'script', 'twitter-wjs');\r\n    }\r\n    /**\r\n     * botかどうか判定\r\n     */\r\n    isBot() {\r\n        let ua = window.navigator.userAgent.toLowerCase();\r\n        if (ua.indexOf('bot') != -1 ||\r\n            ua.indexOf('lighthouse') != -1 ||\r\n            ua.indexOf('headless') != -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nconst bg = new BoardGamejs();\r\n/**\r\n * init\r\n */\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    bg.Run();\r\n});\r\n"],"names":["Rule","static","wkMap","Int8Array","nearwin","sum1","sum2","isNoneNode","live1","live2","i","num","NUMBERS","flag1","flag2","panel_num","hasCanMovePanelX","number","x","y","PIECES","target_x","target_y","target_number","canMove","idx","push","turn_player","nodeList","getCanMovePanelX","length","nodeMap","Eval","evalparam","ev","isDraw","end","isEndX","line","cell_p","p","DEFAULT_EVALPARAM","Aijs","map","depth","a","b","besthand","best_score","evalMap","getNodeMap","hand","map0","sc","deepThinkAllAB","undefined","GameState","constructor","this","goaled","blueScore","redScore","winner","message","demo","thisHand","thisMap","mouse_x","mouse_y","hover_piece","demo_inc","autoLog","isTouch","map_list","COLOR_LINE","COLOR_PANEL_4","COLOR_SELECT","COLOR_RED","COLOR_BLUE","COLOR_WHITE","Utils","ctx","w","h","r","beginPath","moveTo","lineTo","bezierCurveTo","closePath","fill","ViewState","CellSize","Ratio","Img_bk_loaded","Img_bk","Image","View","cache_on","CANV_SIZE","window","devicePixelRatio","src","canv_board","document","createElement","canv_board2","canv_focus","canv_pieces","canv_shadow","canv_hover_piece","canv_overlay","canv_bk","canv_cover","canv_score","canv_cache","init","querySelector","getContext","width","height","canvas","style","flush","gameState","initflg","cache_flg","clearRect","drawImage","drawBoard","drawBoard2","drawShadow","drawPieceAll","ctx_canv","drawHoverPiece","drawFocus","drawScore","drawOverlay","drawCover","drawBk","ctx_bk","ctx_cover","globalAlpha","fillStyle","fillRect","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","FillRoundRect","fontsize","Math","round","font","textBaseline","textAlign","fillText","ctx_score","blue","red","String","lineWidth","strokeStyle","stroke","ctx_focus","grad","createRadialGradient","addColorStop","target","canm","floor","arc","PI","ctx_board","createLinearGradient","strokeRect","ctx_board2","ctx_hover","drawPiece","wkCtx","goal","wkColor","save","clip","restore","abs","x_dot","y_dot","ctx_pieces","ctx_shadow","x0","y0","x1","y1","shadow_start_x","shadow_start_y","shadow_end_x","shadow_end_y","center","px1","py1","px2","py2","px3","py3","px4","py4","ctx_overlay","bg","view","thinktime","intervalID","intervalID_log","LIMIT_1000DAY","startMap","logPointer","logArray","logArray2","storage","ev_mouseMove","e","getMousePosition","ev_touchMove","preventDefault","stopPropagation","ev_mouseClick","reloadnew","copyMap","clearInterval","indexOf","isGoaled","setTimeout","updateMessage","ai","parseInt","value","ev_radioChange","setItem","getItem","innerHTML","parent","localStorage","navigator","cookieEnabled","hasItem","sKey","RegExp","escape","replace","test","cookie","unescape","sValue","Run","_a","_b","zoom","innerHeight","innerWidth","classList","remove","add","addEventListener","passive","move_start","move_prev","move_next","move_end","jumpkento","tweetlog","toggle","element","documentElement","bottom","scrollHeight","clientHeight","scroll","shuffleBoard","paramObj","getParam","getMapByParam","log","decodeLog","lv","focus","onload","onerror","setTweet","isBot","setInterval","playDemo","playLog","random","calcScore","viewport","screen","setAttribute","userAgent","w2","orientation","rate","level","endTime","startTime","Date","count","getNodeCount","plus","thinkAI","getTime","afterHand","turn","arr","red_num","blue_num","tmp","clientX","touches","event","rect","getBoundingClientRect","left","clientY","top","toFixed","endgame","JSON","stringify","GoalTop","GoalBottom","is1000day","map_json","obj","location","search","paramstr","substring","split","entry","key","decodeURIComponent","initString","logstr","wkInitMap","wklogArray","arrow","logArr","arw","match","from","to","encodeLog","x_vec","y_vec","url","href","lang","onLine","open","d","s","id","js","fjs","getElementsByTagName","getElementById","async","parentNode","insertBefore","ua","toLowerCase"],"sourceRoot":""}