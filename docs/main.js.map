{"version":3,"file":"main.js","mappings":"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","sources":["webpack://colamone_js/./src/logic/rule.ts","webpack://colamone_js/./src/logic/eval.ts","webpack://colamone_js/./src/logic/ai.ts","webpack://colamone_js/./src/state/gamestate.ts","webpack://colamone_js/./src/canvas/params.ts","webpack://colamone_js/./src/canvas/utils.ts","webpack://colamone_js/./src/state/viewState.ts","webpack://colamone_js/./src/canvas/view.ts","webpack://colamone_js/./src/logic/uiController.ts","webpack://colamone_js/./src/logic/boardgame.ts"],"sourcesContent":["/* @license Copyright (c) @kurehajime / source code: https://github.com/kurehajime/colamone_js */\r\n'use strict';\r\nexport class Rule {\r\n    /**\r\n     * Mapをコピーして返す。\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {Object.<number, number>}\r\n     */\r\n    static copyMap(wkMap) {\r\n        return new Int8Array(wkMap);\r\n    }\r\n    /**\r\n     * 終了判定(実質的勝利含む)\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @param  {boolean}  nearwin\r\n     * @return {number} 0:引き分け,1:先手勝利,-1:後手勝利\r\n     */\r\n    static isEndX(wkMap, nearwin) {\r\n        let sum1 = 0;\r\n        let sum2 = 0;\r\n        // ループだと遅いので展開\r\n        if (wkMap[0] > 0) {\r\n            sum1 += wkMap[0];\r\n        }\r\n        if (wkMap[10] > 0) {\r\n            sum1 += wkMap[10];\r\n        }\r\n        if (wkMap[20] > 0) {\r\n            sum1 += wkMap[20];\r\n        }\r\n        if (wkMap[30] > 0) {\r\n            sum1 += wkMap[30];\r\n        }\r\n        if (wkMap[40] > 0) {\r\n            sum1 += wkMap[40];\r\n        }\r\n        if (wkMap[50] > 0) {\r\n            sum1 += wkMap[50];\r\n        }\r\n        if (wkMap[5] * -1 > 0) {\r\n            sum2 += wkMap[5];\r\n        }\r\n        if (wkMap[15] * -1 > 0) {\r\n            sum2 += wkMap[15];\r\n        }\r\n        if (wkMap[25] * -1 > 0) {\r\n            sum2 += wkMap[25];\r\n        }\r\n        if (wkMap[35] * -1 > 0) {\r\n            sum2 += wkMap[35];\r\n        }\r\n        if (wkMap[45] * -1 > 0) {\r\n            sum2 += wkMap[45];\r\n        }\r\n        if (wkMap[55] * -1 > 0) {\r\n            sum2 += wkMap[55];\r\n        }\r\n        if (sum1 >= 8) {\r\n            return 1;\r\n        }\r\n        else if (sum2 <= -8) {\r\n            return -1;\r\n        }\r\n        // 手詰まりは判定\r\n        if (Rule.isNoneNode(wkMap)) {\r\n            if (sum1 > (-1 * sum2)) {\r\n                return 1;\r\n            }\r\n            else if (sum1 < (-1 * sum2)) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        // 実質的判定勝利\r\n        if (nearwin === false && (sum1 !== 0 || sum2 !== 0)) {\r\n            let live1 = 0;\r\n            let live2 = 0;\r\n            for (let i = 0; i <= 35; i++) {\r\n                let num = Rule.NUMBERS[i] | 0;\r\n                if (wkMap[num] > 0) {\r\n                    live1 += wkMap[num];\r\n                }\r\n                else if (wkMap[num] < 0) {\r\n                    live2 += wkMap[num];\r\n                }\r\n            }\r\n            if (sum1 > (-1 * (live2 + sum2))) {\r\n                return 1;\r\n            }\r\n            else if (-1 * sum2 > (live1 + sum1)) {\r\n                return -1;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * 引き分け判定。最後の一個を取るかどうかの判断\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {boolean}\r\n     */\r\n    static isDraw(wkMap) {\r\n        let sum1 = 0;\r\n        let sum2 = 0;\r\n        // ループだと遅いので展開\r\n        if (wkMap[0] > 0) {\r\n            sum1 += wkMap[0];\r\n        }\r\n        if (wkMap[10] > 0) {\r\n            sum1 += wkMap[10];\r\n        }\r\n        if (wkMap[20] > 0) {\r\n            sum1 += wkMap[20];\r\n        }\r\n        if (wkMap[30] > 0) {\r\n            sum1 += wkMap[30];\r\n        }\r\n        if (wkMap[40] > 0) {\r\n            sum1 += wkMap[40];\r\n        }\r\n        if (wkMap[50] > 0) {\r\n            sum1 += wkMap[50];\r\n        }\r\n        if (wkMap[5] * -1 > 0) {\r\n            sum2 -= wkMap[5];\r\n        }\r\n        if (wkMap[15] * -1 > 0) {\r\n            sum2 -= wkMap[15];\r\n        }\r\n        if (wkMap[25] * -1 > 0) {\r\n            sum2 -= wkMap[25];\r\n        }\r\n        if (wkMap[35] * -1 > 0) {\r\n            sum2 -= wkMap[35];\r\n        }\r\n        if (wkMap[45] * -1 > 0) {\r\n            sum2 -= wkMap[45];\r\n        }\r\n        if (wkMap[55] * -1 > 0) {\r\n            sum2 -= wkMap[55];\r\n        }\r\n        if (sum1 === sum2) {\r\n            if (!Rule.isNoneNode(wkMap)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 手詰まり判定\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {boolean}\r\n     */\r\n    static isNoneNode(wkMap) {\r\n        let flag1 = false;\r\n        let flag2 = false;\r\n        for (let i = 0; i <= 35; i++) {\r\n            let panel_num = Rule.NUMBERS[i] | 0;\r\n            if (wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Rule.hasCanMovePanelX(panel_num, wkMap);\r\n            if (canMove === true) {\r\n                if (wkMap[panel_num] > 0) {\r\n                    flag1 = true;\r\n                }\r\n                else if (wkMap[panel_num] < 0) {\r\n                    flag2 = true;\r\n                }\r\n            }\r\n            if (flag1 && flag2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * 動かせるマスを返す。Return:[NN,NN,NN...]\r\n     * @param  {number}  panel_num\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {boolean}\r\n     */\r\n    static hasCanMovePanelX(panel_num, wkMap) {\r\n        let number = wkMap[panel_num] | 0;\r\n        let x = ~~(panel_num / 10); // [~~]=Math.floor \r\n        let y = ~~(panel_num % 10);\r\n        // アガリのコマは動かしたらダメ。何も無いマスも動かしようがない。\r\n        if ((number > 0 && y === 0) || (number < 0 && y === 5) || number === 0) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < 9; i++) {\r\n            if (Rule.PIECES[number + 8][i] === 0) {\r\n                continue;\r\n            }\r\n            let target_x = x + ~~(i % 3) - 1;\r\n            let target_y = y + ~~(i / 3) - 1;\r\n            if (target_y < 0 || target_y > 5 || target_x > 5 || target_x < 0) {\r\n                continue;\r\n            }\r\n            let idx = target_x * 10 + target_y;\r\n            let target_number = wkMap[idx];\r\n            // 自コマとアガリのコマはとったらダメ。\r\n            if ((target_number * number > 0) || (target_number > 0 && target_y === 0) || (target_number < 0 && target_y === 5)) {\r\n                continue;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 動かせるマスを返す。Return:[NN,NN,NN...]\r\n     * @param  {number}  panel_num\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @return {Array.<number, number>}\r\n     */\r\n    static getCanMovePanelX(panel_num, wkMap) {\r\n        let number = wkMap[panel_num] | 0;\r\n        let x = ~~(panel_num / 10); // [~~]=Math.floor \r\n        let y = ~~(panel_num % 10);\r\n        let canMove = [];\r\n        // アガリのコマは動かしたらダメ。何も無いマスも動かしようがない。\r\n        if ((number > 0 && y === 0) || (number < 0 && y === 5) || number === 0) {\r\n            return canMove;\r\n        }\r\n        for (let i = 0; i < 9; i++) {\r\n            if (Rule.PIECES[number + 8][i] === 0) {\r\n                continue;\r\n            }\r\n            let target_x = x + ~~(i % 3) - 1;\r\n            let target_y = y + ~~(i / 3) - 1;\r\n            if (target_y < 0 || target_y > 5 || target_x > 5 || target_x < 0) {\r\n                continue;\r\n            }\r\n            let idx = target_x * 10 + target_y;\r\n            let target_number = wkMap[idx] | 0;\r\n            // 自コマとアガリのコマはとったらダメ。\r\n            if ((target_number * number > 0) || (target_number > 0 && target_y === 0) || (target_number < 0 && target_y === 5)) {\r\n                continue;\r\n            }\r\n            canMove.push(idx);\r\n        }\r\n        return canMove;\r\n    }\r\n    /**\r\n     * 起こりうる次の一手を返す。Return:[[q,map0],[qmap1],[q,map2]...] //q=[prev,next]\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @param  {number}  turn_player\r\n     * @return {Array.<number,Array.<Array.<number, number>, Object.<number, number>>>}\r\n     */\r\n    static getNodeMap(wkMap, turn_player) {\r\n        let nodeList = [];\r\n        for (let i = 0; i <= 35; i++) {\r\n            let panel_num = Rule.NUMBERS[i] | 0;\r\n            if (wkMap[panel_num] * turn_player <= 0 || wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Rule.getCanMovePanelX(panel_num, wkMap);\r\n            for (let num = 0; num < canMove.length; num++) {\r\n                let nodeMap = new Int8Array(wkMap);\r\n                nodeMap[canMove[num]] = nodeMap[panel_num];\r\n                nodeMap[panel_num] = 0;\r\n                nodeList.push([[panel_num, canMove[num]], nodeMap]);\r\n            }\r\n        }\r\n        return nodeList;\r\n    }\r\n    /**\r\n     * 千日手\r\n     */\r\n    static is1000day(wkMap, map_list) {\r\n        let map_json = JSON.stringify(wkMap);\r\n        if (map_list[map_json] === undefined) {\r\n            map_list[map_json] = 1;\r\n            return [false, map_list];\r\n        }\r\n        else {\r\n            map_list[map_json] += 1;\r\n        }\r\n        if (map_list[map_json] >= this.LIMIT_1000DAY) {\r\n            return [true, map_list];\r\n        }\r\n        return [false, map_list];\r\n    }\r\n}\r\nRule.LIMIT_1000DAY = 3;\r\n/**\r\n* 駒の進める方向\r\n* @const\r\n* @type {Array.<Array.<number>>}\r\n* index+8:コマの数字\r\n*/\r\nRule.PIECES = [\r\n    [0, 0, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    [1, 0, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    [0, 0, 0,\r\n        0, 0, 0,\r\n        0, 0, 0],\r\n    [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 0, 1],\r\n    [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    [1, 0, 1,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 0, 0]\r\n];\r\n/**\r\n * 盤の番号\r\n * @const\r\n * @type {Array.<number>}\r\n */\r\nRule.NUMBERS = [0, 1, 2, 3, 4, 5,\r\n    10, 11, 12, 13, 14, 15,\r\n    20, 21, 22, 23, 24, 25,\r\n    30, 31, 32, 33, 34, 35,\r\n    40, 41, 42, 43, 44, 45,\r\n    50, 51, 52, 53, 54, 55];\r\n","/* @license Copyright (c) @kurehajime / source code: https://github.com/kurehajime/colamone_js */\r\n'use strict';\r\nimport { Rule } from \"./rule\";\r\nexport class Eval {\r\n    /**\r\n     * 盤面を評価して-10000〜+10000で採点数する。\r\n     * @param  {Object.<number, number>}  wkMap\r\n     * @param  {boolean}  nearwin\r\n     * @param  {Object.<number, Array.<number>>}  evalparam\r\n     * @return {number}\r\n     */\r\n    static evalMap(wkMap, nearwin, evalparam) {\r\n        let ev = 0;\r\n        // 引き分け判定\r\n        if (Rule.isDraw(wkMap)) {\r\n            return 0;\r\n        }\r\n        // 終局判定\r\n        let end = Rule.isEndX(wkMap, nearwin);\r\n        if (end === 1) {\r\n            return +9999999;\r\n        }\r\n        else if (end === -1) {\r\n            return -9999999;\r\n        }\r\n        // 評価\r\n        for (let i = 0; i <= 35; i++) {\r\n            let panel_num = Rule.NUMBERS[i] | 0;\r\n            let cell_p = 0;\r\n            let p = wkMap[panel_num];\r\n            let line;\r\n            // コマの評価値を加算\r\n            if (p > 0) {\r\n                line = 5 - (panel_num % 10);\r\n                cell_p += evalparam[p][line]; // ポジションボーナス\r\n            }\r\n            else if (p < 0) {\r\n                line = (panel_num % 10);\r\n                cell_p += evalparam[-1 * p][line] * -1;\r\n            }\r\n            // 評価値に加算。\r\n            ev += cell_p;\r\n        }\r\n        return (ev | 0);\r\n    }\r\n}\r\n/**\r\n * 初期評価関数\r\n * @const\r\n * @type {Object.<number, Array.<number>>}\r\n */\r\nEval.DEFAULT_EVALPARAM = [\r\n    [],\r\n    [1800, 1850, 1900, 1950, 2100, 2800],\r\n    [1800, 1860, 1920, 2100, 2400, 3800],\r\n    [1450, 1520, 1590, 1900, 2350, 4450],\r\n    [1450, 1530, 1610, 2050, 2650, 5450],\r\n    [1350, 1440, 1530, 2100, 2850, 6350],\r\n    [1350, 1450, 1550, 2250, 3150, 7350],\r\n    [1250, 1360, 1470, 2300, 3350, 8250],\r\n    [1250, 1370, 1490, 2450, 4350, 11250] //8\r\n];\r\n","/* @license Copyright (c) @kurehajime / source code: https://github.com/kurehajime/colamone_js */\r\n'use strict';\r\nimport { Rule } from \"./rule\";\r\nimport { Eval } from \"./eval\";\r\nexport class Aijs {\r\n    /**\r\n     * よく考える\r\n     */\r\n    static deepThinkAllAB(map, turn_player, depth, a, b, nearwin, evalparam) {\r\n        let best_score = turn_player * 9999999 * -1;\r\n        let besthand;\r\n        if (depth === 0) {\r\n            best_score = Eval.evalMap(map, nearwin, evalparam);\r\n            return [besthand, best_score];\r\n        }\r\n        if (a === void 0 || b === void 0) {\r\n            a = 9999999 * turn_player * -1;\r\n            b = 9999999 * turn_player;\r\n        }\r\n        let nodeList = Rule.getNodeMap(map, turn_player);\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            let hand = nodeList[i][0];\r\n            let map0 = nodeList[i][1];\r\n            let sc = 0;\r\n            // 必勝            \r\n            let end = Rule.isEndX(map0, nearwin);\r\n            if (end === turn_player) {\r\n                return [hand, 999999 * turn_player];\r\n            }\r\n            // 必敗\r\n            if (end === turn_player * -1) {\r\n                if (besthand === void 0) {\r\n                    best_score = 999999 * turn_player * -1;\r\n                    besthand = hand;\r\n                }\r\n                continue;\r\n            }\r\n            if (Rule.isNoneNode(map0)) {\r\n                sc = 0;\r\n            }\r\n            else {\r\n                sc = Aijs.deepThinkAllAB(map0, turn_player * -1, depth - 1, b, a, nearwin, evalparam)[1];\r\n            }\r\n            if (besthand === void 0) {\r\n                best_score = sc;\r\n                besthand = hand;\r\n            }\r\n            if (turn_player === 1 && sc > best_score) {\r\n                best_score = sc;\r\n                besthand = hand;\r\n            }\r\n            else if (turn_player === -1 && sc < best_score) {\r\n                best_score = sc;\r\n                besthand = hand;\r\n            }\r\n            if (turn_player === 1 && a < best_score || turn_player === -1 && a > best_score) {\r\n                a = best_score;\r\n            }\r\n            if (turn_player === 1 && b <= best_score || turn_player === -1 && b >= best_score) {\r\n                break;\r\n            }\r\n        }\r\n        return [besthand, best_score];\r\n    }\r\n    /**\r\n     * 考える\r\n     */\r\n    static thinkAI(map, turn_player, depth, a, b, evalparam) {\r\n        let nearwin = false;\r\n        let hand = [undefined, 0];\r\n        let wkMap = new Int8Array(map);\r\n        if (!evalparam) {\r\n            evalparam = Eval.DEFAULT_EVALPARAM;\r\n        }\r\n        if (Rule.isEndX(wkMap, false) !== 0) {\r\n            nearwin = true;\r\n        }\r\n        hand = Aijs.deepThinkAllAB(wkMap, turn_player, depth, a, b, nearwin, evalparam);\r\n        if (hand[1] * turn_player === -999999) {\r\n            hand = Aijs.deepThinkAllAB(wkMap, turn_player, 1, a, b, nearwin, evalparam);\r\n        }\r\n        return hand;\r\n    }\r\n}\r\n","export class GameState {\r\n    constructor() {\r\n        this.goaled = false;\r\n        this.turn_player = 0;\r\n        this.blueScore = 0;\r\n        this.redScore = 0;\r\n        this.winner = null;\r\n        this.thisHand = undefined;\r\n        /*  let thisMap = {\r\n            0: -1, 10: -2, 20: -3, 30: -4, 40: -5, 50: -6,\r\n            1: 0, 11: -8, 21: 0, 31: 0, 41: -7, 51: 0,\r\n            2: 0, 12: 0, 22: 0, 32: 0, 42: 0, 52: 0,\r\n            3: 0, 13: 0, 23: 0, 33: 0, 43: 0, 53: 0,\r\n            4: 0, 14: 7, 24: 0, 34: 0, 44: 8, 54: 0,\r\n            5: 6, 15: 5, 25: 4, 35: 3, 45: 2, 55: 1\r\n          };*/\r\n        this.thisMap = new Int8Array([\r\n            -1, 0, 0, 0, 0, 6, 0, 0, 0, 0, -2, -8,\r\n            0, 0, 7, 5, 0, 0, 0, 0, -3, 0, 0, 0,\r\n            0, 4, 0, 0, 0, 0, -4, 0, 0, 0, 0,\r\n            3, 0, 0, 0, 0, -5, -7, 0, 0, 8, 2,\r\n            0, 0, 0, 0, -6, 0, 0, 0, 0, 1\r\n        ]);\r\n        this.hover_piece = null;\r\n        this.map_list = {};\r\n        this.level = 1;\r\n    }\r\n}\r\n","export const COLOR_LINE = '#333333';\r\nexport const COLOR_PANEL_1 = '#660033';\r\nexport const COLOR_PANEL_2 = '#004466';\r\nexport const COLOR_PANEL_3 = '#FFFFFF';\r\nexport const COLOR_PANEL_4 = '#111111';\r\nexport const COLOR_PANEL_5 = '#444444';\r\nexport const COLOR_PANEL_6 = '#888888';\r\nexport const COLOR_SELECT = '#7fed7f';\r\nexport const COLOR_SELECT2 = '#148d14';\r\nexport const COLOR_RED = '#E60073';\r\nexport const COLOR_BLUE = '#0099E6';\r\nexport const COLOR_RED2 = '#E60073';\r\nexport const COLOR_BLUE2 = '#0099E6';\r\nexport const COLOR_WHITE = '#FFFFFF';\r\nexport const PIECES = {\r\n    '1': [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    '2': [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 0, 1],\r\n    '3': [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    '4': [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    '5': [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    '6': [1, 0, 1,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    '7': [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    '8': [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 0, 0],\r\n    '-1': [1, 1, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    '-2': [1, 0, 1,\r\n        1, 0, 1,\r\n        1, 1, 1],\r\n    '-3': [1, 1, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    '-4': [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 1, 1],\r\n    '-5': [1, 0, 1,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    '-6': [0, 1, 0,\r\n        0, 0, 0,\r\n        1, 0, 1],\r\n    '-7': [0, 1, 0,\r\n        0, 0, 0,\r\n        0, 1, 0],\r\n    '-8': [0, 0, 0,\r\n        0, 0, 0,\r\n        0, 1, 0]\r\n};\r\n","export class Utils {\r\n    // 角丸\r\n    static FillRoundRect(ctx, x, y, w, h, r) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + r, y);\r\n        ctx.lineTo(x + w - r, y);\r\n        ctx.bezierCurveTo(x + w, y + 0, x + w, y + 0, x + w, y + r);\r\n        ctx.lineTo(x + w, y + h - r);\r\n        ctx.bezierCurveTo(x + w, y + h, x + w, y + h, x + w - r, y + h);\r\n        ctx.lineTo(x + r, y + h);\r\n        ctx.bezierCurveTo(x + 0, y + h, x + 0, y + h, x + 0, y + h - r);\r\n        ctx.lineTo(x, y + r);\r\n        ctx.bezierCurveTo(x + 0, y + 0, x + 0, y + 0, x + r, y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}\r\n","export class ViewState {\r\n    constructor() {\r\n        this.CellSize = 0;\r\n        this.Ratio = 1;\r\n        this.Img_bk_loaded = false;\r\n        this.Img_bk = new Image();\r\n        this.mouse_x = 0;\r\n        this.mouse_y = 0;\r\n        this.isTouch = true;\r\n        this.message = '';\r\n        this.demo = true;\r\n        this.demo_inc = 0;\r\n        this.autoLog = false;\r\n    }\r\n}\r\n","import { Rule } from \"../logic/rule\";\r\nimport * as params from \"./params\";\r\nimport { Utils } from \"./utils\";\r\nimport { ViewState } from \"../state/viewState\";\r\nexport class View {\r\n    constructor() {\r\n        this.ctx = null;\r\n        this.cache_on = false;\r\n        this.CANV_SIZE = 0;\r\n        this.ViewState = new ViewState;\r\n        if (window.devicePixelRatio !== undefined && window.devicePixelRatio != 1) {\r\n            this.ViewState.Ratio = window.devicePixelRatio;\r\n        }\r\n        this.CANV_SIZE = 500 * this.ViewState.Ratio;\r\n        this.ViewState.Img_bk.src = 'bk.gif';\r\n        this.canv_board = document.createElement('canvas');\r\n        this.canv_board2 = document.createElement('canvas');\r\n        this.canv_focus = document.createElement('canvas');\r\n        this.canv_pieces = document.createElement('canvas');\r\n        this.canv_shadow = document.createElement('canvas');\r\n        this.canv_hover_piece = document.createElement('canvas');\r\n        this.canv_overlay = document.createElement('canvas');\r\n        this.canv_bk = document.createElement('canvas');\r\n        this.canv_cover = document.createElement('canvas');\r\n        this.canv_score = document.createElement('canvas');\r\n        this.canv_cache = document.createElement('canvas');\r\n    }\r\n    init() {\r\n        this.ctx = document.querySelector('#canv').getContext('2d');\r\n        this.canv_board.width = this.CANV_SIZE;\r\n        this.canv_board.height = this.CANV_SIZE;\r\n        this.canv_board2.width = this.CANV_SIZE;\r\n        this.canv_board2.height = this.CANV_SIZE;\r\n        this.canv_focus.width = this.CANV_SIZE;\r\n        this.canv_focus.height = this.CANV_SIZE;\r\n        this.canv_pieces.width = this.CANV_SIZE;\r\n        this.canv_pieces.height = this.CANV_SIZE;\r\n        this.canv_shadow.width = this.CANV_SIZE;\r\n        this.canv_shadow.height = this.CANV_SIZE;\r\n        this.canv_hover_piece.width = this.CANV_SIZE;\r\n        this.canv_hover_piece.height = this.CANV_SIZE;\r\n        this.canv_overlay.width = this.CANV_SIZE;\r\n        this.canv_overlay.height = this.CANV_SIZE;\r\n        this.canv_bk.width = this.CANV_SIZE;\r\n        this.canv_bk.height = this.CANV_SIZE;\r\n        this.canv_cover.width = this.CANV_SIZE;\r\n        this.canv_cover.height = this.CANV_SIZE;\r\n        this.canv_score.width = this.CANV_SIZE;\r\n        this.canv_score.height = this.CANV_SIZE;\r\n        this.canv_cache.width = this.CANV_SIZE;\r\n        this.canv_cache.height = this.CANV_SIZE;\r\n        this.ViewState.CellSize = this.CANV_SIZE / 6;\r\n        //retina対応\r\n        this.ctx.canvas.style.width = this.CANV_SIZE / this.ViewState.Ratio + \"px\";\r\n        this.ctx.canvas.style.height = this.CANV_SIZE / this.ViewState.Ratio + \"px\";\r\n        this.ctx.canvas.width = this.CANV_SIZE;\r\n        this.ctx.canvas.height = this.CANV_SIZE;\r\n    }\r\n    /**\r\n     * 画面描画。\r\n     */\r\n    flush(gameState, initflg, cache_flg) {\r\n        let wkMap = new Int8Array(gameState.thisMap);\r\n        this.ctx.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if (cache_flg === false) {\r\n            this.cache_on = false;\r\n        }\r\n        // キャッシュに保存\r\n        if (cache_flg === false || this.cache_on === false) {\r\n            // 盤面を描画\r\n            this.ctx.drawImage(this.drawBoard(initflg), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // テカリを描画\r\n            this.ctx.drawImage(this.drawBoard2(initflg), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // 選択したコマを除外\r\n            if (gameState.hover_piece !== null) {\r\n                wkMap[gameState.hover_piece] = 0;\r\n            }\r\n            // 残像を表示\r\n            this.ctx.drawImage(this.drawShadow(wkMap, gameState.thisHand), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // コマを表示\r\n            this.ctx.drawImage(this.drawPieceAll(wkMap), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // キャッシュに保存\r\n            let ctx_canv = this.canv_cache.getContext('2d');\r\n            ctx_canv.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            ctx_canv.drawImage(this.ctx.canvas, 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            // キャッシュ有効化\r\n            this.cache_on = true;\r\n        }\r\n        else {\r\n            // キャッシュから描画\r\n            this.ctx.drawImage(this.canv_cache, 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n        // 選択したコマを表示\r\n        this.ctx.drawImage(this.drawHoverPiece(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if ((this.ViewState.mouse_x !== 0 || this.ViewState.mouse_y !== 0) && this.ViewState.demo === false) {\r\n            // フォーカスを描画\r\n            this.ctx.drawImage(this.drawFocus(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n        //スコアを表示\r\n        if (gameState.goaled || gameState.winner !== null) {\r\n            if (this.ViewState.demo === false && this.ViewState.autoLog == false) {\r\n                this.ctx.drawImage(this.drawScore(gameState), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n            }\r\n        }\r\n        // メッセージを描画\r\n        this.ctx.drawImage(this.drawOverlay(), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        // カバーを描画\r\n        if (this.ViewState.demo === true) {\r\n            this.ctx.drawImage(this.drawCover(), 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n    }\r\n    /**\r\n     * 背景描画\r\n     */\r\n    drawBk() {\r\n        let ctx_bk = this.canv_bk.getContext('2d');\r\n        if (this.ViewState.Img_bk_loaded) {\r\n            ctx_bk.drawImage(this.ViewState.Img_bk, 0, 0, this.CANV_SIZE / this.ViewState.Ratio, this.CANV_SIZE / this.ViewState.Ratio, 0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        }\r\n        return this.canv_bk;\r\n    }\r\n    /**\r\n     * カバー描画\r\n     */\r\n    drawCover() {\r\n        // 背景\r\n        let ctx_cover = this.canv_cover.getContext('2d');\r\n        ctx_cover.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_cover.globalAlpha = 0.50;\r\n        ctx_cover.fillStyle = '#000000';\r\n        ctx_cover.fillRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        // 枠\r\n        let x = this.ViewState.CellSize * 2;\r\n        let y = this.ViewState.CellSize * 3.5;\r\n        ctx_cover.shadowBlur = 20;\r\n        ctx_cover.shadowColor = 'rgba(0, 0, 0, 0.3)';\r\n        ctx_cover.shadowOffsetX = 5;\r\n        ctx_cover.shadowOffsetY = 5;\r\n        ctx_cover.globalAlpha = 0.8;\r\n        ctx_cover.fillStyle = params.COLOR_WHITE;\r\n        ctx_cover.beginPath();\r\n        Utils.FillRoundRect(ctx_cover, x, y, this.ViewState.CellSize * 2, this.ViewState.CellSize * 1, this.ViewState.CellSize / 7);\r\n        ctx_cover.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        ctx_cover.shadowBlur = 0;\r\n        ctx_cover.shadowOffsetX = 0;\r\n        ctx_cover.shadowOffsetY = 0;\r\n        // 文字\r\n        let fontsize = Math.round(this.ViewState.CellSize * 0.5);\r\n        let message = 'Play';\r\n        message += (this.ViewState.demo_inc % 10 == 0) ? \" \" : \"\";\r\n        ctx_cover.shadowBlur = 0;\r\n        ctx_cover.shadowOffsetX = 0;\r\n        ctx_cover.shadowOffsetY = 0;\r\n        ctx_cover.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        ctx_cover.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        ctx_cover.globalAlpha = 1;\r\n        ctx_cover.fillStyle = params.COLOR_LINE;\r\n        ctx_cover.textBaseline = 'middle';\r\n        ctx_cover.textAlign = 'center';\r\n        ctx_cover.beginPath();\r\n        ctx_cover.fillText(message, this.ViewState.CellSize * 3, this.ViewState.CellSize * 4);\r\n        // 文字２\r\n        message = 'colamone';\r\n        fontsize = Math.round(this.ViewState.CellSize * 1);\r\n        ctx_cover.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        ctx_cover.fillStyle = params.COLOR_WHITE;\r\n        ctx_cover.shadowBlur = 0;\r\n        ctx_cover.beginPath();\r\n        ctx_cover.fillText(message, this.ViewState.CellSize * 3, this.ViewState.CellSize * 2);\r\n        return this.canv_cover;\r\n    }\r\n    /**\r\n     * スコア描画\r\n     */\r\n    drawScore(gameState) {\r\n        // 背景\r\n        let ctx_score = this.canv_score.getContext('2d');\r\n        let message = \"\";\r\n        let fontsize = Math.round(this.ViewState.CellSize * 1.5);\r\n        let blue = params.COLOR_BLUE2;\r\n        let red = params.COLOR_RED2;\r\n        ctx_score.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_score.globalAlpha = 0.4;\r\n        ctx_score.textBaseline = 'middle';\r\n        ctx_score.textAlign = 'center';\r\n        ctx_score.shadowBlur = 10;\r\n        ctx_score.shadowColor = 'rgba(0, 0, 0, 0.5)';\r\n        ctx_score.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        // 文字\r\n        ctx_score.globalAlpha = 0.3;\r\n        ctx_score.shadowBlur = 2;\r\n        ctx_score.shadowColor = 'rgba(255, 255, 255, 1)';\r\n        ctx_score.fillStyle = red;\r\n        message = String(gameState.redScore);\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.ViewState.CellSize * 1, this.ViewState.CellSize * 3.8);\r\n        // 文字\r\n        message = \"8\";\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.ViewState.CellSize * 2, this.ViewState.CellSize * 5.3);\r\n        //線\r\n        ctx_score.lineWidth = this.ViewState.CellSize * 0.2;\r\n        ctx_score.strokeStyle = red;\r\n        ctx_score.beginPath();\r\n        ctx_score.moveTo(this.ViewState.CellSize * 0.4, this.ViewState.CellSize * 5.55);\r\n        ctx_score.lineTo(this.ViewState.CellSize * 2.6, this.ViewState.CellSize * 3.55);\r\n        ctx_score.closePath();\r\n        ctx_score.stroke();\r\n        // 文字\r\n        message = String(gameState.blueScore);\r\n        ctx_score.fillStyle = blue;\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.ViewState.CellSize * 4, this.ViewState.CellSize * 0.7);\r\n        // 文字\r\n        message = \"8\";\r\n        ctx_score.beginPath();\r\n        ctx_score.fillText(message, this.ViewState.CellSize * 5, this.ViewState.CellSize * 2.3);\r\n        // 文字\r\n        ctx_score.lineWidth = this.ViewState.CellSize * 0.2;\r\n        ctx_score.strokeStyle = blue;\r\n        ctx_score.beginPath();\r\n        ctx_score.moveTo(this.ViewState.CellSize * 3.4, this.ViewState.CellSize * 2.55);\r\n        ctx_score.lineTo(this.ViewState.CellSize * 5.6, this.ViewState.CellSize * 0.55);\r\n        ctx_score.closePath();\r\n        ctx_score.stroke();\r\n        return this.canv_score;\r\n    }\r\n    /**\r\n     * フォーカスを描画\r\n     */\r\n    drawFocus(gameState) {\r\n        // 選択マスを強調\r\n        let x = this.ViewState.mouse_x - (this.ViewState.mouse_x % this.ViewState.CellSize);\r\n        let y = this.ViewState.mouse_y - (this.ViewState.mouse_y % this.ViewState.CellSize);\r\n        let ctx_focus = this.canv_focus.getContext('2d');\r\n        let grad = ctx_focus.createRadialGradient(x, y, 0, x, y, this.ViewState.CellSize);\r\n        grad.addColorStop(0.3, params.COLOR_SELECT);\r\n        grad.addColorStop(1, params.COLOR_SELECT2);\r\n        ctx_focus.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_focus.globalAlpha = 0.35;\r\n        ctx_focus.fillStyle = grad;\r\n        ctx_focus.lineWidth = 1;\r\n        ctx_focus.beginPath();\r\n        ctx_focus.fillRect(x, y, this.ViewState.CellSize, this.ViewState.CellSize);\r\n        if (this.ViewState.isTouch === true && gameState.hover_piece === null) {\r\n            return this.canv_focus;\r\n        }\r\n        // 移動可能マスを強調\r\n        let target = (x / this.ViewState.CellSize) * 10 + (y / this.ViewState.CellSize);\r\n        if (gameState.thisMap[target] * gameState.turn_player > 0) {\r\n            let canm = Rule.getCanMovePanelX(target, gameState.thisMap);\r\n            for (let i = 0; i <= canm.length - 1; i++) {\r\n                x = Math.floor(canm[i] / 10);\r\n                y = Math.floor(canm[i] % 10);\r\n                ctx_focus.globalAlpha = 0.6;\r\n                ctx_focus.strokeStyle = params.COLOR_SELECT;\r\n                ctx_focus.lineWidth = this.ViewState.CellSize / 20;\r\n                ctx_focus.beginPath();\r\n                ctx_focus.arc(x * this.ViewState.CellSize + (this.ViewState.CellSize / 2), y * this.ViewState.CellSize + (this.ViewState.CellSize / 2), (this.ViewState.CellSize / 2) - (this.ViewState.CellSize / 10), 0, Math.PI * 2, false);\r\n                ctx_focus.stroke();\r\n            }\r\n        }\r\n        return this.canv_focus;\r\n    }\r\n    /**\r\n     * 盤面を描画してCANVASを返す。\r\n     */\r\n    drawBoard(initflg) {\r\n        if (initflg === false) {\r\n            return this.canv_board;\r\n        }\r\n        let ctx_board = this.canv_board.getContext('2d');\r\n        ctx_board.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        let grad = ctx_board.createLinearGradient(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        grad.addColorStop(0, params.COLOR_PANEL_6);\r\n        grad.addColorStop(0.3, params.COLOR_PANEL_5);\r\n        grad.addColorStop(1, params.COLOR_PANEL_4);\r\n        for (let x = 0; x < 6; x++) {\r\n            for (let y = 0; y < 6; y++) {\r\n                // パネル描画\r\n                ctx_board.strokeStyle = params.COLOR_LINE;\r\n                if (y === 0) {\r\n                    ctx_board.fillStyle = params.COLOR_PANEL_1;\r\n                }\r\n                else if (y == 5) {\r\n                    ctx_board.fillStyle = params.COLOR_PANEL_2;\r\n                }\r\n                else if ((x + y) % 2 === 0) {\r\n                    ctx_board.fillStyle = params.COLOR_PANEL_3;\r\n                }\r\n                else {\r\n                    ctx_board.fillStyle = params.COLOR_PANEL_4;\r\n                    ctx_board.fillStyle = grad;\r\n                }\r\n                ctx_board.beginPath();\r\n                ctx_board.fillRect(x * this.ViewState.CellSize, y * this.ViewState.CellSize, this.ViewState.CellSize, this.ViewState.CellSize);\r\n                ctx_board.strokeRect(x * this.ViewState.CellSize, y * this.ViewState.CellSize, this.ViewState.CellSize, this.ViewState.CellSize);\r\n            }\r\n        }\r\n        return this.canv_board;\r\n    }\r\n    /**\r\n     * 盤面をテカテカにする。\r\n     */\r\n    drawBoard2(initflg) {\r\n        if (initflg === false) {\r\n            return this.canv_board2;\r\n        }\r\n        let ctx_board2 = this.canv_board2.getContext('2d');\r\n        ctx_board2.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        ctx_board2.globalAlpha = 0.07;\r\n        ctx_board2.fillStyle = params.COLOR_WHITE;\r\n        ctx_board2.beginPath();\r\n        ctx_board2.arc(this.ViewState.CellSize * 1, -3 * this.ViewState.CellSize, 7 * this.ViewState.CellSize, 0, Math.PI * 2, false);\r\n        ctx_board2.fill();\r\n        return this.canv_board2;\r\n    }\r\n    /**\r\n     * 浮遊しているコマを描画する。\r\n     */\r\n    drawHoverPiece(gameState) {\r\n        let ctx_hover = this.canv_hover_piece.getContext('2d');\r\n        ctx_hover.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        let x = this.ViewState.mouse_x - (this.ViewState.CellSize / 2);\r\n        let y = this.ViewState.mouse_y - (this.ViewState.CellSize / 2);\r\n        if (gameState.hover_piece !== null) {\r\n            this.drawPiece(ctx_hover, x, y, gameState.thisMap[gameState.hover_piece], false);\r\n        }\r\n        return this.canv_hover_piece;\r\n    }\r\n    /**\r\n     * コマを描画する。\r\n     */\r\n    drawPiece(wkCtx, x, y, number, goal) {\r\n        let wkColor;\r\n        // 外枠を描画\r\n        if (number === 0) {\r\n            return wkCtx;\r\n        }\r\n        else if (number > 0) {\r\n            wkColor = params.COLOR_BLUE;\r\n        }\r\n        else {\r\n            wkColor = params.COLOR_RED;\r\n        }\r\n        let grad = this.ctx.createLinearGradient(x, y, x + this.ViewState.CellSize, y + this.ViewState.CellSize);\r\n        grad.addColorStop(0, 'rgb(255, 255, 255)');\r\n        grad.addColorStop(0.4, wkColor);\r\n        grad.addColorStop(1, wkColor);\r\n        wkCtx.shadowBlur = 10;\r\n        wkCtx.shadowColor = 'rgba(0, 0, 0, 1)';\r\n        wkCtx.shadowOffsetX = 2;\r\n        wkCtx.shadowOffsetY = 2;\r\n        wkCtx.fillStyle = grad;\r\n        wkCtx.beginPath();\r\n        Utils.FillRoundRect(wkCtx, x + this.ViewState.CellSize / 10, y + this.ViewState.CellSize / 10, this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5, this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5, this.ViewState.CellSize / 7);\r\n        wkCtx.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        wkCtx.shadowBlur = 0;\r\n        wkCtx.shadowOffsetX = 0;\r\n        wkCtx.shadowOffsetY = 0;\r\n        // 曇りエフェクト\r\n        if (this.ViewState.Img_bk_loaded) {\r\n            wkCtx.globalAlpha = 0.35;\r\n            wkCtx.save();\r\n            wkCtx.clip();\r\n            wkCtx.drawImage(this.drawBk(), x + this.ViewState.CellSize / 10, y + this.ViewState.CellSize / 10, this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5, this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5);\r\n            wkCtx.restore();\r\n            wkCtx.globalAlpha = 1;\r\n        }\r\n        // 文字を描画。\r\n        wkCtx.fillStyle = params.COLOR_WHITE;\r\n        let fontsize = Math.round(this.ViewState.CellSize * 0.18);\r\n        wkCtx.textBaseline = 'middle';\r\n        wkCtx.textAlign = 'center';\r\n        wkCtx.font = fontsize + \"pt 'Play',Arial\";\r\n        wkCtx.beginPath();\r\n        // 数字を印字\r\n        wkCtx.fillText(String(Math.abs(number)), x + (this.ViewState.CellSize / 2), y + (this.ViewState.CellSize / 2));\r\n        // 点を描画\r\n        for (let i = 0; i <= params.PIECES[number].length - 1; i++) {\r\n            if (params.PIECES[number][i] === 0) {\r\n                continue;\r\n            }\r\n            let x_dot = x + this.ViewState.CellSize / 4.16 + (Math.floor(this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5) / 3) * Math.floor(i % 3.0);\r\n            let y_dot = y + this.ViewState.CellSize / 4.16 + (Math.floor(this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5) / 3) * Math.floor(i / 3.0);\r\n            wkCtx.fillStyle = params.COLOR_WHITE;\r\n            wkCtx.beginPath();\r\n            wkCtx.arc(x_dot, y_dot, this.ViewState.CellSize * 0.06, 0, Math.PI * 2, false);\r\n            wkCtx.fill();\r\n        }\r\n        if (goal) { // 得点を印字\r\n            wkCtx.shadowBlur = 10;\r\n            wkCtx.shadowColor = 'rgba(0, 0, 0, 1)';\r\n            wkCtx.globalAlpha = 1;\r\n            wkCtx.fillStyle = params.COLOR_WHITE;\r\n            fontsize = Math.round(this.ViewState.CellSize * 0.5);\r\n            wkCtx.textBaseline = 'middle';\r\n            wkCtx.textAlign = 'center';\r\n            wkCtx.font = 'bolder ' + fontsize + 'pt Play,Arial ';\r\n            wkCtx.beginPath();\r\n            wkCtx.fillText(String(Math.abs(number)), x + (this.ViewState.CellSize / 2), y + (this.ViewState.CellSize / 2));\r\n            wkCtx.globalAlpha = 1;\r\n            wkCtx.shadowColor = 'rgba(0, 0, 0, 0)';\r\n            wkCtx.shadowBlur = 0;\r\n        }\r\n        return wkCtx;\r\n    }\r\n    /**\r\n     * コマをすべて描画\r\n     */\r\n    drawPieceAll(wkMap) {\r\n        let ctx_pieces = this.canv_pieces.getContext('2d');\r\n        ctx_pieces.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        for (let x = 0; x < 6; x++) {\r\n            for (let y = 0; y < 6; y++) {\r\n                if (wkMap[x * 10 + y] !== 0) {\r\n                    let goal = false;\r\n                    if (wkMap[x * 10 + y] > 0 && y === 0) {\r\n                        goal = true;\r\n                    }\r\n                    else if (wkMap[x * 10 + y] < 0 && y == 5) {\r\n                        goal = true;\r\n                    }\r\n                    ctx_pieces = this.drawPiece(ctx_pieces, x * this.ViewState.CellSize, y * this.ViewState.CellSize, wkMap[x * 10 + y], goal);\r\n                }\r\n            }\r\n        }\r\n        return this.canv_pieces;\r\n    }\r\n    /**\r\n     * 残像を描画する。\r\n     */\r\n    drawShadow(wkMap, hand) {\r\n        let ctx_shadow = this.canv_shadow.getContext('2d');\r\n        ctx_shadow.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if (hand === undefined) {\r\n            return this.canv_shadow;\r\n        }\r\n        let x0 = (hand[0] / 10 | 0);\r\n        let y0 = hand[0] % 10;\r\n        let x1 = (hand[1] / 10 | 0);\r\n        let y1 = hand[1] % 10;\r\n        let h = this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5;\r\n        let w = this.ViewState.CellSize - 1 * this.ViewState.CellSize / 5;\r\n        let x = x1 * this.ViewState.CellSize + this.ViewState.CellSize / 10;\r\n        let y = y1 * this.ViewState.CellSize + this.ViewState.CellSize / 10;\r\n        let shadow_start_x = x + w / 2;\r\n        let shadow_start_y = y + h / 2;\r\n        let shadow_end_x = shadow_start_x;\r\n        let shadow_end_y = shadow_start_y;\r\n        let number = wkMap[hand[1]];\r\n        let wkColor = '';\r\n        let center = 0;\r\n        let grad;\r\n        if (hand.length != 2) {\r\n            return this.canv_shadow;\r\n        }\r\n        if (number > 0) {\r\n            wkColor = params.COLOR_BLUE; // \"#EAEFFD\";   \r\n        }\r\n        else {\r\n            wkColor = params.COLOR_RED; // \"#FDEAFA\";           \r\n        }\r\n        if (x0 == x1 || y0 == y1) { // 直角移動\r\n            if ((x0 + y0) % 2 === 0 && y0 !== 0 && y0 != 5) {\r\n                center = 0.5;\r\n            }\r\n            else {\r\n                center = 0.3;\r\n            }\r\n            if (x0 < x1) {\r\n                x = x - w + 10;\r\n                shadow_end_x = shadow_end_x - w;\r\n            }\r\n            if (x0 > x1) {\r\n                x = x + w - 10;\r\n                shadow_end_x = shadow_end_x + w;\r\n            }\r\n            if (y0 < y1) {\r\n                y = y - h + 10;\r\n                shadow_end_y = shadow_end_y - h;\r\n            }\r\n            if (y0 > y1) {\r\n                y = y + h - 10;\r\n                shadow_end_y = shadow_end_y + h;\r\n            }\r\n            grad = ctx_shadow.createLinearGradient(shadow_start_x, shadow_start_y, shadow_end_x, shadow_end_y);\r\n            grad.addColorStop(0, wkColor);\r\n            grad.addColorStop(center, wkColor);\r\n            grad.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n            ctx_shadow.fillStyle = grad;\r\n            ctx_shadow.fillRect(x, y, h, w);\r\n        }\r\n        else { // 斜め移動\r\n            if ((x0 + y0) % 2 === 0 && y0 !== 0 && y0 != 5) {\r\n                center = 0.3;\r\n            }\r\n            else {\r\n                center = 0.5;\r\n            }\r\n            let [px1, py1, px2, py2, px3, py3, px4, py4] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n            if (x0 < x1 && y0 < y1) {\r\n                px1 = x;\r\n                py1 = y - h;\r\n                px2 = x + w;\r\n                py2 = y;\r\n                px3 = x;\r\n                py3 = y + h;\r\n                px4 = x - w;\r\n                py4 = y;\r\n                shadow_end_x = shadow_end_x - w;\r\n                shadow_end_y = shadow_end_y - h;\r\n                shadow_start_x = shadow_start_x + w * 2;\r\n                shadow_start_y = shadow_start_y + h * 2;\r\n            }\r\n            if (x0 > x1 && y0 > y1) {\r\n                px1 = x + w;\r\n                py1 = y;\r\n                px2 = x + w + w;\r\n                py2 = y + h;\r\n                px3 = x + w;\r\n                py3 = y + h + h;\r\n                px4 = x;\r\n                py4 = y + h;\r\n                shadow_end_x = shadow_end_x + w;\r\n                shadow_end_y = shadow_end_y + h;\r\n                shadow_start_x = shadow_start_x - w * 2;\r\n                shadow_start_y = shadow_start_y - h * 2;\r\n            }\r\n            if (x0 < x1 && y0 > y1) {\r\n                px1 = x;\r\n                py1 = y;\r\n                px2 = x + w;\r\n                py2 = y + h;\r\n                px3 = x;\r\n                py3 = y + h + h;\r\n                px4 = x - w;\r\n                py4 = y + h;\r\n                shadow_end_x = shadow_end_x - w;\r\n                shadow_end_y = shadow_end_y + h;\r\n                shadow_start_x = shadow_start_x + w * 2;\r\n                shadow_start_y = shadow_start_y - h * 2;\r\n            }\r\n            if (x0 > x1 && y0 < y1) {\r\n                px1 = x + w;\r\n                py1 = y - h;\r\n                px2 = x + w + w;\r\n                py2 = y;\r\n                px3 = x + w;\r\n                py3 = y + h;\r\n                px4 = x;\r\n                py4 = y;\r\n                shadow_end_x = shadow_end_x + w;\r\n                shadow_end_y = shadow_end_y - h;\r\n                shadow_start_x = shadow_start_x - w * 2;\r\n                shadow_start_y = shadow_start_y + h * 2;\r\n            }\r\n            ctx_shadow.beginPath();\r\n            ctx_shadow.moveTo(px1, py1);\r\n            ctx_shadow.lineTo(px2, py2);\r\n            ctx_shadow.lineTo(px3, py3);\r\n            ctx_shadow.lineTo(px4, py4);\r\n            ctx_shadow.lineTo(px1, py1);\r\n            ctx_shadow.closePath();\r\n            grad = ctx_shadow.createLinearGradient(shadow_start_x, shadow_start_y, shadow_end_x, shadow_end_y);\r\n            grad.addColorStop(0, wkColor);\r\n            grad.addColorStop(center, wkColor);\r\n            grad.addColorStop(0.97, 'rgba(255, 255, 255, 0)');\r\n            ctx_shadow.fillStyle = grad;\r\n            ctx_shadow.fill();\r\n        }\r\n        return this.canv_shadow;\r\n    }\r\n    /**\r\n     * メッセージを描画\r\n     */\r\n    drawOverlay() {\r\n        let ctx_overlay = this.canv_overlay.getContext('2d');\r\n        let x = this.ViewState.CellSize * 1.3;\r\n        let y = this.ViewState.CellSize * 2.5;\r\n        ctx_overlay.clearRect(0, 0, this.CANV_SIZE, this.CANV_SIZE);\r\n        if (this.ViewState.message === '') {\r\n            return this.canv_overlay;\r\n        }\r\n        ctx_overlay.shadowBlur = 10;\r\n        ctx_overlay.shadowColor = 'rgba(100, 100, 100, 0.5)';\r\n        ctx_overlay.shadowOffsetX = 5;\r\n        ctx_overlay.shadowOffsetY = 5;\r\n        ctx_overlay.globalAlpha = 0.9;\r\n        ctx_overlay.fillStyle = params.COLOR_WHITE;\r\n        Utils.FillRoundRect(ctx_overlay, x, y, this.ViewState.CellSize * 3.4, this.ViewState.CellSize * 1, this.ViewState.CellSize / 7);\r\n        let fontsize = Math.round(this.ViewState.CellSize * 0.36);\r\n        ctx_overlay.shadowBlur = 0;\r\n        ctx_overlay.shadowOffsetX = 0;\r\n        ctx_overlay.shadowOffsetY = 0;\r\n        ctx_overlay.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        ctx_overlay.font = 'bold ' + fontsize + 'px Play,sans-serif';\r\n        ctx_overlay.globalAlpha = 1;\r\n        ctx_overlay.fillStyle = params.COLOR_LINE;\r\n        ctx_overlay.textBaseline = 'middle';\r\n        ctx_overlay.textAlign = 'center';\r\n        ctx_overlay.beginPath();\r\n        ctx_overlay.fillText(this.ViewState.message, this.ViewState.CellSize * 3, this.ViewState.CellSize * 3);\r\n        return this.canv_overlay;\r\n    }\r\n}\r\n","export class UIController {\r\n    /**\r\n     * ツイートボタンを読み込む。\r\n     */\r\n    setTweet() {\r\n        /*jshint -W030 */\r\n        (function f(d, s, id) {\r\n            let js, fjs = d.getElementsByTagName(s)[0];\r\n            if (!d.getElementById(id)) {\r\n                js = d.createElement(s);\r\n                js.id = id;\r\n                js.async = true;\r\n                js.src = 'https://platform.twitter.com/widgets.js';\r\n                fjs.parentNode.insertBefore(js, fjs);\r\n            }\r\n        })(document, 'script', 'twitter-wjs');\r\n    }\r\n    /**\r\n     * ログをツイートする。\r\n     */\r\n    tweetlog(startMap, logArray2, level) {\r\n        let url = document.location.href.split('?')[0];\r\n        let init = '?init=' + startMap[55] + ',' +\r\n            startMap[45] + ',' +\r\n            startMap[35] + ',' +\r\n            startMap[25] + ',' +\r\n            startMap[15] + ',' +\r\n            startMap[5] + ',' +\r\n            startMap[44] + ',' +\r\n            startMap[14];\r\n        let log = '%26log=' + this.encodeLog(logArray2);\r\n        log += '%26lv=' + level;\r\n        window.open('https://twitter.com/intent/tweet?text=' + url + init + log + '%20%23colamone');\r\n    }\r\n    /**\r\n * 検討画面に飛ぶ\r\n */\r\n    jumpkento(startMap, logArray2, level) {\r\n        let url = document.location.href.split('?')[0];\r\n        let init = '?init=' + startMap[55] + ',' +\r\n            startMap[45] + ',' +\r\n            startMap[35] + ',' +\r\n            startMap[25] + ',' +\r\n            startMap[15] + ',' +\r\n            startMap[5] + ',' +\r\n            startMap[44] + ',' +\r\n            startMap[14];\r\n        let log = '&log=' + this.encodeLog(logArray2);\r\n        log += '&lv=' + level;\r\n        location.href = url + init + log;\r\n    }\r\n    /**\r\n     * ログをエンコード\r\n     */\r\n    encodeLog(wklogArray) {\r\n        let logstr = '';\r\n        let arrow = ['q', 'w', 'e',\r\n            'a', 's', 'd',\r\n            'z', 'x', 'c'];\r\n        for (let i in wklogArray) {\r\n            let from = wklogArray[i][0];\r\n            let to = wklogArray[i][1];\r\n            let x_vec = ((Math.floor(to / 10)) - Math.floor(from / 10));\r\n            let y_vec = ((Math.floor(to % 10)) - Math.floor(from % 10));\r\n            let arw = '';\r\n            if (x_vec === -1 && y_vec === -1) {\r\n                arw = 'q';\r\n            }\r\n            if (x_vec === 0 && y_vec === -1) {\r\n                arw = 'w';\r\n            }\r\n            if (x_vec === 1 && y_vec === -1) {\r\n                arw = 'e';\r\n            }\r\n            if (x_vec === -1 && y_vec === 0) {\r\n                arw = 'a';\r\n            }\r\n            if (x_vec === 0 && y_vec === 0) {\r\n                arw = 's';\r\n            }\r\n            if (x_vec === 1 && y_vec === 0) {\r\n                arw = 'd';\r\n            }\r\n            if (x_vec === -1 && y_vec === 1) {\r\n                arw = 'z';\r\n            }\r\n            if (x_vec === 0 && y_vec === 1) {\r\n                arw = 'x';\r\n            }\r\n            if (x_vec === 1 && y_vec === 1) {\r\n                arw = 'c';\r\n            }\r\n            logstr += from + arw;\r\n        }\r\n        return logstr;\r\n    }\r\n    updateScore(blue, red, time = null, wins = null) {\r\n        document.querySelector('#blue').innerHTML = 'Blue: ' + blue + '/8';\r\n        document.querySelector('#red').innerHTML = ' Red: ' + red + '/8';\r\n        document.querySelector('#time').innerHTML = time === null ? '' : '(' + (time.toFixed(3)) + 'sec)';\r\n        document.querySelector('#wins').innerHTML = wins === null ? '' : wins + ' win!';\r\n    }\r\n    setLevel(level) {\r\n        document.querySelector('#level').value = level.toString();\r\n    }\r\n    getLevel() {\r\n        return parseInt(document.querySelector('#level').value);\r\n    }\r\n    manual(show) {\r\n        var _a, _b;\r\n        if (show) {\r\n            (_a = document.querySelector('.manual')) === null || _a === void 0 ? void 0 : _a.classList.remove(\"hide\");\r\n        }\r\n        else {\r\n            (_b = document.querySelector('.manual')) === null || _b === void 0 ? void 0 : _b.classList.add(\"hide\");\r\n        }\r\n    }\r\n    logMenu(show) {\r\n        if (show) {\r\n            document.querySelector('#log').classList.remove(\"hide\");\r\n            document.querySelector('#prevprev').classList.remove(\"hide\");\r\n            document.querySelector('#prev').classList.remove(\"hide\");\r\n            document.querySelector('#next').classList.remove(\"hide\");\r\n            document.querySelector('#nextnext').classList.remove(\"hide\");\r\n            document.querySelector('#span_replay').classList.add(\"hide\");\r\n            document.querySelector('#span_tweetlog').classList.add(\"hide\");\r\n            document.querySelector('#next').focus();\r\n        }\r\n        else {\r\n            document.querySelector('#log').classList.add(\"hide\");\r\n            document.querySelector('#prevprev').classList.add(\"hide\");\r\n            document.querySelector('#prev').classList.add(\"hide\");\r\n            document.querySelector('#next').classList.add(\"hide\");\r\n            document.querySelector('#nextnext').classList.add(\"hide\");\r\n            document.querySelector('#span_replay').classList.add(\"hide\");\r\n            document.querySelector('#span_tweetlog').classList.add(\"hide\");\r\n        }\r\n    }\r\n    /**\r\n     * ゲーム終了\r\n     */\r\n    endgame(logArray) {\r\n        if (logArray.length === 0) {\r\n            document.querySelector('#span_replay').classList.remove(\"hide\");\r\n            document.querySelector('#span_tweetlog').classList.remove(\"hide\");\r\n        }\r\n    }\r\n    /**\r\n     * 小さい画面ではViewportを固定化\r\n     */\r\n    zoom() {\r\n        let viewport = document.querySelector('meta[name=viewport]');\r\n        if (screen.width < 500 && screen.height < 500) {\r\n            if (screen.width < screen.height) {\r\n                viewport.setAttribute('content', 'width=500,user-scalable=no');\r\n            }\r\n            else {\r\n                viewport.setAttribute('content', 'height=500,user-scalable=no');\r\n            }\r\n        }\r\n        else if (screen.width < 500) {\r\n            viewport.setAttribute('content', 'width=500,user-scalable=no');\r\n        }\r\n        else if (screen.height < 500) {\r\n            viewport.setAttribute('content', 'height=500,user-scalable=no');\r\n        }\r\n        // iOS9のViewportはなぜか機能してくれない。\r\n        if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {\r\n            let w = screen.width;\r\n            let w2 = 520;\r\n            if (Math.abs(window.orientation) !== 0) {\r\n                w = screen.height;\r\n                w2 = 900;\r\n            }\r\n            let rate = Math.round((w / w2) * 1000) / 1000.0;\r\n            if (rate == Math.round(rate)) { // iOS 9のViewportは整数指定すると機能しない\r\n                rate += 0.0001;\r\n            }\r\n            viewport.setAttribute('content', 'initial-scale=' + rate + ', minimum-scale=' + rate + ', maximum-scale=' + rate + ', user-scalable=no');\r\n        }\r\n    }\r\n}\r\n","/* @license Copyright (c) @kurehajime / source code: https://github.com/kurehajime/colamone_js */\r\nimport { Rule } from \"./rule\";\r\nimport { Aijs } from \"./ai\";\r\nimport { GameState } from \"../state/gamestate\";\r\nimport { View } from \"../canvas/view\";\r\nimport { UIController } from \"./uiController\";\r\nexport class BoardGamejs {\r\n    constructor() {\r\n        this.gameState = new GameState();\r\n        this.view = new View();\r\n        this.uiController = new UIController();\r\n        this.thinktime = 0.0;\r\n        this.intervalID = null;\r\n        this.intervalID_log = null;\r\n        this.startMap = new Int8Array();\r\n        this.logPointer = 0;\r\n        this.logArray = [];\r\n        this.logArray2 = [];\r\n        this.storage = null;\r\n        /**\r\n         * マウス移動時処理\r\n         */\r\n        this.ev_mouseMove = (e) => {\r\n            this.getMousePosition(e);\r\n            this.view.flush(this.gameState, false, true);\r\n        };\r\n        /**\r\n         * タッチ移動時処理\r\n         */\r\n        this.ev_touchMove = (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        };\r\n        /**\r\n         * マウスクリック時処理\r\n         */\r\n        this.ev_mouseClick = (e) => {\r\n            this.getMousePosition(e);\r\n            let target = Math.floor(this.view.ViewState.mouse_x / this.view.ViewState.CellSize) * 10 + Math.floor(this.view.ViewState.mouse_y / this.view.ViewState.CellSize);\r\n            if (this.gameState.winner !== null || this.logArray.length !== 0) {\r\n                this.reloadnew();\r\n                return true;\r\n            }\r\n            if (this.view.ViewState.demo === true) {\r\n                this.view.ViewState.demo = false;\r\n                this.gameState.thisHand = undefined;\r\n                this.gameState.thisMap = Rule.copyMap(this.startMap);\r\n                this.logArray2 = [];\r\n                this.view.flush(this.gameState, false, false);\r\n                this.gameState.winner = null;\r\n                this.gameState.goaled = false;\r\n                this.gameState.turn_player = 1;\r\n                window.clearInterval(this.intervalID);\r\n                this.view.flush(this.gameState, false, false);\r\n                return true;\r\n            }\r\n            if (this.gameState.hover_piece === null) {\r\n                if (this.gameState.thisMap[target] * this.gameState.turn_player > 0) {\r\n                    this.gameState.hover_piece = target;\r\n                }\r\n            }\r\n            else {\r\n                if (target == this.gameState.hover_piece) {\r\n                    this.gameState.hover_piece = null;\r\n                    this.view.flush(this.gameState, false, false);\r\n                    return true;\r\n                }\r\n                let canm = Rule.getCanMovePanelX(this.gameState.hover_piece, this.gameState.thisMap);\r\n                if (canm.indexOf(target) >= 0) {\r\n                    this.view.flush(this.gameState, false, true);\r\n                    if (this.isGoaled(target, this.gameState.turn_player)) {\r\n                        this.gameState.goaled = true;\r\n                        this.view.flush(this.gameState, false, true);\r\n                        setTimeout(() => {\r\n                            this.gameState.goaled = false;\r\n                            this.view.flush(this.gameState, false, false);\r\n                        }, 2000);\r\n                    }\r\n                    this.gameState.thisMap[target] = this.gameState.thisMap[this.gameState.hover_piece];\r\n                    this.gameState.thisMap[this.gameState.hover_piece] = 0;\r\n                    this.gameState.turn_player = this.gameState.turn_player * -1;\r\n                    this.logArray2.push([this.gameState.hover_piece, target]);\r\n                    this.gameState.thisHand = [this.gameState.hover_piece, target];\r\n                    this.gameState.hover_piece = null;\r\n                    // AIが考える。\r\n                    this.view.ViewState.message = 'thinking...';\r\n                    window.setTimeout(() => {\r\n                        this.view.flush(this.gameState, false, false);\r\n                    }, 50);\r\n                    this.updateMessage();\r\n                    if (this.gameState.winner === null) {\r\n                        window.setTimeout(() => {\r\n                            this.ai(this.gameState.level);\r\n                            this.view.ViewState.message = '';\r\n                            this.updateMessage();\r\n                            this.view.flush(this.gameState, false, false);\r\n                        }, 250);\r\n                    }\r\n                }\r\n            }\r\n            this.view.flush(this.gameState, false, false);\r\n            return true;\r\n        };\r\n        /**\r\n         * ラジオボタン変更時処理\r\n         */\r\n        this.ev_radioChange = () => {\r\n            let wins = null;\r\n            this.gameState.level = this.uiController.getLevel();\r\n            this.storage.setItem('level_save', this.gameState.level);\r\n            if (this.storage.getItem('level_' + this.gameState.level) > 0) {\r\n                wins = this.storage.getItem('level_' + this.gameState.level);\r\n            }\r\n            this.gameState.thisMap = Rule.copyMap(this.startMap);\r\n            this.gameState.thisHand = undefined;\r\n            this.gameState.map_list = {};\r\n            this.logArray2 = [];\r\n            this.view.flush(this.gameState, false, false);\r\n            this.uiController.updateScore(this.gameState.blueScore, this.gameState.redScore, null, wins);\r\n        };\r\n        try {\r\n            if (window == parent && ('localStorage' in window) && window.localStorage !== null) {\r\n                this.storage = localStorage;\r\n                this.storage.setItem('test', 0); // Safariのプライベートモードは、できないのにできるって言うからかまをかけてみる。\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.storage = null;\r\n        }\r\n        if (this.storage === null) {\r\n            // localStorageが使えない場合\r\n            this.storage = {}; // ダミー\r\n            this.storage.getItem = function () { return undefined; };\r\n            this.storage.setItem = function () { return undefined; };\r\n            if (navigator.cookieEnabled) {\r\n                this.storage.hasItem = function (sKey) {\r\n                    return (new RegExp('(?:^|;\\\\s*)' + escape(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=')).test(document.cookie);\r\n                };\r\n                this.storage.getItem = function (sKey) {\r\n                    if (!sKey || !(new RegExp('(?:^|;\\\\s*)' + escape(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=')).test(document.cookie)) {\r\n                        return null;\r\n                    }\r\n                    return unescape(document.cookie.replace(new RegExp('(?:^|.*;\\\\s*)' + escape(sKey).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*'), '$1'));\r\n                };\r\n                this.storage.setItem = function (sKey, sValue) {\r\n                    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) {\r\n                        return;\r\n                    }\r\n                    document.cookie = escape(sKey) + '=' + escape(sValue);\r\n                };\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * ゲーム開始\r\n     */\r\n    Run() {\r\n        this.uiController.zoom(); // 小さい端末でズーム\r\n        this.uiController.manual(window.innerHeight < window.innerWidth);\r\n        this.gameState.turn_player = 1;\r\n        this.view.ViewState.demo = true;\r\n        this.view.init();\r\n        if ('ontouchstart' in window) {\r\n            this.view.ViewState.isTouch = true;\r\n        }\r\n        else {\r\n            this.view.ViewState.isTouch = false;\r\n        }\r\n        // イベントを設定\r\n        if (this.view.ViewState.isTouch) {\r\n            document.querySelector('#canv').addEventListener('touchstart', this.ev_mouseClick);\r\n            document.querySelector('#canv').addEventListener('touchmove', this.ev_touchMove, { passive: false });\r\n        }\r\n        else {\r\n            document.querySelector('#canv').addEventListener('mousemove', this.ev_mouseMove);\r\n            document.querySelector('#canv').addEventListener('mouseup', this.ev_mouseClick);\r\n        }\r\n        document.querySelector('#level').addEventListener('change', this.ev_radioChange);\r\n        document.querySelector('#prevprev').addEventListener('click', () => { this.move_start(); });\r\n        document.querySelector('#prev').addEventListener('click', () => { this.move_prev(); });\r\n        document.querySelector('#next').addEventListener('click', () => { this.move_next(); });\r\n        document.querySelector('#nextnext').addEventListener('click', () => { this.move_end(); });\r\n        document.querySelector('#replay').addEventListener('click', () => { this.uiController.jumpkento(this.startMap, this.logArray2, this.gameState.level); });\r\n        document.querySelector('#tweetlog').addEventListener('click', () => { this.uiController.tweetlog(this.startMap, this.logArray2, this.gameState.level); });\r\n        document.querySelector('#newgame').addEventListener('click', () => { this.reloadnew(); });\r\n        document.querySelector('#collapsible').addEventListener('click', () => {\r\n            document.querySelector('.manual').classList.toggle(\"hide\");\r\n            if (window.innerHeight > window.innerWidth) {\r\n                var element = document.documentElement;\r\n                var bottom = element.scrollHeight - element.clientHeight;\r\n                window.scroll(0, bottom);\r\n            }\r\n        });\r\n        window.addEventListener('orientationchange', this.uiController.zoom);\r\n        this.shuffleBoard();\r\n        // 連勝記録初期化\r\n        if (!this.storage.getItem('level_1')) {\r\n            this.storage.setItem('level_1', 0);\r\n        }\r\n        if (!this.storage.getItem('level_2')) {\r\n            this.storage.setItem('level_2', 0);\r\n        }\r\n        if (!this.storage.getItem('level_3')) {\r\n            this.storage.setItem('level_3', 0);\r\n        }\r\n        if (!this.storage.getItem('level_4')) {\r\n            this.storage.setItem('level_4', 0);\r\n        }\r\n        if (!this.storage.getItem('level_5')) {\r\n            this.storage.setItem('level_5', 0);\r\n        }\r\n        // レベル記憶\r\n        if (this.storage.getItem('level_save') !== undefined && this.storage.getItem('level_save') !== 'undefined' && this.storage.getItem('level_save') !== null) {\r\n            this.gameState.level = parseInt(this.storage.getItem('level_save'));\r\n        }\r\n        else {\r\n            this.storage.setItem('level_save', 1);\r\n            this.gameState.level = 1;\r\n        }\r\n        // パラメータを取得\r\n        let paramObj = this.getParam();\r\n        // 盤面を初期化\r\n        if (paramObj.init) {\r\n            this.startMap = this.getMapByParam(paramObj.init);\r\n            this.gameState.thisMap = Rule.copyMap(this.startMap);\r\n        }\r\n        else {\r\n            this.startMap = Rule.copyMap(this.gameState.thisMap);\r\n        }\r\n        // ログをデコード\r\n        if (paramObj.log) {\r\n            this.logArray = this.decodeLog(paramObj.log, this.startMap);\r\n        }\r\n        // レベル取得\r\n        if (paramObj.lv) {\r\n            this.gameState.level = parseInt(paramObj.lv);\r\n        }\r\n        this.uiController.setLevel(this.gameState.level);\r\n        this.uiController.logMenu(this.logArray.length !== 0);\r\n        // 画像読み込み成功時\r\n        this.view.ViewState.Img_bk.onload = () => {\r\n            this.view.ViewState.Img_bk_loaded = true;\r\n            this.view.flush(this.gameState, true, false);\r\n        };\r\n        // 画像読み込み失敗時\r\n        this.view.ViewState.Img_bk.onerror = () => {\r\n            this.view.flush(this.gameState, true, false);\r\n        };\r\n        // もう既に読み込み終わってた時\r\n        if (this.view.ViewState.Img_bk.width !== 0) {\r\n            this.view.ViewState.Img_bk_loaded = true;\r\n            this.view.flush(this.gameState, true, false);\r\n        }\r\n        // 2.5秒後に強制描画※Googleの検索結果から飛ぶとなぜか描画が走らない事があるので。\r\n        setTimeout(() => {\r\n            if (this.view.ViewState.Img_bk.width !== 0) {\r\n                this.view.ViewState.Img_bk_loaded = true;\r\n            }\r\n            this.view.flush(this.gameState, true, false);\r\n        }, 2500);\r\n        this.updateMessage();\r\n        this.uiController.setTweet(); // ツイートボタンを生成\r\n        if (this.logArray.length === 0) {\r\n            if (this.isBot() == false) {\r\n                window.setTimeout(() => {\r\n                    if (this.view.ViewState.demo == true) {\r\n                        this.intervalID = window.setInterval(() => { this.playDemo(); }, 400);\r\n                        this.playDemo();\r\n                    }\r\n                }, 500);\r\n            }\r\n        }\r\n        else {\r\n            this.view.ViewState.demo = false;\r\n            this.view.ViewState.autoLog = true;\r\n            this.intervalID_log = window.setInterval(() => { this.playLog(); }, 1000);\r\n        }\r\n        this.gameState.goaled = false;\r\n        this.view.flush(this.gameState, true, false);\r\n    }\r\n    /**\r\n     * Demoを再生\r\n     */\r\n    playDemo() {\r\n        if (this.intervalID !== null) {\r\n            if (Math.random() > 0.3) {\r\n                this.ai(2);\r\n            }\r\n            else {\r\n                this.ai(1);\r\n            }\r\n        }\r\n        this.view.ViewState.demo_inc++;\r\n        this.calcScore();\r\n        this.view.flush(this.gameState, false, false);\r\n        if (this.gameState.winner === 1 || this.gameState.winner === -1 || this.gameState.winner === 0) {\r\n            this.gameState.goaled = true;\r\n            this.gameState.winner = null;\r\n            this.view.flush(this.gameState, false, false);\r\n            this.shuffleBoard();\r\n        }\r\n        if (this.view.ViewState.demo_inc > 42) {\r\n            window.clearInterval(this.intervalID);\r\n        }\r\n    }\r\n    /**\r\n     * Logを再生\r\n     */\r\n    playLog() {\r\n        if (this.intervalID_log !== null && this.view.ViewState.autoLog == true) {\r\n            this.move_next();\r\n        }\r\n        else {\r\n            clearInterval(this.intervalID_log);\r\n        }\r\n    }\r\n    /**\r\n     * AIに考えてもらう。\r\n     */\r\n    ai(level) {\r\n        let hand;\r\n        let startTime = new Date();\r\n        let endTime;\r\n        // 終盤になったら長考してみる。\r\n        let count = this.getNodeCount(this.gameState.thisMap) / 2;\r\n        let plus = 0;\r\n        switch (level) {\r\n            case 1:\r\n                if (count <= 7) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 2:\r\n                if (count <= 8) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 3:\r\n                if (count <= 10) {\r\n                    plus++;\r\n                }\r\n                if (count <= 6) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 4:\r\n                if (count <= 11) {\r\n                    plus++;\r\n                }\r\n                if (count <= 7) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 5:\r\n                if (count > 16) {\r\n                    plus--;\r\n                }\r\n                if (count <= 12) {\r\n                    plus++;\r\n                }\r\n                if (count <= 8) {\r\n                    plus++;\r\n                }\r\n                break;\r\n            case 6:\r\n                if (count > 16) {\r\n                    plus--;\r\n                }\r\n                if (count <= 12) {\r\n                    plus++;\r\n                }\r\n                if (count <= 8) {\r\n                    plus++;\r\n                }\r\n                break;\r\n        }\r\n        hand = Aijs.thinkAI(this.gameState.thisMap, this.gameState.turn_player, level + plus + 1, undefined, undefined, undefined)[0];\r\n        this.gameState.thisHand = hand;\r\n        if (hand) {\r\n            if (this.isGoaled(hand[1], this.gameState.turn_player)) {\r\n                this.gameState.goaled = true;\r\n                this.view.flush(this.gameState, false, true);\r\n                setTimeout(() => {\r\n                    this.gameState.goaled = false;\r\n                    this.view.flush(this.gameState, false, false);\r\n                }, 2000);\r\n            }\r\n            this.gameState.thisMap[hand[1]] = this.gameState.thisMap[hand[0]];\r\n            this.gameState.thisMap[hand[0]] = 0;\r\n            this.logArray2.push([hand[0], hand[1]]);\r\n            // //フォーカス座標を移す。\r\n            // mouse_x = Math.floor(hand[1] / 10)*cellSize+1\r\n            // mouse_y = Math.floor(hand[1] % 10)*cellSize+1\r\n        }\r\n        this.gameState.turn_player = this.gameState.turn_player * -1;\r\n        endTime = new Date();\r\n        this.thinktime = (endTime.getTime() - startTime.getTime()) / 1000;\r\n    }\r\n    /**\r\n     * ゴールしたか\r\n     */\r\n    isGoaled(afterHand, turn) {\r\n        if (turn > 0) {\r\n            if (afterHand % 10 === 0) {\r\n                return true;\r\n            }\r\n        }\r\n        else if (turn < 0) {\r\n            if (afterHand % 10 === 5) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 盤面をシャッフル。\r\n     */\r\n    shuffleBoard() {\r\n        // クリア\r\n        for (let num in this.gameState.thisMap) {\r\n            this.gameState.thisMap[num] = 0;\r\n        }\r\n        let arr = [1, 2, 3, 4, 5, 6, 7, 8];\r\n        let red_num = [0, 10, 20, 30, 40, 50, 11, 41];\r\n        let blue_num = [55, 45, 35, 25, 15, 5, 44, 14];\r\n        for (let i = arr.length - 1; i >= 0; i--) {\r\n            let r = Math.floor(Math.random() * (i + 1));\r\n            let tmp = arr[i];\r\n            arr[i] = arr[r];\r\n            arr[r] = tmp;\r\n        }\r\n        for (let num in blue_num) {\r\n            this.gameState.thisMap[blue_num[num]] = arr[num];\r\n        }\r\n        for (let num in red_num) {\r\n            this.gameState.thisMap[red_num[num]] = -1 * arr[num];\r\n        }\r\n    }\r\n    /**\r\n     * マウス位置取得\r\n     */\r\n    getMousePosition(e) {\r\n        if (e == null) {\r\n            return;\r\n        }\r\n        if (!e.clientX) { // SmartPhone\r\n            if (e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            else if (e.touches) {\r\n                e = e.touches[0];\r\n            }\r\n            else {\r\n                e = event === null || event === void 0 ? void 0 : event.touches[0];\r\n            }\r\n        }\r\n        let rect = e.target.getBoundingClientRect();\r\n        this.view.ViewState.mouse_x = e.clientX - rect.left;\r\n        this.view.ViewState.mouse_y = e.clientY - rect.top;\r\n        this.view.ViewState.mouse_x = this.view.ViewState.mouse_x * this.view.ViewState.Ratio;\r\n        this.view.ViewState.mouse_y = this.view.ViewState.mouse_y * this.view.ViewState.Ratio;\r\n    }\r\n    /**\r\n     * メッセージを更新\r\n     */\r\n    updateMessage() {\r\n        let wins = null;\r\n        this.calcScore();\r\n        if (this.logArray.length === 0) {\r\n            if (this.gameState.winner == 1) {\r\n                this.view.ViewState.message = 'You win!';\r\n                this.storage.setItem('level_' + this.gameState.level, parseInt(this.storage.getItem('level_' + this.gameState.level)) + 1);\r\n                this.uiController.endgame(this.logArray);\r\n            }\r\n            else if (this.gameState.winner == -1) {\r\n                this.view.ViewState.message = 'You lose...';\r\n                this.storage.setItem('level_' + this.gameState.level, 0);\r\n                this.uiController.endgame(this.logArray);\r\n            }\r\n            else if (this.gameState.winner === 0) {\r\n                if (this.gameState.map_list[JSON.stringify(this.gameState.thisMap)] >= Rule.LIMIT_1000DAY) {\r\n                    this.view.ViewState.message = '3fold repetition';\r\n                }\r\n                else {\r\n                    this.view.ViewState.message = '-- Draw --';\r\n                }\r\n                this.uiController.endgame(this.logArray);\r\n            }\r\n        }\r\n        if (this.storage.getItem('level_' + this.gameState.level) > 0) {\r\n            wins = this.storage.getItem('level_' + this.gameState.level);\r\n        }\r\n        this.uiController.updateScore(this.gameState.blueScore, this.gameState.redScore, this.thinktime, wins);\r\n    }\r\n    /**\r\n     * 得点計算。\r\n     */\r\n    calcScore() {\r\n        let sum1 = 0;\r\n        let sum2 = 0;\r\n        let GoalTop = [0, 10, 20, 30, 40, 50];\r\n        let GoalBottom = [5, 15, 25, 35, 45, 55];\r\n        // 点数勝利        \r\n        for (let i in GoalTop) {\r\n            if (this.gameState.thisMap[GoalTop[i]] * 1 > 0) {\r\n                sum1 += this.gameState.thisMap[GoalTop[i]];\r\n            }\r\n        }\r\n        for (let i in GoalBottom) {\r\n            if (this.gameState.thisMap[GoalBottom[i]] * -1 > 0) {\r\n                sum2 += this.gameState.thisMap[GoalBottom[i]];\r\n            }\r\n        }\r\n        if (sum1 >= 8) {\r\n            this.gameState.winner = 1;\r\n        }\r\n        else if (sum2 <= -8) {\r\n            this.gameState.winner = -1;\r\n        }\r\n        // 手詰まりは判定\r\n        if (this.isNoneNode(this.gameState.thisMap)) {\r\n            if (Math.abs(sum1) > Math.abs(sum2)) {\r\n                this.gameState.winner = 1;\r\n            }\r\n            else if (Math.abs(sum1) < Math.abs(sum2)) { // 引き分けは後攻勝利\r\n                this.gameState.winner = -1;\r\n            }\r\n            else if (Math.abs(sum1) == Math.abs(sum2)) {\r\n                this.gameState.winner = 0;\r\n            }\r\n        }\r\n        else {\r\n            const [is1000day, map_list] = Rule.is1000day(this.gameState.thisMap, this.gameState.map_list);\r\n            this.gameState.map_list = map_list;\r\n            if (is1000day) {\r\n                this.gameState.winner = 0;\r\n            }\r\n        }\r\n        this.gameState.blueScore = Math.abs(sum1);\r\n        this.gameState.redScore = Math.abs(sum2);\r\n    }\r\n    /**\r\n     * 手詰まり判定。\r\n     */\r\n    isNoneNode(wkMap) {\r\n        let flag1 = false;\r\n        let flag2 = false;\r\n        for (let panel_num in wkMap) {\r\n            if (wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Rule.getCanMovePanelX(parseInt(panel_num), wkMap);\r\n            if (canMove.length !== 0) {\r\n                if (wkMap[panel_num] > 0) {\r\n                    flag1 = true;\r\n                }\r\n                else if (wkMap[panel_num] < 0) {\r\n                    flag2 = true;\r\n                }\r\n            }\r\n            if (flag1 && flag2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * 手の数を取得\r\n     */\r\n    getNodeCount(wkMap) {\r\n        let count = 0;\r\n        for (let panel_num in wkMap) {\r\n            if (wkMap[panel_num] === 0) {\r\n                continue;\r\n            }\r\n            let canMove = Rule.getCanMovePanelX(parseInt(panel_num), wkMap);\r\n            count += canMove.length;\r\n        }\r\n        return count;\r\n    }\r\n    /**\r\n     * パラメータ取得\r\n     */\r\n    getParam() {\r\n        let obj = {};\r\n        if (1 < document.location.search.length) {\r\n            let paramstr = document.location.search.substring(1).split('&');\r\n            for (let i = 0; i < paramstr.length; i++) {\r\n                let entry = paramstr[i].split('=');\r\n                let key = decodeURIComponent(entry[0]);\r\n                let value = decodeURIComponent(entry[1]);\r\n                obj[key] = decodeURIComponent(value);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    /**\r\n     * パタメータから初期配置を取得\r\n     */\r\n    getMapByParam(initString) {\r\n        let wkMap;\r\n        if (initString) {\r\n            wkMap = Rule.copyMap(this.gameState.thisMap);\r\n            // クリア\r\n            for (let num in wkMap) {\r\n                wkMap[num] = 0;\r\n            }\r\n            let arr = initString.split(',');\r\n            if (arr.length < 8) {\r\n                arr = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\r\n            }\r\n            let red_num = [0, 10, 20, 30, 40, 50, 11, 41];\r\n            let blue_num = [55, 45, 35, 25, 15, 5, 44, 14];\r\n            for (let num in blue_num) {\r\n                wkMap[blue_num[num]] = parseInt(arr[num]);\r\n            }\r\n            for (let num in red_num) {\r\n                wkMap[red_num[num]] = -1 * parseInt(arr[num]);\r\n            }\r\n        }\r\n        return wkMap;\r\n    }\r\n    /**\r\n     * ログをデコード。\r\n     */\r\n    decodeLog(logstr, wkInitMap) {\r\n        let wklogArray = [];\r\n        let wkMap = Rule.copyMap(wkInitMap);\r\n        let arrow = {\r\n            'q': 0, 'w': 1, 'e': 2,\r\n            'a': 3, 's': 4, 'd': 5,\r\n            'z': 6, 'x': 7, 'c': 8\r\n        };\r\n        logstr = logstr.replace(/q/g, 'q,').replace(/w/g, 'w,').replace(/e/g, 'e,');\r\n        logstr = logstr.replace(/a/g, 'a,').replace(/s/g, 's,').replace(/d/g, 'd,');\r\n        logstr = logstr.replace(/z/g, 'z,').replace(/x/g, 'x,').replace(/c/g, 'c,');\r\n        let logArr = logstr.split(',');\r\n        wklogArray.push(wkMap);\r\n        for (let i = 0; i < logArr.length; i++) {\r\n            if (logArr[i] === '') {\r\n                continue;\r\n            }\r\n            let arw = arrow[logArr[i].match(/[qweasdzxc]/)[0]];\r\n            let from = parseInt(logArr[i].match(/\\d*/)[0]);\r\n            let to = (Math.floor(from / 10) + Math.floor(arw % 3) - 1) * 10 +\r\n                (Math.floor(from % 10) + Math.floor(arw / 3) - 1);\r\n            wkMap = Rule.copyMap(wkMap);\r\n            wkMap[to] = wkMap[from];\r\n            wkMap[from] = 0;\r\n            wklogArray.push(wkMap);\r\n        }\r\n        return wklogArray;\r\n    }\r\n    /**\r\n     * ログを全部巻き戻す\r\n     */\r\n    move_start() {\r\n        this.logPointer = 0;\r\n        this.view.ViewState.autoLog = false;\r\n        this.gameState.thisMap = Rule.copyMap(this.logArray[this.logPointer]);\r\n        this.gameState.winner = null;\r\n        this.gameState.goaled = false;\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * ログを戻す\r\n     */\r\n    move_prev() {\r\n        if (this.logPointer <= 0) {\r\n            return;\r\n        }\r\n        this.view.ViewState.autoLog = false;\r\n        this.logPointer -= 1;\r\n        this.gameState.thisMap = Rule.copyMap(this.logArray[this.logPointer]);\r\n        this.gameState.winner = null;\r\n        this.gameState.goaled = false;\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * ログを進める\r\n     */\r\n    move_next() {\r\n        if (this.logPointer + 1 > this.logArray.length - 1) {\r\n            return;\r\n        }\r\n        this.logPointer += 1;\r\n        this.gameState.thisMap = Rule.copyMap(this.logArray[this.logPointer]);\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * ログを最後まで進める。\r\n     */\r\n    move_end() {\r\n        this.logPointer = this.logArray.length - 1;\r\n        this.view.ViewState.autoLog = false;\r\n        this.gameState.thisMap = Rule.copyMap(this.logArray[this.logPointer]);\r\n        this.updateMessage();\r\n        this.view.flush(this.gameState, false, false);\r\n    }\r\n    /**\r\n     * リセット\r\n     */\r\n    reloadnew() {\r\n        let url = document.location.href.split('?')[0];\r\n        //demo中ならdemoを終了\r\n        if (this.view.ViewState.demo === true) {\r\n            this.ev_mouseClick(null);\r\n            return;\r\n        }\r\n        // パラメータを取得\r\n        let paramObj = this.getParam();\r\n        if (paramObj.lang) {\r\n            url += '?lang=' + paramObj.lang;\r\n        }\r\n        if (navigator.onLine) {\r\n            location.href = url;\r\n        }\r\n        else {\r\n            this.gameState.thisMap = Rule.copyMap(this.startMap);\r\n            this.shuffleBoard();\r\n            this.logArray2 = [];\r\n            this.view.ViewState.message = '';\r\n            this.gameState.winner = null;\r\n            this.gameState.turn_player = 1;\r\n            this.view.flush(this.gameState, false, false);\r\n        }\r\n    }\r\n    /**\r\n     * botかどうか判定\r\n     */\r\n    isBot() {\r\n        let ua = window.navigator.userAgent.toLowerCase();\r\n        if (ua.indexOf('bot') != -1 ||\r\n            ua.indexOf('lighthouse') != -1 ||\r\n            ua.indexOf('headless') != -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nconst bg = new BoardGamejs();\r\n/**\r\n * init\r\n */\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    bg.Run();\r\n});\r\n"],"names":["Rule","static","wkMap","Int8Array","nearwin","sum1","sum2","isNoneNode","live1","live2","i","num","NUMBERS","flag1","flag2","panel_num","hasCanMovePanelX","number","x","y","PIECES","target_x","target_y","target_number","canMove","idx","push","turn_player","nodeList","getCanMovePanelX","length","nodeMap","map_list","map_json","JSON","stringify","undefined","this","LIMIT_1000DAY","Eval","evalparam","ev","isDraw","end","isEndX","line","cell_p","p","DEFAULT_EVALPARAM","Aijs","map","depth","a","b","besthand","best_score","evalMap","getNodeMap","hand","map0","sc","deepThinkAllAB","GameState","constructor","goaled","blueScore","redScore","winner","thisHand","thisMap","hover_piece","level","COLOR_LINE","COLOR_PANEL_4","COLOR_SELECT","COLOR_RED","COLOR_BLUE","COLOR_WHITE","Utils","ctx","w","h","r","beginPath","moveTo","lineTo","bezierCurveTo","closePath","fill","ViewState","CellSize","Ratio","Img_bk_loaded","Img_bk","Image","mouse_x","mouse_y","isTouch","message","demo","demo_inc","autoLog","View","cache_on","CANV_SIZE","window","devicePixelRatio","src","canv_board","document","createElement","canv_board2","canv_focus","canv_pieces","canv_shadow","canv_hover_piece","canv_overlay","canv_bk","canv_cover","canv_score","canv_cache","init","querySelector","getContext","width","height","canvas","style","flush","gameState","initflg","cache_flg","clearRect","drawImage","drawBoard","drawBoard2","drawShadow","drawPieceAll","ctx_canv","drawHoverPiece","drawFocus","drawScore","drawOverlay","drawCover","drawBk","ctx_bk","ctx_cover","globalAlpha","fillStyle","fillRect","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","FillRoundRect","fontsize","Math","round","font","textBaseline","textAlign","fillText","ctx_score","blue","red","String","lineWidth","strokeStyle","stroke","ctx_focus","grad","createRadialGradient","addColorStop","target","canm","floor","arc","PI","ctx_board","createLinearGradient","strokeRect","ctx_board2","ctx_hover","drawPiece","wkCtx","goal","wkColor","save","clip","restore","abs","x_dot","y_dot","ctx_pieces","ctx_shadow","x0","y0","x1","y1","shadow_start_x","shadow_start_y","shadow_end_x","shadow_end_y","center","px1","py1","px2","py2","px3","py3","px4","py4","ctx_overlay","UIController","setTweet","d","s","id","js","fjs","getElementsByTagName","getElementById","async","parentNode","insertBefore","tweetlog","startMap","logArray2","url","location","href","split","log","encodeLog","open","jumpkento","wklogArray","logstr","from","to","x_vec","y_vec","arw","updateScore","time","wins","innerHTML","toFixed","setLevel","value","toString","getLevel","parseInt","manual","show","_a","_b","classList","remove","add","logMenu","focus","endgame","logArray","zoom","viewport","screen","setAttribute","test","navigator","userAgent","w2","orientation","rate","bg","view","uiController","thinktime","intervalID","intervalID_log","logPointer","storage","ev_mouseMove","e","getMousePosition","ev_touchMove","preventDefault","stopPropagation","ev_mouseClick","reloadnew","copyMap","clearInterval","indexOf","isGoaled","setTimeout","updateMessage","ai","ev_radioChange","setItem","getItem","parent","localStorage","cookieEnabled","hasItem","sKey","RegExp","escape","replace","cookie","unescape","sValue","Run","innerHeight","innerWidth","addEventListener","passive","move_start","move_prev","move_next","move_end","toggle","element","documentElement","bottom","scrollHeight","clientHeight","scroll","shuffleBoard","paramObj","getParam","getMapByParam","decodeLog","lv","onload","onerror","isBot","setInterval","playDemo","playLog","random","calcScore","endTime","startTime","Date","count","getNodeCount","plus","thinkAI","getTime","afterHand","turn","arr","red_num","blue_num","tmp","clientX","touches","event","rect","getBoundingClientRect","left","clientY","top","GoalTop","GoalBottom","is1000day","obj","search","paramstr","substring","entry","key","decodeURIComponent","initString","wkInitMap","arrow","logArr","match","lang","onLine","ua","toLowerCase"],"sourceRoot":""}